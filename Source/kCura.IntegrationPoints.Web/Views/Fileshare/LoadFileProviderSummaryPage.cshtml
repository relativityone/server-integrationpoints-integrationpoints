@using System.Text.RegularExpressions
@{
	ViewBag.Title = "Settings";
}
<link href="~/Content/buttermilk-overrides.css" rel="stylesheet" />
<link href="~/Content/modals.min.css" rel="stylesheet" />
<table id="summaryPage" class="innerTabTable">
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Name:</td>
					<td class="dynamicViewFieldValue" data-bind="text: name"></td>
				</tr>
			</table>
		</td>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Log Errors:</td>
					<td class="dynamicViewFieldValue" data-bind="text: logErrors"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Export Type:</td>
					<td class="dynamicViewFieldValue" data-bind="text: exportType()"></td>
				</tr>
			</table>
		</td>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Has Errors:</td>
					<td class="dynamicViewFieldValue" data-bind="text: hasErrors"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Source details:</td>
					<td class="dynamicViewFieldValue" data-bind="text: sourceDetails()"></td>
				</tr>
			</table>
		</td>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Email Notification Recipients:</td>
					<td class="dynamicViewFieldValue" data-bind="text: emailNotification"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Destination details:</td>
					<td class="dynamicViewFieldValue longTextField" data-bind="text: fileShareLocation"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Overwrite files:</td>
					<td class="dynamicViewFieldValue" data-bind="text: settings.OverwriteFiles ? 'Yes' : 'No'"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Start at record:</td>
					<td class="dynamicViewFieldValue" data-bind="text: settings.StartExportAtRecord"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportNatives || settings.ExportImages || settings.ExportFullTextAsFile">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Volume:</td>
					<td class="dynamicViewFieldValue" data-bind="text: volumeInfo()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportNatives || settings.ExportImages || settings.ExportFullTextAsFile">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Subdirectory:</td>
					<td class="dynamicViewFieldValue" data-bind="text: subdirectoryInfo()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Load file format:</td>
					<td class="dynamicViewFieldValue" data-bind="text: LoadFileFormat"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">File path:</td>
					<td class="dynamicViewFieldValue" data-bind="text: filePath()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Text and Native File Names:</td>
					<td class="dynamicViewFieldValue" data-bind="text: textAndNativeFileNames()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportImages">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Image file format:</td>
					<td class="dynamicViewFieldValue" data-bind="text: imageDataFileFormat()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportImages">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Image file type:</td>
					<td class="dynamicViewFieldValue" data-bind="text: imageFileType()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportImages && !isProductionSet()">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Image precedence:</td>
					<td class="dynamicViewFieldValue" data-bind="text: imagePrecedenceList()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportFullTextAsFile">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Text precedence:</td>
					<td class="dynamicViewFieldValue" data-bind="text: textPrecenceList()"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr data-bind="visible: settings.ExportFullTextAsFile">
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Text file encoding:</td>
					<td class="dynamicViewFieldValue" data-bind="text: TextFileEncoding"></td>
				</tr>
			</table>
		</td>
	</tr>
	<tr>
		<td class="editTableColumn">
			<table>
				<tr>
					<td class="dynamicViewFieldName">Multiple choice as nested:</td>
					<td class="dynamicViewFieldValue" data-bind="text: settings.ExportMultipleChoiceFieldsAsNested ? 'Yes' : 'No'"></td>
				</tr>
			</table>
		</td>
	</tr>
</table>

@*User-Agent of IE11 is
	'"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729; .NET CLR 3.5.30729; InfoPath.3; rv:11.0) like Gecko"'
	If Request.UserAgent matches regular expression then we render shims that provider ES6 features backwards compatibility.
	We don't check other IE versions because IE11 is only one supported now.
*@
@if (Regex.IsMatch(Request.UserAgent, @"Trident/7.*rv:11"))
{
	<script src="~/node_modules/es5-shim/es5-shim.min.js"></script>
	<script src="~/node_modules/es6-shim/es6-shim.min.js"></script>
}

<script src="~/Scripts/export/export-enums.js"></script>
<script src="~/Scripts/export/export-helpers.js"></script>
<script src="~/Scripts/export/export-summary-page.js"></script>
<script src="~/node_modules/moment/moment.js"></script>
