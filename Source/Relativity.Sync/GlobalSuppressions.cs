

// This file is used by Code Analysis to maintain SuppressMessage
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given
// a specific target and scoped to a namespace, type, member, etc.
#pragma warning disable RG2001 // Character Per Line

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Authentication.OAuth2ClientFactory.GetOauth2ClientAsync(System.Int32)~System.Threading.Tasks.Task{Relativity.Services.Security.Models.OAuth2Client}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.DataSourceSnapshotExecutor.ExecuteAsync(Relativity.Sync.Configuration.IDataSourceSnapshotConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.DestinationWorkspaceSavedSearchCreationExecutor.ExecuteAsync(Relativity.Sync.Configuration.IDestinationWorkspaceSavedSearchCreationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.DestinationWorkspaceTagLinker.LinkDestinationWorkspaceTagToJobHistoryAsync(System.Int32,System.Int32,System.Int32)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.TagSavedSearch.CreateTagSavedSearchAsync(Relativity.Sync.Configuration.IDestinationWorkspaceSavedSearchCreationConfiguration,System.Int32,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.DocumentFieldMappingValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.RelativitySourceCaseTagRepository.QueryRelativityObjectTagAsync(System.Int32,System.Int32,System.String,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Services.Objects.DataContracts.RelativityObject}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.RelativitySourceCaseTagRepository.CreateAsync(System.Int32,Relativity.Sync.Executors.RelativitySourceCaseTag)~System.Threading.Tasks.Task{Relativity.Sync.Executors.RelativitySourceCaseTag}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.RelativitySourceCaseTagRepository.UpdateAsync(System.Int32,Relativity.Sync.Executors.RelativitySourceCaseTag)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.RelativitySourceJobTagRepository.CreateAsync(System.Int32,Relativity.Sync.Executors.RelativitySourceJobTag,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.RelativitySourceJobTag}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.SnapshotPartitionExecutor.ExecuteAsync(Relativity.Sync.Configuration.ISnapshotPartitionConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.SourceWorkspaceTagsCreationExecutor.ExecuteAsync(Relativity.Sync.Configuration.ISourceWorkspaceTagsCreationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.TagSavedSearchFolder.CreateSearchContainerInRootAsync(System.Int32)~System.Threading.Tasks.Task{System.Int32}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.DestinationFolderValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.DestinationWorkspaceNameValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.EmailValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.FolderStructureBehaviorValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.SavedSearchValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.SourceWorkspaceNameValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.ValidationExecutor.ExecuteAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.KeplerFactory.KeplerServiceInterceptor`1.HandleExceptionsAsync``1(Castle.DynamicProxy.IInvocation)~System.Threading.Tasks.Task{``0}")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Nodes.SyncNode`1.PerformExecuteAsync(Banzai.IExecutionContext{Relativity.Sync.SyncExecutionContext})~System.Threading.Tasks.Task{Banzai.NodeResultStatus}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.SafeProgressWrapper`1.Report(`0)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.DestinationWorkspaceTagsCreationExecutor.ExecuteAsync(Relativity.Sync.Configuration.IDestinationWorkspaceTagsCreationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.SyncJob.ExecuteAsync(System.Threading.CancellationToken,System.IProgress{Relativity.Sync.SyncJobState}[])~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.SyncJobInLifetimeScope.CreateSyncJob(Autofac.ILifetimeScope)~Relativity.Sync.ISyncJob")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.SyncJobProgress.ReportAsync(Relativity.Sync.SyncJobState)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.EnvironmentPropertyProvider.CreateAsync(Relativity.Sync.IServicesMgr,Relativity.Sync.IAPILog)~System.Threading.Tasks.Task{Relativity.Sync.Telemetry.IEnvironmentPropertyProvider}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Updating batch progress should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.BatchProgressUpdater.UpdateProgressAsync(Relativity.Sync.Storage.IBatch,System.Int32,System.Int32)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "type", Target = "Relativity.Sync.Executors.SynchronizationExecutor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "type", Target = "Relativity.Sync.Executors.SourceWorkspaceTagRepository")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "type", Target = "Relativity.Sync.Executors.DestinationWorkspaceTagRepository")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Using SUM metrics should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.SumSyncMetricsSink.Log(Relativity.Sync.Telemetry.Metric")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Using SUM metrics should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.Executors.SumReporting.JobEndMetricsService.ExecuteAsync(Relativity.Sync.ExecutionStatus)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Exceptions are being wrapped and rethrown", Scope = "member", Target = "~M:Relativity.Sync.Transfer.ChoiceCache.QueryChoiceWithParentInfoAsync(Relativity.Services.Objects.IObjectManager,Relativity.Services.Objects.DataContracts.Choice,System.Collections.Generic.ICollection{Relativity.Services.Objects.DataContracts.Choice})~System.Threading.Tasks.Task{Relativity.Sync.Transfer.ChoiceWithParentInfo}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1822:Member does not access instance data and can be marked as static", Justification = "Undesired design", Scope = "type", Target = "~T:Relativity.Sync.Configuration.ImportSettingsDto")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Using SUM metrics should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.SumSyncMetricsSink.Log(Relativity.Sync.Telemetry.Metric")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Installing SUM metrics should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.TelemetryMetricsInstaller.InstallMetrics()")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Installing SUM metrics should never cause failure", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.TelemetryMetricsProviderBase.AddMetricsForCategory(Relativity.Services.InternalMetricsCollection.IInternalMetricsCollectionManager,Relativity.Services.InternalMetricsCollection.CategoryRef)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Dispose shouldn't throw", Scope = "member", Target = "~M:Relativity.Sync.Executors.DataReaderBase.Dispose(System.Boolean)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetFolderIdsAsync(System.Int32,System.Collections.Generic.ICollection{System.Int32},System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.Int32}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetFolderIdsAsync(System.Int32,System.Collections.Generic.ICollection{System.Int32})~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.Int32}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetFolderNamesAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.String}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetDocumentIdToFolderIdMapAsync(System.Int32,System.Collections.Generic.ICollection{System.Int32})~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.Int32}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetDocumentIdToFolderIdMapForBatchAsync(Relativity.Services.Objects.IObjectManager,System.Int32,System.Collections.Generic.ICollection{System.Int32})~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.Int32}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.FolderPathRetriever.GetFolderIdToFolderPathMapAsync(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.Int32,System.String}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "Exceptions are being wrapped and rethrown", Scope = "member", Target = "~M:Relativity.Sync.Transfer.SourceWorkspaceDataReader.GetReaderForNextBatchAsync()~System.Threading.Tasks.Task{System.Data.IDataReader}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.DocumentFieldRepository.GetRelativityDataTypesForFieldsByFieldNameAsync(System.Int32,System.Collections.Generic.ICollection{System.String},System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,Relativity.Sync.Transfer.RelativityDataType}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Transfer.DocumentFieldRepository.GetRelativityDataTypesForFieldsByFieldNameAsync(System.Int32,System.Collections.Generic.ICollection{System.String},System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.Collections.Generic.IDictionary{System.String,Relativity.Sync.Transfer.RelativityDataType}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.ImportJob.RunAsync(System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.ImportJobResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RG0001: Class names should match the name of the file they are in", Justification = "Private class scope", Scope = "type", Target = "~T:Relativity.Sync.Transfer.ItemStatusMonitor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RG1012: Lambdas should not be passed as a void-returning delegate", Justification = "Needed to make async operations in Observable.Do operator", Scope = "type", Target = "~T:Relativity.Sync.JobProgressHandler")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RG2002: Avoid putting multiple classes in a single file", Justification = "Private class scope", Scope = "type", Target = "~T:Relativity.Sync.Transfer.ItemStatusMonitor")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RG0001: Class names should match the name of the file they are in", Justification = "Inner static class in other static class. Both containing constants.", Scope = "type", Target = "~T:Relativity.Sync.Telemetry.TelemetryConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "RG2002: Avoid putting multiple classes in a single file", Justification = "Inner static class in other static class. Both containing constants.", Scope = "type", Target = "~T:Relativity.Sync.Telemetry.TelemetryConstants")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.DestinationWorkspaceObjectTypesCreationExecutor.ExecuteAsync(Relativity.Sync.Configuration.IDestinationWorkspaceObjectTypesCreationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.JobProgressUpdater.SetTotalItemsCountAsync(System.Int32)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.JobProgressUpdater.UpdateJobProgressAsync(System.Int32,System.Int32)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Command`1.TryLogConfiguration")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Telemetry.SplunkSyncMetricsSink.Log(Relativity.Sync.Telemetry.Metric)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "type", Target = "Relativity.Sync.Executors.PermissionCheck.SourcePermissionCheck")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "type", Target = "Relativity.Sync.Executors.PermissionCheck.DestinationPermissionCheck")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Storage.Progress.QueryAllAsync~System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyCollection{Relativity.Sync.Storage.IProgress}}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.NotificationExecutor.GetDestinationWorkspaceInformationAsync(Relativity.Sync.Configuration.INotificationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.NotificationExecutor.GetJobHistoryErrorInformationAsync(Relativity.Sync.Configuration.INotificationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.NotificationExecutor.GetJobHistoryErrorInformationAsync(Relativity.Sync.Configuration.INotificationConfiguration)~System.Threading.Tasks.Task{System.String}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.NotificationExecutor.ExecuteAsync(Relativity.Sync.Configuration.INotificationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.KeplerFactory.KeplerServiceInterceptor`1.HandleExceptionsAsync(Castle.DynamicProxy.IInvocation)~System.Threading.Tasks.Task")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "We catch all the exceptions and put them into returned result object.", Scope = "member", Target = "~M:Relativity.Sync.Executors.JobStatusConsolidationExecutor.ExecuteAsync(Relativity.Sync.Configuration.IJobStatusConsolidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "We catch all the exceptions and put them into returned result object.", Scope = "member", Target = "~M:Relativity.Sync.Nodes.SyncRootNode.ExecuteCommandIfCanExecuteAsync``1(Relativity.Sync.ICommand{``0},Banzai.IExecutionContext{Relativity.Sync.SyncExecutionContext})~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.Validation.NativeCopyLinksValidator.ValidateAsync(Relativity.Sync.Configuration.IValidationConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.Executors.Validation.ValidationResult}")]

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.JobCleanupExecutor.ExecuteAsync(Relativity.Sync.Configuration.IJobCleanupConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1031:Do not catch general exception types", Justification = "<Pending>", Scope = "member", Target = "~M:Relativity.Sync.Executors.AutomatedWorkflowExecutor.ExecuteAsync(Relativity.Sync.Configuration.IAutomatedWorkflowTriggerConfiguration,System.Threading.CancellationToken)~System.Threading.Tasks.Task{Relativity.Sync.ExecutionResult}")]
#pragma warning restore RG2001 // Character Per Line
