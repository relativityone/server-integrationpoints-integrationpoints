using Relativity.AntiMalware.SDK;
using Relativity.API;
using System;
using System.Threading.Tasks;

namespace Relativity.Sync.Transfer
{
    internal class AntiMalwareHandler : IAntiMalwareHandler
    {
        private readonly SyncJobParameters _parameters;
        private readonly IAntiMalwareEventHelper _antiMalwareEventHelper;
        private readonly IAPILog _log;

        public AntiMalwareHandler(SyncJobParameters parameters, IAntiMalwareEventHelper antiMalwareEventHelper, IAPILog log)
        {
            _parameters = parameters;
            _antiMalwareEventHelper = antiMalwareEventHelper;
            _log = log;
        }

        public async Task HandleEventAsync(Exception ex, INativeFile file)
        {
            _log.LogWarning(ex, "AntiMalware detected for document {documentId} in file {filePath}", file.DocumentArtifactId, file.Location);
            
            AntiMalwareEvent antiMalwareEvent = new AntiMalwareEvent
            {
                UncOrUri = file.Location,
                WorkspaceID = _parameters.WorkspaceId,
                ArtifactID = file.DocumentArtifactId,
                Exception = ex
            };

            await _antiMalwareEventHelper.ReportAntiMalwareEventAsync(antiMalwareEvent).ConfigureAwait(false);
        }
    }
}
