'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace kCura.EDDS.WebAPI.FileIOBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="FileIOSoap", [Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class FileIO
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private BeginFillOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FileFillOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveFillOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemoveTempFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadFileAsStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBcpSharePathOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateBcpShareOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBcpShareSpaceReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDefaultRepositorySpaceReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RepositoryVolumeMaxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/RelativityWebApi/FileIO.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event BeginFillCompleted As BeginFillCompletedEventHandler
        
        '''<remarks/>
        Public Event FileFillCompleted As FileFillCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveFillCompleted As RemoveFillCompletedEventHandler
        
        '''<remarks/>
        Public Event RemoveTempFileCompleted As RemoveTempFileCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadFileAsStringCompleted As ReadFileAsStringCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBcpSharePathCompleted As GetBcpSharePathCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateBcpShareCompleted As ValidateBcpShareCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBcpShareSpaceReportCompleted As GetBcpShareSpaceReportCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDefaultRepositorySpaceReportCompleted As GetDefaultRepositorySpaceReportCompletedEventHandler
        
        '''<remarks/>
        Public Event RepositoryVolumeMaxCompleted As RepositoryVolumeMaxCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/BeginFill", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BeginFill(ByVal caseContextArtifactID As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal b() As Byte, ByVal documentDirectory As String, ByVal fileGuid As String) As IoResponse
            Dim results() As Object = Me.Invoke("BeginFill", New Object() {caseContextArtifactID, b, documentDirectory, fileGuid})
            Return CType(results(0),IoResponse)
        End Function
        
        '''<remarks/>
        Public Function BeginBeginFill(ByVal caseContextArtifactID As Integer, ByVal b() As Byte, ByVal documentDirectory As String, ByVal fileGuid As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("BeginFill", New Object() {caseContextArtifactID, b, documentDirectory, fileGuid}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndBeginFill(ByVal asyncResult As System.IAsyncResult) As IoResponse
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),IoResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BeginFillAsync(ByVal caseContextArtifactID As Integer, ByVal b() As Byte, ByVal documentDirectory As String, ByVal fileGuid As String)
            Me.BeginFillAsync(caseContextArtifactID, b, documentDirectory, fileGuid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BeginFillAsync(ByVal caseContextArtifactID As Integer, ByVal b() As Byte, ByVal documentDirectory As String, ByVal fileGuid As String, ByVal userState As Object)
            If (Me.BeginFillOperationCompleted Is Nothing) Then
                Me.BeginFillOperationCompleted = AddressOf Me.OnBeginFillOperationCompleted
            End If
            Me.InvokeAsync("BeginFill", New Object() {caseContextArtifactID, b, documentDirectory, fileGuid}, Me.BeginFillOperationCompleted, userState)
        End Sub
        
        Private Sub OnBeginFillOperationCompleted(ByVal arg As Object)
            If (Not (Me.BeginFillCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BeginFillCompleted(Me, New BeginFillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/FileFill", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FileFill(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal b() As Byte) As IoResponse
            Dim results() As Object = Me.Invoke("FileFill", New Object() {caseContextArtifactID, documentDirectory, fileName, b})
            Return CType(results(0),IoResponse)
        End Function
        
        '''<remarks/>
        Public Function BeginFileFill(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, ByVal b() As Byte, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("FileFill", New Object() {caseContextArtifactID, documentDirectory, fileName, b}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndFileFill(ByVal asyncResult As System.IAsyncResult) As IoResponse
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),IoResponse)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FileFillAsync(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, ByVal b() As Byte)
            Me.FileFillAsync(caseContextArtifactID, documentDirectory, fileName, b, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FileFillAsync(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, ByVal b() As Byte, ByVal userState As Object)
            If (Me.FileFillOperationCompleted Is Nothing) Then
                Me.FileFillOperationCompleted = AddressOf Me.OnFileFillOperationCompleted
            End If
            Me.InvokeAsync("FileFill", New Object() {caseContextArtifactID, documentDirectory, fileName, b}, Me.FileFillOperationCompleted, userState)
        End Sub
        
        Private Sub OnFileFillOperationCompleted(ByVal arg As Object)
            If (Not (Me.FileFillCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FileFillCompleted(Me, New FileFillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RemoveFill", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveFill(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String)
            Me.Invoke("RemoveFill", New Object() {caseContextArtifactID, documentDirectory, fileName})
        End Sub
        
        '''<remarks/>
        Public Function BeginRemoveFill(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveFill", New Object() {caseContextArtifactID, documentDirectory, fileName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndRemoveFill(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveFillAsync(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String)
            Me.RemoveFillAsync(caseContextArtifactID, documentDirectory, fileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveFillAsync(ByVal caseContextArtifactID As Integer, ByVal documentDirectory As String, ByVal fileName As String, ByVal userState As Object)
            If (Me.RemoveFillOperationCompleted Is Nothing) Then
                Me.RemoveFillOperationCompleted = AddressOf Me.OnRemoveFillOperationCompleted
            End If
            Me.InvokeAsync("RemoveFill", New Object() {caseContextArtifactID, documentDirectory, fileName}, Me.RemoveFillOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveFillOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveFillCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveFillCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RemoveTempFile", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub RemoveTempFile(ByVal caseContextArtifactID As Integer, ByVal fileName As String)
            Me.Invoke("RemoveTempFile", New Object() {caseContextArtifactID, fileName})
        End Sub
        
        '''<remarks/>
        Public Function BeginRemoveTempFile(ByVal caseContextArtifactID As Integer, ByVal fileName As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RemoveTempFile", New Object() {caseContextArtifactID, fileName}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndRemoveTempFile(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveTempFileAsync(ByVal caseContextArtifactID As Integer, ByVal fileName As String)
            Me.RemoveTempFileAsync(caseContextArtifactID, fileName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemoveTempFileAsync(ByVal caseContextArtifactID As Integer, ByVal fileName As String, ByVal userState As Object)
            If (Me.RemoveTempFileOperationCompleted Is Nothing) Then
                Me.RemoveTempFileOperationCompleted = AddressOf Me.OnRemoveTempFileOperationCompleted
            End If
            Me.InvokeAsync("RemoveTempFile", New Object() {caseContextArtifactID, fileName}, Me.RemoveTempFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemoveTempFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemoveTempFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemoveTempFileCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/ReadFileAsString", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ReadFileAsString(ByVal path As String) As <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> Byte()
            Dim results() As Object = Me.Invoke("ReadFileAsString", New Object() {path})
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Function BeginReadFileAsString(ByVal path As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ReadFileAsString", New Object() {path}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndReadFileAsString(ByVal asyncResult As System.IAsyncResult) As Byte()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Byte())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadFileAsStringAsync(ByVal path As String)
            Me.ReadFileAsStringAsync(path, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadFileAsStringAsync(ByVal path As String, ByVal userState As Object)
            If (Me.ReadFileAsStringOperationCompleted Is Nothing) Then
                Me.ReadFileAsStringOperationCompleted = AddressOf Me.OnReadFileAsStringOperationCompleted
            End If
            Me.InvokeAsync("ReadFileAsString", New Object() {path}, Me.ReadFileAsStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadFileAsStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadFileAsStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadFileAsStringCompleted(Me, New ReadFileAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetBcpSharePath", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBcpSharePath(ByVal caseContextArtifactID As Integer) As String
            Dim results() As Object = Me.Invoke("GetBcpSharePath", New Object() {caseContextArtifactID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetBcpSharePath(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetBcpSharePath", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetBcpSharePath(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBcpSharePathAsync(ByVal caseContextArtifactID As Integer)
            Me.GetBcpSharePathAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBcpSharePathAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.GetBcpSharePathOperationCompleted Is Nothing) Then
                Me.GetBcpSharePathOperationCompleted = AddressOf Me.OnGetBcpSharePathOperationCompleted
            End If
            Me.InvokeAsync("GetBcpSharePath", New Object() {caseContextArtifactID}, Me.GetBcpSharePathOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBcpSharePathOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBcpSharePathCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBcpSharePathCompleted(Me, New GetBcpSharePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/ValidateBcpShare", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateBcpShare(ByVal caseContextArtifactID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ValidateBcpShare", New Object() {caseContextArtifactID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginValidateBcpShare(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("ValidateBcpShare", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndValidateBcpShare(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateBcpShareAsync(ByVal caseContextArtifactID As Integer)
            Me.ValidateBcpShareAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateBcpShareAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.ValidateBcpShareOperationCompleted Is Nothing) Then
                Me.ValidateBcpShareOperationCompleted = AddressOf Me.OnValidateBcpShareOperationCompleted
            End If
            Me.InvokeAsync("ValidateBcpShare", New Object() {caseContextArtifactID}, Me.ValidateBcpShareOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateBcpShareOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateBcpShareCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateBcpShareCompleted(Me, New ValidateBcpShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetBcpShareSpaceReport", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBcpShareSpaceReport(ByVal caseContextArtifactID As Integer) As <System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("GetBcpShareSpaceReport", New Object() {caseContextArtifactID})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BeginGetBcpShareSpaceReport(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetBcpShareSpaceReport", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetBcpShareSpaceReport(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBcpShareSpaceReportAsync(ByVal caseContextArtifactID As Integer)
            Me.GetBcpShareSpaceReportAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBcpShareSpaceReportAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.GetBcpShareSpaceReportOperationCompleted Is Nothing) Then
                Me.GetBcpShareSpaceReportOperationCompleted = AddressOf Me.OnGetBcpShareSpaceReportOperationCompleted
            End If
            Me.InvokeAsync("GetBcpShareSpaceReport", New Object() {caseContextArtifactID}, Me.GetBcpShareSpaceReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBcpShareSpaceReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBcpShareSpaceReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBcpShareSpaceReportCompleted(Me, New GetBcpShareSpaceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetDefaultRepositorySpaceReport", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDefaultRepositorySpaceReport(ByVal caseContextArtifactID As Integer) As <System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> String()()
            Dim results() As Object = Me.Invoke("GetDefaultRepositorySpaceReport", New Object() {caseContextArtifactID})
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Function BeginGetDefaultRepositorySpaceReport(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetDefaultRepositorySpaceReport", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetDefaultRepositorySpaceReport(ByVal asyncResult As System.IAsyncResult) As String()()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String()())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDefaultRepositorySpaceReportAsync(ByVal caseContextArtifactID As Integer)
            Me.GetDefaultRepositorySpaceReportAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDefaultRepositorySpaceReportAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.GetDefaultRepositorySpaceReportOperationCompleted Is Nothing) Then
                Me.GetDefaultRepositorySpaceReportOperationCompleted = AddressOf Me.OnGetDefaultRepositorySpaceReportOperationCompleted
            End If
            Me.InvokeAsync("GetDefaultRepositorySpaceReport", New Object() {caseContextArtifactID}, Me.GetDefaultRepositorySpaceReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDefaultRepositorySpaceReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDefaultRepositorySpaceReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDefaultRepositorySpaceReportCompleted(Me, New GetDefaultRepositorySpaceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RepositoryVolumeMax", RequestNamespace:="http://www.kCura.com/EDDS/FileManager", ResponseNamespace:="http://www.kCura.com/EDDS/FileManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RepositoryVolumeMax() As Integer
            Dim results() As Object = Me.Invoke("RepositoryVolumeMax", New Object(-1) {})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginRepositoryVolumeMax(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RepositoryVolumeMax", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRepositoryVolumeMax(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RepositoryVolumeMaxAsync()
            Me.RepositoryVolumeMaxAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RepositoryVolumeMaxAsync(ByVal userState As Object)
            If (Me.RepositoryVolumeMaxOperationCompleted Is Nothing) Then
                Me.RepositoryVolumeMaxOperationCompleted = AddressOf Me.OnRepositoryVolumeMaxOperationCompleted
            End If
            Me.InvokeAsync("RepositoryVolumeMax", New Object(-1) {}, Me.RepositoryVolumeMaxOperationCompleted, userState)
        End Sub
        
        Private Sub OnRepositoryVolumeMaxOperationCompleted(ByVal arg As Object)
            If (Not (Me.RepositoryVolumeMaxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RepositoryVolumeMaxCompleted(Me, New RepositoryVolumeMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/FileManager")>  _
    Partial Public Class IoResponse
        
        Private successField As Boolean
        
        Private filenameField As String
        
        Private errorMessageField As String
        
        Private errorTextField As String
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorText() As String
            Get
                Return Me.errorTextField
            End Get
            Set
                Me.errorTextField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub BeginFillCompletedEventHandler(ByVal sender As Object, ByVal e As BeginFillCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BeginFillCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IoResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IoResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub FileFillCompletedEventHandler(ByVal sender As Object, ByVal e As FileFillCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FileFillCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As IoResponse
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),IoResponse)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RemoveFillCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RemoveTempFileCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ReadFileAsStringCompletedEventHandler(ByVal sender As Object, ByVal e As ReadFileAsStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadFileAsStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Byte()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Byte())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetBcpSharePathCompletedEventHandler(ByVal sender As Object, ByVal e As GetBcpSharePathCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBcpSharePathCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub ValidateBcpShareCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateBcpShareCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateBcpShareCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetBcpShareSpaceReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetBcpShareSpaceReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBcpShareSpaceReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetDefaultRepositorySpaceReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetDefaultRepositorySpaceReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDefaultRepositorySpaceReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String()())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RepositoryVolumeMaxCompletedEventHandler(ByVal sender As Object, ByVal e As RepositoryVolumeMaxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RepositoryVolumeMaxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
