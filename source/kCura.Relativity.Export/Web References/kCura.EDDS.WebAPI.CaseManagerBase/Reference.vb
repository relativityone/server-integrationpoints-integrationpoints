'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
'
Namespace kCura.EDDS.WebAPI.CaseManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CaseManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/CaseManager")>  _
    Partial Public Class CaseManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private RetrieveAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveAllEnabledOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateCaseArtifactOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ReadOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePostRestoreOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveCaseDownloadURIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllDocumentFolderPathsForCaseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAllDocumentFolderPathsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/RelativityWebApi/CaseManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event RetrieveAllCompleted As RetrieveAllCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveAllEnabledCompleted As RetrieveAllEnabledCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCompleted As CreateCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateCaseArtifactCompleted As CreateCaseArtifactCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteCompleted As DeleteCompletedEventHandler
        
        '''<remarks/>
        Public Event ReadCompleted As ReadCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePostRestoreCompleted As UpdatePostRestoreCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveCaseDownloadURICompleted As RetrieveCaseDownloadURICompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllDocumentFolderPathsForCaseCompleted As GetAllDocumentFolderPathsForCaseCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAllDocumentFolderPathsCompleted As GetAllDocumentFolderPathsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/RetrieveAll", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveAll() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveAll", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveAll(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveAll", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveAll(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllAsync()
            Me.RetrieveAllAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllAsync(ByVal userState As Object)
            If (Me.RetrieveAllOperationCompleted Is Nothing) Then
                Me.RetrieveAllOperationCompleted = AddressOf Me.OnRetrieveAllOperationCompleted
            End If
            Me.InvokeAsync("RetrieveAll", New Object(-1) {}, Me.RetrieveAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveAllCompleted(Me, New RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/RetrieveAllEnabled", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveAllEnabled() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveAllEnabled", New Object(-1) {})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveAllEnabled(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveAllEnabled", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveAllEnabled(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllEnabledAsync()
            Me.RetrieveAllEnabledAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllEnabledAsync(ByVal userState As Object)
            If (Me.RetrieveAllEnabledOperationCompleted Is Nothing) Then
                Me.RetrieveAllEnabledOperationCompleted = AddressOf Me.OnRetrieveAllEnabledOperationCompleted
            End If
            Me.InvokeAsync("RetrieveAllEnabled", New Object(-1) {}, Me.RetrieveAllEnabledOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveAllEnabledOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveAllEnabledCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveAllEnabledCompleted(Me, New RetrieveAllEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/Create", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Create(ByVal caseInfo As CaseInfo) As Integer
            Dim results() As Object = Me.Invoke("Create", New Object() {caseInfo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCreate(ByVal caseInfo As CaseInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Create", New Object() {caseInfo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreate(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseInfo As CaseInfo)
            Me.CreateAsync(caseInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateAsync(ByVal caseInfo As CaseInfo, ByVal userState As Object)
            If (Me.CreateOperationCompleted Is Nothing) Then
                Me.CreateOperationCompleted = AddressOf Me.OnCreateOperationCompleted
            End If
            Me.InvokeAsync("Create", New Object() {caseInfo}, Me.CreateOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCompleted(Me, New CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/CreateCaseArtifact", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateCaseArtifact(ByVal caseInfo As ExtendedCaseInfo) As Integer
            Dim results() As Object = Me.Invoke("CreateCaseArtifact", New Object() {caseInfo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Function BeginCreateCaseArtifact(ByVal caseInfo As ExtendedCaseInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("CreateCaseArtifact", New Object() {caseInfo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndCreateCaseArtifact(ByVal asyncResult As System.IAsyncResult) As Integer
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateCaseArtifactAsync(ByVal caseInfo As ExtendedCaseInfo)
            Me.CreateCaseArtifactAsync(caseInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateCaseArtifactAsync(ByVal caseInfo As ExtendedCaseInfo, ByVal userState As Object)
            If (Me.CreateCaseArtifactOperationCompleted Is Nothing) Then
                Me.CreateCaseArtifactOperationCompleted = AddressOf Me.OnCreateCaseArtifactOperationCompleted
            End If
            Me.InvokeAsync("CreateCaseArtifact", New Object() {caseInfo}, Me.CreateCaseArtifactOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateCaseArtifactOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateCaseArtifactCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateCaseArtifactCompleted(Me, New CreateCaseArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/Delete", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Delete(ByVal caseContextArtifactID As Integer) As Boolean
            Dim results() As Object = Me.Invoke("Delete", New Object() {caseContextArtifactID})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Function BeginDelete(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Delete", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndDelete(ByVal asyncResult As System.IAsyncResult) As Boolean
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal caseContextArtifactID As Integer)
            Me.DeleteAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.DeleteOperationCompleted Is Nothing) Then
                Me.DeleteOperationCompleted = AddressOf Me.OnDeleteOperationCompleted
            End If
            Me.InvokeAsync("Delete", New Object() {caseContextArtifactID}, Me.DeleteOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteCompleted(Me, New DeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/Read", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Read(ByVal caseContextArtifactID As Integer) As CaseInfo
            Dim results() As Object = Me.Invoke("Read", New Object() {caseContextArtifactID})
            Return CType(results(0),CaseInfo)
        End Function
        
        '''<remarks/>
        Public Function BeginRead(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("Read", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRead(ByVal asyncResult As System.IAsyncResult) As CaseInfo
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),CaseInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ReadAsync(ByVal caseContextArtifactID As Integer)
            Me.ReadAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ReadAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.ReadOperationCompleted Is Nothing) Then
                Me.ReadOperationCompleted = AddressOf Me.OnReadOperationCompleted
            End If
            Me.InvokeAsync("Read", New Object() {caseContextArtifactID}, Me.ReadOperationCompleted, userState)
        End Sub
        
        Private Sub OnReadOperationCompleted(ByVal arg As Object)
            If (Not (Me.ReadCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ReadCompleted(Me, New ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/UpdatePostRestore", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub UpdatePostRestore(ByVal caseInfo As ExtendedCaseInfo)
            Me.Invoke("UpdatePostRestore", New Object() {caseInfo})
        End Sub
        
        '''<remarks/>
        Public Function BeginUpdatePostRestore(ByVal caseInfo As ExtendedCaseInfo, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("UpdatePostRestore", New Object() {caseInfo}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Sub EndUpdatePostRestore(ByVal asyncResult As System.IAsyncResult)
            Me.EndInvoke(asyncResult)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePostRestoreAsync(ByVal caseInfo As ExtendedCaseInfo)
            Me.UpdatePostRestoreAsync(caseInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePostRestoreAsync(ByVal caseInfo As ExtendedCaseInfo, ByVal userState As Object)
            If (Me.UpdatePostRestoreOperationCompleted Is Nothing) Then
                Me.UpdatePostRestoreOperationCompleted = AddressOf Me.OnUpdatePostRestoreOperationCompleted
            End If
            Me.InvokeAsync("UpdatePostRestore", New Object() {caseInfo}, Me.UpdatePostRestoreOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePostRestoreOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePostRestoreCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePostRestoreCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/RetrieveCaseDownloadURI", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveCaseDownloadURI(ByVal caseContextArtifactID As Integer) As String
            Dim results() As Object = Me.Invoke("RetrieveCaseDownloadURI", New Object() {caseContextArtifactID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveCaseDownloadURI(ByVal caseContextArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveCaseDownloadURI", New Object() {caseContextArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveCaseDownloadURI(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveCaseDownloadURIAsync(ByVal caseContextArtifactID As Integer)
            Me.RetrieveCaseDownloadURIAsync(caseContextArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveCaseDownloadURIAsync(ByVal caseContextArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveCaseDownloadURIOperationCompleted Is Nothing) Then
                Me.RetrieveCaseDownloadURIOperationCompleted = AddressOf Me.OnRetrieveCaseDownloadURIOperationCompleted
            End If
            Me.InvokeAsync("RetrieveCaseDownloadURI", New Object() {caseContextArtifactID}, Me.RetrieveCaseDownloadURIOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveCaseDownloadURIOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveCaseDownloadURICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveCaseDownloadURICompleted(Me, New RetrieveCaseDownloadURICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/GetAllDocumentFolderPathsForCase", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllDocumentFolderPathsForCase(ByVal caseArtifactID As Integer) As String()
            Dim results() As Object = Me.Invoke("GetAllDocumentFolderPathsForCase", New Object() {caseArtifactID})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginGetAllDocumentFolderPathsForCase(ByVal caseArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllDocumentFolderPathsForCase", New Object() {caseArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAllDocumentFolderPathsForCase(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllDocumentFolderPathsForCaseAsync(ByVal caseArtifactID As Integer)
            Me.GetAllDocumentFolderPathsForCaseAsync(caseArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllDocumentFolderPathsForCaseAsync(ByVal caseArtifactID As Integer, ByVal userState As Object)
            If (Me.GetAllDocumentFolderPathsForCaseOperationCompleted Is Nothing) Then
                Me.GetAllDocumentFolderPathsForCaseOperationCompleted = AddressOf Me.OnGetAllDocumentFolderPathsForCaseOperationCompleted
            End If
            Me.InvokeAsync("GetAllDocumentFolderPathsForCase", New Object() {caseArtifactID}, Me.GetAllDocumentFolderPathsForCaseOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllDocumentFolderPathsForCaseOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllDocumentFolderPathsForCaseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllDocumentFolderPathsForCaseCompleted(Me, New GetAllDocumentFolderPathsForCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/CaseManager/GetAllDocumentFolderPaths", RequestNamespace:="http://www.kCura.com/EDDS/CaseManager", ResponseNamespace:="http://www.kCura.com/EDDS/CaseManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAllDocumentFolderPaths() As String()
            Dim results() As Object = Me.Invoke("GetAllDocumentFolderPaths", New Object(-1) {})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Function BeginGetAllDocumentFolderPaths(ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetAllDocumentFolderPaths", New Object(-1) {}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetAllDocumentFolderPaths(ByVal asyncResult As System.IAsyncResult) As String()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAllDocumentFolderPathsAsync()
            Me.GetAllDocumentFolderPathsAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAllDocumentFolderPathsAsync(ByVal userState As Object)
            If (Me.GetAllDocumentFolderPathsOperationCompleted Is Nothing) Then
                Me.GetAllDocumentFolderPathsOperationCompleted = AddressOf Me.OnGetAllDocumentFolderPathsOperationCompleted
            End If
            Me.InvokeAsync("GetAllDocumentFolderPaths", New Object(-1) {}, Me.GetAllDocumentFolderPathsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAllDocumentFolderPathsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAllDocumentFolderPathsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAllDocumentFolderPathsCompleted(Me, New GetAllDocumentFolderPathsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/CaseManager")>  _
    Partial Public Class CaseInfo
        
        Private artifactIDField As Integer
        
        Private nameField As String
        
        Private matterArtifactIDField As Integer
        
        Private statusCodeArtifactIDField As Integer
        
        Private enableDataGridField As Boolean
        
        Private rootFolderIDField As Integer
        
        Private rootArtifactIDField As Integer
        
        Private downloadHandlerURLField As String
        
        Private asImportAllowedField As Boolean
        
        Private exportAllowedField As Boolean
        
        Private documentPathField As String
        
        '''<remarks/>
        Public Property ArtifactID() As Integer
            Get
                Return Me.artifactIDField
            End Get
            Set
                Me.artifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MatterArtifactID() As Integer
            Get
                Return Me.matterArtifactIDField
            End Get
            Set
                Me.matterArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusCodeArtifactID() As Integer
            Get
                Return Me.statusCodeArtifactIDField
            End Get
            Set
                Me.statusCodeArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnableDataGrid() As Boolean
            Get
                Return Me.enableDataGridField
            End Get
            Set
                Me.enableDataGridField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RootFolderID() As Integer
            Get
                Return Me.rootFolderIDField
            End Get
            Set
                Me.rootFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RootArtifactID() As Integer
            Get
                Return Me.rootArtifactIDField
            End Get
            Set
                Me.rootArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DownloadHandlerURL() As String
            Get
                Return Me.downloadHandlerURLField
            End Get
            Set
                Me.downloadHandlerURLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AsImportAllowed() As Boolean
            Get
                Return Me.asImportAllowedField
            End Get
            Set
                Me.asImportAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExportAllowed() As Boolean
            Get
                Return Me.exportAllowedField
            End Get
            Set
                Me.exportAllowedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocumentPath() As String
            Get
                Return Me.documentPathField
            End Get
            Set
                Me.documentPathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.kCura.com/EDDS/CaseManager")>  _
    Partial Public Class ExtendedCaseInfo
        
        Private artifactIDField As Integer
        
        Private nameField As String
        
        Private clientArtifactIDField As Integer
        
        Private matterArtifactIDField As Integer
        
        Private resourceGroupArtifactIDField As Integer
        
        Private statusCodeArtifactIDField As Integer
        
        Private downloadHandlerApplicationPathField As String
        
        Private defaultFileLocationCodeArtifactIDField As Integer
        
        Private defaultCacheLocationServerArtifactIDField As Integer
        
        Private defaultFileLocationNameField As String
        
        Private sqlFullTextLcidField As Integer
        
        Private serverIDField As Integer
        
        Private masterDBLocationField As String
        
        Private rootArtifactIDField As Integer
        
        Private rootFolderIDField As Integer
        
        Private dtSearchIndexShareField As String
        
        Private sQLServerProductVersionField As String
        
        Private versionField As String
        
        '''<remarks/>
        Public Property ArtifactID() As Integer
            Get
                Return Me.artifactIDField
            End Get
            Set
                Me.artifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClientArtifactID() As Integer
            Get
                Return Me.clientArtifactIDField
            End Get
            Set
                Me.clientArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MatterArtifactID() As Integer
            Get
                Return Me.matterArtifactIDField
            End Get
            Set
                Me.matterArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResourceGroupArtifactID() As Integer
            Get
                Return Me.resourceGroupArtifactIDField
            End Get
            Set
                Me.resourceGroupArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StatusCodeArtifactID() As Integer
            Get
                Return Me.statusCodeArtifactIDField
            End Get
            Set
                Me.statusCodeArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DownloadHandlerApplicationPath() As String
            Get
                Return Me.downloadHandlerApplicationPathField
            End Get
            Set
                Me.downloadHandlerApplicationPathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultFileLocationCodeArtifactID() As Integer
            Get
                Return Me.defaultFileLocationCodeArtifactIDField
            End Get
            Set
                Me.defaultFileLocationCodeArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultCacheLocationServerArtifactID() As Integer
            Get
                Return Me.defaultCacheLocationServerArtifactIDField
            End Get
            Set
                Me.defaultCacheLocationServerArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DefaultFileLocationName() As String
            Get
                Return Me.defaultFileLocationNameField
            End Get
            Set
                Me.defaultFileLocationNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SqlFullTextLcid() As Integer
            Get
                Return Me.sqlFullTextLcidField
            End Get
            Set
                Me.sqlFullTextLcidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ServerID() As Integer
            Get
                Return Me.serverIDField
            End Get
            Set
                Me.serverIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MasterDBLocation() As String
            Get
                Return Me.masterDBLocationField
            End Get
            Set
                Me.masterDBLocationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RootArtifactID() As Integer
            Get
                Return Me.rootArtifactIDField
            End Get
            Set
                Me.rootArtifactIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RootFolderID() As Integer
            Get
                Return Me.rootFolderIDField
            End Get
            Set
                Me.rootFolderIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dtSearchIndexShare() As String
            Get
                Return Me.dtSearchIndexShareField
            End Get
            Set
                Me.dtSearchIndexShareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SQLServerProductVersion() As String
            Get
                Return Me.sQLServerProductVersionField
            End Get
            Set
                Me.sQLServerProductVersionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Version() As String
            Get
                Return Me.versionField
            End Get
            Set
                Me.versionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub RetrieveAllCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub RetrieveAllEnabledCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveAllEnabledCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveAllEnabledCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CreateCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CreateCaseArtifactCompletedEventHandler(ByVal sender As Object, ByVal e As CreateCaseArtifactCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateCaseArtifactCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeleteCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ReadCompletedEventHandler(ByVal sender As Object, ByVal e As ReadCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ReadCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CaseInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CaseInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub UpdatePostRestoreCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub RetrieveCaseDownloadURICompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveCaseDownloadURICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveCaseDownloadURICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub GetAllDocumentFolderPathsForCaseCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllDocumentFolderPathsForCaseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllDocumentFolderPathsForCaseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub GetAllDocumentFolderPathsCompletedEventHandler(ByVal sender As Object, ByVal e As GetAllDocumentFolderPathsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAllDocumentFolderPathsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
End Namespace
