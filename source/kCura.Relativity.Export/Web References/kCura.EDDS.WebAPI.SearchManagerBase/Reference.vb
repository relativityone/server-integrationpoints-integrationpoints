'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace kCura.EDDS.WebAPI.SearchManagerBase
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="SearchManagerSoap", [Namespace]:="http://www.kCura.com/EDDS/SearchManager")>  _
    Partial Public Class SearchManager
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private IsAssociatedSearchProviderAccessibleOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSearchSQLOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveNativesForSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveFilesForDynamicObjectsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveNativesForProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveImagesForSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveViewsByContextArtifactIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveSearchFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveSearchFieldsForProductionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveDefaultViewFieldsForIdListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveAllExportableViewFieldsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = "http://localhost/RelativityWebApi/SearchManager.asmx"
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event IsAssociatedSearchProviderAccessibleCompleted As IsAssociatedSearchProviderAccessibleCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSearchSQLCompleted As GetSearchSQLCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveNativesForSearchCompleted As RetrieveNativesForSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveFilesForDynamicObjectsCompleted As RetrieveFilesForDynamicObjectsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveNativesForProductionCompleted As RetrieveNativesForProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveImagesForSearchCompleted As RetrieveImagesForSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompleted As RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveImagesByProductionIDsAndDocumentIDsForExportCompleted As RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveViewsByContextArtifactIDCompleted As RetrieveViewsByContextArtifactIDCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveSearchFieldsCompleted As RetrieveSearchFieldsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveSearchFieldsForProductionCompleted As RetrieveSearchFieldsForProductionCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveDefaultViewFieldsForIdListCompleted As RetrieveDefaultViewFieldsForIdListCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveAllExportableViewFieldsCompleted As RetrieveAllExportableViewFieldsCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/IsAssociatedSearchProviderAccessible", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsAssociatedSearchProviderAccessible(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer) As Boolean()
            Dim results() As Object = Me.Invoke("IsAssociatedSearchProviderAccessible", New Object() {caseContextArtifactID, searchArtifactID})
            Return CType(results(0),Boolean())
        End Function
        
        '''<remarks/>
        Public Function BeginIsAssociatedSearchProviderAccessible(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("IsAssociatedSearchProviderAccessible", New Object() {caseContextArtifactID, searchArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndIsAssociatedSearchProviderAccessible(ByVal asyncResult As System.IAsyncResult) As Boolean()
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),Boolean())
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsAssociatedSearchProviderAccessibleAsync(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer)
            Me.IsAssociatedSearchProviderAccessibleAsync(caseContextArtifactID, searchArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsAssociatedSearchProviderAccessibleAsync(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer, ByVal userState As Object)
            If (Me.IsAssociatedSearchProviderAccessibleOperationCompleted Is Nothing) Then
                Me.IsAssociatedSearchProviderAccessibleOperationCompleted = AddressOf Me.OnIsAssociatedSearchProviderAccessibleOperationCompleted
            End If
            Me.InvokeAsync("IsAssociatedSearchProviderAccessible", New Object() {caseContextArtifactID, searchArtifactID}, Me.IsAssociatedSearchProviderAccessibleOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsAssociatedSearchProviderAccessibleOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsAssociatedSearchProviderAccessibleCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsAssociatedSearchProviderAccessibleCompleted(Me, New IsAssociatedSearchProviderAccessibleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/GetSearchSQL", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSearchSQL(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer) As String
            Dim results() As Object = Me.Invoke("GetSearchSQL", New Object() {caseContextArtifactID, searchArtifactID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Function BeginGetSearchSQL(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("GetSearchSQL", New Object() {caseContextArtifactID, searchArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndGetSearchSQL(ByVal asyncResult As System.IAsyncResult) As String
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSearchSQLAsync(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer)
            Me.GetSearchSQLAsync(caseContextArtifactID, searchArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSearchSQLAsync(ByVal caseContextArtifactID As Integer, ByVal searchArtifactID As Integer, ByVal userState As Object)
            If (Me.GetSearchSQLOperationCompleted Is Nothing) Then
                Me.GetSearchSQLOperationCompleted = AddressOf Me.OnGetSearchSQLOperationCompleted
            End If
            Me.InvokeAsync("GetSearchSQL", New Object() {caseContextArtifactID, searchArtifactID}, Me.GetSearchSQLOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSearchSQLOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSearchSQLCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSearchSQLCompleted(Me, New GetSearchSQLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveNativesForSearch", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveNativesForSearch(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveNativesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveNativesForSearch(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveNativesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveNativesForSearch(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesForSearchAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs As String)
            Me.RetrieveNativesForSearchAsync(caseContextArtifactID, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesForSearchAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs As String, ByVal userState As Object)
            If (Me.RetrieveNativesForSearchOperationCompleted Is Nothing) Then
                Me.RetrieveNativesForSearchOperationCompleted = AddressOf Me.OnRetrieveNativesForSearchOperationCompleted
            End If
            Me.InvokeAsync("RetrieveNativesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs}, Me.RetrieveNativesForSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveNativesForSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveNativesForSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveNativesForSearchCompleted(Me, New RetrieveNativesForSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveFilesForDynamicObjects", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveFilesForDynamicObjects(ByVal caseContextArtifactID As Integer, ByVal fileFieldArtifactID As Integer, ByVal objectIds() As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveFilesForDynamicObjects", New Object() {caseContextArtifactID, fileFieldArtifactID, objectIds})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveFilesForDynamicObjects(ByVal caseContextArtifactID As Integer, ByVal fileFieldArtifactID As Integer, ByVal objectIds() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveFilesForDynamicObjects", New Object() {caseContextArtifactID, fileFieldArtifactID, objectIds}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveFilesForDynamicObjects(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveFilesForDynamicObjectsAsync(ByVal caseContextArtifactID As Integer, ByVal fileFieldArtifactID As Integer, ByVal objectIds() As Integer)
            Me.RetrieveFilesForDynamicObjectsAsync(caseContextArtifactID, fileFieldArtifactID, objectIds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveFilesForDynamicObjectsAsync(ByVal caseContextArtifactID As Integer, ByVal fileFieldArtifactID As Integer, ByVal objectIds() As Integer, ByVal userState As Object)
            If (Me.RetrieveFilesForDynamicObjectsOperationCompleted Is Nothing) Then
                Me.RetrieveFilesForDynamicObjectsOperationCompleted = AddressOf Me.OnRetrieveFilesForDynamicObjectsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveFilesForDynamicObjects", New Object() {caseContextArtifactID, fileFieldArtifactID, objectIds}, Me.RetrieveFilesForDynamicObjectsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveFilesForDynamicObjectsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveFilesForDynamicObjectsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveFilesForDynamicObjectsCompleted(Me, New RetrieveFilesForDynamicObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveNativesForProduction", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveNativesForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveNativesForProduction", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveNativesForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs As String, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveNativesForProduction", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveNativesForProduction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs As String)
            Me.RetrieveNativesForProductionAsync(caseContextArtifactID, productionArtifactID, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveNativesForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs As String, ByVal userState As Object)
            If (Me.RetrieveNativesForProductionOperationCompleted Is Nothing) Then
                Me.RetrieveNativesForProductionOperationCompleted = AddressOf Me.OnRetrieveNativesForProductionOperationCompleted
            End If
            Me.InvokeAsync("RetrieveNativesForProduction", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs}, Me.RetrieveNativesForProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveNativesForProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveNativesForProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveNativesForProductionCompleted(Me, New RetrieveNativesForProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveImagesForSearch", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveImagesForSearch(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveImagesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveImagesForSearch(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveImagesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveImagesForSearch(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesForSearchAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer)
            Me.RetrieveImagesForSearchAsync(caseContextArtifactID, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesForSearchAsync(ByVal caseContextArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal userState As Object)
            If (Me.RetrieveImagesForSearchOperationCompleted Is Nothing) Then
                Me.RetrieveImagesForSearchOperationCompleted = AddressOf Me.OnRetrieveImagesForSearchOperationCompleted
            End If
            Me.InvokeAsync("RetrieveImagesForSearch", New Object() {caseContextArtifactID, documentArtifactIDs}, Me.RetrieveImagesForSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveImagesForSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveImagesForSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveImagesForSearchCompleted(Me, New RetrieveImagesForSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveImagesByProductionArtifactIDForPr"& _ 
            "oductionExportByDocumentSet", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs() As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs() As Integer)
            Me.RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetAsync(caseContextArtifactID, productionArtifactID, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal documentArtifactIDs() As Integer, ByVal userState As Object)
            If (Me.RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted Is Nothing) Then
                Me.RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted = AddressOf Me.OnRetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted
            End If
            Me.InvokeAsync("RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSet", New Object() {caseContextArtifactID, productionArtifactID, documentArtifactIDs}, Me.RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompleted(Me, New RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveImagesByProductionIDsAndDocumentI"& _ 
            "DsForExport", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveImagesByProductionIDsAndDocumentIDsForExport(ByVal caseContextArtifactID As Integer, ByVal productionArtifactIDs() As Integer, ByVal documentArtifactIDs() As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveImagesByProductionIDsAndDocumentIDsForExport", New Object() {caseContextArtifactID, productionArtifactIDs, documentArtifactIDs})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveImagesByProductionIDsAndDocumentIDsForExport(ByVal caseContextArtifactID As Integer, ByVal productionArtifactIDs() As Integer, ByVal documentArtifactIDs() As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveImagesByProductionIDsAndDocumentIDsForExport", New Object() {caseContextArtifactID, productionArtifactIDs, documentArtifactIDs}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveImagesByProductionIDsAndDocumentIDsForExport(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesByProductionIDsAndDocumentIDsForExportAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactIDs() As Integer, ByVal documentArtifactIDs() As Integer)
            Me.RetrieveImagesByProductionIDsAndDocumentIDsForExportAsync(caseContextArtifactID, productionArtifactIDs, documentArtifactIDs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveImagesByProductionIDsAndDocumentIDsForExportAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactIDs() As Integer, ByVal documentArtifactIDs() As Integer, ByVal userState As Object)
            If (Me.RetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted Is Nothing) Then
                Me.RetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted = AddressOf Me.OnRetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted
            End If
            Me.InvokeAsync("RetrieveImagesByProductionIDsAndDocumentIDsForExport", New Object() {caseContextArtifactID, productionArtifactIDs, documentArtifactIDs}, Me.RetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveImagesByProductionIDsAndDocumentIDsForExportOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveImagesByProductionIDsAndDocumentIDsForExportCompleted(Me, New RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveViewsByContextArtifactID", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveViewsByContextArtifactID(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal isSearch As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveViewsByContextArtifactID", New Object() {caseContextArtifactID, artifactTypeID, isSearch})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveViewsByContextArtifactID(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal isSearch As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveViewsByContextArtifactID", New Object() {caseContextArtifactID, artifactTypeID, isSearch}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveViewsByContextArtifactID(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveViewsByContextArtifactIDAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal isSearch As Boolean)
            Me.RetrieveViewsByContextArtifactIDAsync(caseContextArtifactID, artifactTypeID, isSearch, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveViewsByContextArtifactIDAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal isSearch As Boolean, ByVal userState As Object)
            If (Me.RetrieveViewsByContextArtifactIDOperationCompleted Is Nothing) Then
                Me.RetrieveViewsByContextArtifactIDOperationCompleted = AddressOf Me.OnRetrieveViewsByContextArtifactIDOperationCompleted
            End If
            Me.InvokeAsync("RetrieveViewsByContextArtifactID", New Object() {caseContextArtifactID, artifactTypeID, isSearch}, Me.RetrieveViewsByContextArtifactIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveViewsByContextArtifactIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveViewsByContextArtifactIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveViewsByContextArtifactIDCompleted(Me, New RetrieveViewsByContextArtifactIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveSearchFields", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveSearchFields(ByVal caseContextArtifactID As Integer, ByVal viewArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveSearchFields", New Object() {caseContextArtifactID, viewArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveSearchFields(ByVal caseContextArtifactID As Integer, ByVal viewArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveSearchFields", New Object() {caseContextArtifactID, viewArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveSearchFields(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveSearchFieldsAsync(ByVal caseContextArtifactID As Integer, ByVal viewArtifactID As Integer)
            Me.RetrieveSearchFieldsAsync(caseContextArtifactID, viewArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveSearchFieldsAsync(ByVal caseContextArtifactID As Integer, ByVal viewArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveSearchFieldsOperationCompleted Is Nothing) Then
                Me.RetrieveSearchFieldsOperationCompleted = AddressOf Me.OnRetrieveSearchFieldsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveSearchFields", New Object() {caseContextArtifactID, viewArtifactID}, Me.RetrieveSearchFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveSearchFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveSearchFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveSearchFieldsCompleted(Me, New RetrieveSearchFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveSearchFieldsForProduction", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveSearchFieldsForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveSearchFieldsForProduction", New Object() {caseContextArtifactID, productionArtifactID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveSearchFieldsForProduction(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveSearchFieldsForProduction", New Object() {caseContextArtifactID, productionArtifactID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveSearchFieldsForProduction(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveSearchFieldsForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer)
            Me.RetrieveSearchFieldsForProductionAsync(caseContextArtifactID, productionArtifactID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveSearchFieldsForProductionAsync(ByVal caseContextArtifactID As Integer, ByVal productionArtifactID As Integer, ByVal userState As Object)
            If (Me.RetrieveSearchFieldsForProductionOperationCompleted Is Nothing) Then
                Me.RetrieveSearchFieldsForProductionOperationCompleted = AddressOf Me.OnRetrieveSearchFieldsForProductionOperationCompleted
            End If
            Me.InvokeAsync("RetrieveSearchFieldsForProduction", New Object() {caseContextArtifactID, productionArtifactID}, Me.RetrieveSearchFieldsForProductionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveSearchFieldsForProductionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveSearchFieldsForProductionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveSearchFieldsForProductionCompleted(Me, New RetrieveSearchFieldsForProductionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveDefaultViewFieldsForIdList", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveDefaultViewFieldsForIdList(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal artifactIdList() As Integer, ByVal isProductionList As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveDefaultViewFieldsForIdList", New Object() {caseContextArtifactID, artifactTypeID, artifactIdList, isProductionList})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveDefaultViewFieldsForIdList(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal artifactIdList() As Integer, ByVal isProductionList As Boolean, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveDefaultViewFieldsForIdList", New Object() {caseContextArtifactID, artifactTypeID, artifactIdList, isProductionList}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveDefaultViewFieldsForIdList(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveDefaultViewFieldsForIdListAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal artifactIdList() As Integer, ByVal isProductionList As Boolean)
            Me.RetrieveDefaultViewFieldsForIdListAsync(caseContextArtifactID, artifactTypeID, artifactIdList, isProductionList, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveDefaultViewFieldsForIdListAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal artifactIdList() As Integer, ByVal isProductionList As Boolean, ByVal userState As Object)
            If (Me.RetrieveDefaultViewFieldsForIdListOperationCompleted Is Nothing) Then
                Me.RetrieveDefaultViewFieldsForIdListOperationCompleted = AddressOf Me.OnRetrieveDefaultViewFieldsForIdListOperationCompleted
            End If
            Me.InvokeAsync("RetrieveDefaultViewFieldsForIdList", New Object() {caseContextArtifactID, artifactTypeID, artifactIdList, isProductionList}, Me.RetrieveDefaultViewFieldsForIdListOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveDefaultViewFieldsForIdListOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveDefaultViewFieldsForIdListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveDefaultViewFieldsForIdListCompleted(Me, New RetrieveDefaultViewFieldsForIdListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/SearchManager/RetrieveAllExportableViewFields", RequestNamespace:="http://www.kCura.com/EDDS/SearchManager", ResponseNamespace:="http://www.kCura.com/EDDS/SearchManager", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveAllExportableViewFields(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("RetrieveAllExportableViewFields", New Object() {caseContextArtifactID, artifactTypeID})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Function BeginRetrieveAllExportableViewFields(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal callback As System.AsyncCallback, ByVal asyncState As Object) As System.IAsyncResult
            Return Me.BeginInvoke("RetrieveAllExportableViewFields", New Object() {caseContextArtifactID, artifactTypeID}, callback, asyncState)
        End Function
        
        '''<remarks/>
        Public Function EndRetrieveAllExportableViewFields(ByVal asyncResult As System.IAsyncResult) As System.Data.DataSet
            Dim results() As Object = Me.EndInvoke(asyncResult)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllExportableViewFieldsAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer)
            Me.RetrieveAllExportableViewFieldsAsync(caseContextArtifactID, artifactTypeID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveAllExportableViewFieldsAsync(ByVal caseContextArtifactID As Integer, ByVal artifactTypeID As Integer, ByVal userState As Object)
            If (Me.RetrieveAllExportableViewFieldsOperationCompleted Is Nothing) Then
                Me.RetrieveAllExportableViewFieldsOperationCompleted = AddressOf Me.OnRetrieveAllExportableViewFieldsOperationCompleted
            End If
            Me.InvokeAsync("RetrieveAllExportableViewFields", New Object() {caseContextArtifactID, artifactTypeID}, Me.RetrieveAllExportableViewFieldsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveAllExportableViewFieldsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveAllExportableViewFieldsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveAllExportableViewFieldsCompleted(Me, New RetrieveAllExportableViewFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub IsAssociatedSearchProviderAccessibleCompletedEventHandler(ByVal sender As Object, ByVal e As IsAssociatedSearchProviderAccessibleCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsAssociatedSearchProviderAccessibleCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub GetSearchSQLCompletedEventHandler(ByVal sender As Object, ByVal e As GetSearchSQLCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSearchSQLCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveNativesForSearchCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveNativesForSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveNativesForSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveFilesForDynamicObjectsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveFilesForDynamicObjectsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveFilesForDynamicObjectsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveNativesForProductionCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveNativesForProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveNativesForProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveImagesForSearchCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveImagesForSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveImagesForSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveImagesByProductionArtifactIDForProductionExportByDocumentSetCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveImagesByProductionIDsAndDocumentIDsForExportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveViewsByContextArtifactIDCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveViewsByContextArtifactIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveViewsByContextArtifactIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveSearchFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveSearchFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveSearchFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveSearchFieldsForProductionCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveSearchFieldsForProductionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveSearchFieldsForProductionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveDefaultViewFieldsForIdListCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveDefaultViewFieldsForIdListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveDefaultViewFieldsForIdListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")>  _
    Public Delegate Sub RetrieveAllExportableViewFieldsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveAllExportableViewFieldsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveAllExportableViewFieldsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
