using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Data;
using System.Linq;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



//
//This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
//
 // ERROR: Not supported in C#: OptionDeclaration
namespace kCura.EDDS.WebAPI.FieldQueryBase
{

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name = "FieldQuerySoap", Namespace = "http://www.kCura.com/EDDS/FieldQuery")]
	public partial class FieldQuery : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback RetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted;

		private System.Threading.SendOrPostCallback RetrieveAllMappableOperationCompleted;

		private System.Threading.SendOrPostCallback RetrieveAllOperationCompleted;

		private System.Threading.SendOrPostCallback RetrievePotentialBeginBatesFieldsOperationCompleted;

		private System.Threading.SendOrPostCallback IsFieldIndexedOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		///<remarks/>
		public FieldQuery() : base()
		{
			this.Url = "http://localhost/RelativityWebApi/FieldQuery.asmx";
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			} else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		public new string Url {
			get { return base.Url; }
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) && (this.useDefaultCredentialsSetExplicitly == false)) && (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials {
			get { return base.UseDefaultCredentials; }
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		///<remarks/>
		public event RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventHandler RetrieveDisplayFieldNameByFieldCategoryIDCompleted;

		///<remarks/>
		public event RetrieveAllMappableCompletedEventHandler RetrieveAllMappableCompleted;

		///<remarks/>
		public event RetrieveAllCompletedEventHandler RetrieveAllCompleted;

		///<remarks/>
		public event RetrievePotentialBeginBatesFieldsCompletedEventHandler RetrievePotentialBeginBatesFieldsCompleted;

		///<remarks/>
		public event IsFieldIndexedCompletedEventHandler IsFieldIndexedCompleted;

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldQuery/RetrieveDisplayFieldNameByFieldCategoryID", RequestNamespace = "http://www.kCura.com/EDDS/FieldQuery", ResponseNamespace = "http://www.kCura.com/EDDS/FieldQuery", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string RetrieveDisplayFieldNameByFieldCategoryID(int caseContextArtifactID, int fieldCategoryID)
		{
			object[] results = this.Invoke("RetrieveDisplayFieldNameByFieldCategoryID", new object[] {
				caseContextArtifactID,
				fieldCategoryID
			});
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginRetrieveDisplayFieldNameByFieldCategoryID(int caseContextArtifactID, int fieldCategoryID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RetrieveDisplayFieldNameByFieldCategoryID", new object[] {
				caseContextArtifactID,
				fieldCategoryID
			}, callback, asyncState);
		}

		///<remarks/>
		public string EndRetrieveDisplayFieldNameByFieldCategoryID(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void RetrieveDisplayFieldNameByFieldCategoryIDAsync(int caseContextArtifactID, int fieldCategoryID)
		{
			this.RetrieveDisplayFieldNameByFieldCategoryIDAsync(caseContextArtifactID, fieldCategoryID, null);
		}

		///<remarks/>
		public void RetrieveDisplayFieldNameByFieldCategoryIDAsync(int caseContextArtifactID, int fieldCategoryID, object userState)
		{
			if ((this.RetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted == null)) {
				this.RetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted = this.OnRetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted;
			}
			this.InvokeAsync("RetrieveDisplayFieldNameByFieldCategoryID", new object[] {
				caseContextArtifactID,
				fieldCategoryID
			}, this.RetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted, userState);
		}

		private void OnRetrieveDisplayFieldNameByFieldCategoryIDOperationCompleted(object arg)
		{
			if ((((this.RetrieveDisplayFieldNameByFieldCategoryIDCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RetrieveDisplayFieldNameByFieldCategoryIDCompleted != null) {
					RetrieveDisplayFieldNameByFieldCategoryIDCompleted(this, new RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldQuery/RetrieveAllMappable", RequestNamespace = "http://www.kCura.com/EDDS/FieldQuery", ResponseNamespace = "http://www.kCura.com/EDDS/FieldQuery", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet RetrieveAllMappable(int caseContextArtifactID, int artifactTypeID)
		{
			object[] results = this.Invoke("RetrieveAllMappable", new object[] {
				caseContextArtifactID,
				artifactTypeID
			});
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginRetrieveAllMappable(int caseContextArtifactID, int artifactTypeID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RetrieveAllMappable", new object[] {
				caseContextArtifactID,
				artifactTypeID
			}, callback, asyncState);
		}

		///<remarks/>
		public System.Data.DataSet EndRetrieveAllMappable(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public void RetrieveAllMappableAsync(int caseContextArtifactID, int artifactTypeID)
		{
			this.RetrieveAllMappableAsync(caseContextArtifactID, artifactTypeID, null);
		}

		///<remarks/>
		public void RetrieveAllMappableAsync(int caseContextArtifactID, int artifactTypeID, object userState)
		{
			if ((this.RetrieveAllMappableOperationCompleted == null)) {
				this.RetrieveAllMappableOperationCompleted = this.OnRetrieveAllMappableOperationCompleted;
			}
			this.InvokeAsync("RetrieveAllMappable", new object[] {
				caseContextArtifactID,
				artifactTypeID
			}, this.RetrieveAllMappableOperationCompleted, userState);
		}

		private void OnRetrieveAllMappableOperationCompleted(object arg)
		{
			if ((((this.RetrieveAllMappableCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RetrieveAllMappableCompleted != null) {
					RetrieveAllMappableCompleted(this, new RetrieveAllMappableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldQuery/RetrieveAll", RequestNamespace = "http://www.kCura.com/EDDS/FieldQuery", ResponseNamespace = "http://www.kCura.com/EDDS/FieldQuery", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet RetrieveAll(int caseContextArtifactID)
		{
			object[] results = this.Invoke("RetrieveAll", new object[] { caseContextArtifactID });
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginRetrieveAll(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RetrieveAll", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public System.Data.DataSet EndRetrieveAll(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public void RetrieveAllAsync(int caseContextArtifactID)
		{
			this.RetrieveAllAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void RetrieveAllAsync(int caseContextArtifactID, object userState)
		{
			if ((this.RetrieveAllOperationCompleted == null)) {
				this.RetrieveAllOperationCompleted = this.OnRetrieveAllOperationCompleted;
			}
			this.InvokeAsync("RetrieveAll", new object[] { caseContextArtifactID }, this.RetrieveAllOperationCompleted, userState);
		}

		private void OnRetrieveAllOperationCompleted(object arg)
		{
			if ((((this.RetrieveAllCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RetrieveAllCompleted != null) {
					RetrieveAllCompleted(this, new RetrieveAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldQuery/RetrievePotentialBeginBatesFields", RequestNamespace = "http://www.kCura.com/EDDS/FieldQuery", ResponseNamespace = "http://www.kCura.com/EDDS/FieldQuery", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet RetrievePotentialBeginBatesFields(int caseContextArtifactID)
		{
			object[] results = this.Invoke("RetrievePotentialBeginBatesFields", new object[] { caseContextArtifactID });
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginRetrievePotentialBeginBatesFields(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RetrievePotentialBeginBatesFields", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public System.Data.DataSet EndRetrievePotentialBeginBatesFields(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public void RetrievePotentialBeginBatesFieldsAsync(int caseContextArtifactID)
		{
			this.RetrievePotentialBeginBatesFieldsAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void RetrievePotentialBeginBatesFieldsAsync(int caseContextArtifactID, object userState)
		{
			if ((this.RetrievePotentialBeginBatesFieldsOperationCompleted == null)) {
				this.RetrievePotentialBeginBatesFieldsOperationCompleted = this.OnRetrievePotentialBeginBatesFieldsOperationCompleted;
			}
			this.InvokeAsync("RetrievePotentialBeginBatesFields", new object[] { caseContextArtifactID }, this.RetrievePotentialBeginBatesFieldsOperationCompleted, userState);
		}

		private void OnRetrievePotentialBeginBatesFieldsOperationCompleted(object arg)
		{
			if ((((this.RetrievePotentialBeginBatesFieldsCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RetrievePotentialBeginBatesFieldsCompleted != null) {
					RetrievePotentialBeginBatesFieldsCompleted(this, new RetrievePotentialBeginBatesFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldQuery/IsFieldIndexed", RequestNamespace = "http://www.kCura.com/EDDS/FieldQuery", ResponseNamespace = "http://www.kCura.com/EDDS/FieldQuery", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool IsFieldIndexed(int caseContextArtifactID, int fieldArtifactID)
		{
			object[] results = this.Invoke("IsFieldIndexed", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginIsFieldIndexed(int caseContextArtifactID, int fieldArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("IsFieldIndexed", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndIsFieldIndexed(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void IsFieldIndexedAsync(int caseContextArtifactID, int fieldArtifactID)
		{
			this.IsFieldIndexedAsync(caseContextArtifactID, fieldArtifactID, null);
		}

		///<remarks/>
		public void IsFieldIndexedAsync(int caseContextArtifactID, int fieldArtifactID, object userState)
		{
			if ((this.IsFieldIndexedOperationCompleted == null)) {
				this.IsFieldIndexedOperationCompleted = this.OnIsFieldIndexedOperationCompleted;
			}
			this.InvokeAsync("IsFieldIndexed", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			}, this.IsFieldIndexedOperationCompleted, userState);
		}

		private void OnIsFieldIndexedOperationCompleted(object arg)
		{
			if ((((this.IsFieldIndexedCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (IsFieldIndexedCompleted != null) {
					IsFieldIndexedCompleted(this, new IsFieldIndexedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null) || (object.ReferenceEquals(url, string.Empty)))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventHandler(object sender, RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RetrieveDisplayFieldNameByFieldCategoryIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RetrieveAllMappableCompletedEventHandler(object sender, RetrieveAllMappableCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RetrieveAllMappableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RetrieveAllMappableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (System.Data.DataSet)this.results[0];
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RetrieveAllCompletedEventHandler(object sender, RetrieveAllCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RetrieveAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RetrieveAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (System.Data.DataSet)this.results[0];
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RetrievePotentialBeginBatesFieldsCompletedEventHandler(object sender, RetrievePotentialBeginBatesFieldsCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RetrievePotentialBeginBatesFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RetrievePotentialBeginBatesFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (System.Data.DataSet)this.results[0];
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void IsFieldIndexedCompletedEventHandler(object sender, IsFieldIndexedCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class IsFieldIndexedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal IsFieldIndexedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}
}
