using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Data;
using System.Linq;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



//
//This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
//
 // ERROR: Not supported in C#: OptionDeclaration
namespace kCura.EDDS.WebAPI.AuditManagerBase
{

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name = "AuditManagerSoap", Namespace = "http://www.kCura.com/EDDS/AuditManager"), System.Xml.Serialization.XmlIncludeAttribute(typeof(ImportStatistics))]
	public partial class AuditManager : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback CreateAuditRecordOperationCompleted;

		private System.Threading.SendOrPostCallback AuditImageImportOperationCompleted;

		private System.Threading.SendOrPostCallback AuditObjectImportOperationCompleted;

		private System.Threading.SendOrPostCallback AuditExportOperationCompleted;

		private System.Threading.SendOrPostCallback DeleteAuditTokenOperationCompleted;

		private System.Threading.SendOrPostCallback GetUserIdByGuidOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		///<remarks/>
		public AuditManager() : base()
		{
			this.Url = "http://localhost/RelativityWebApi/AuditManager.asmx";
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			} else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		public new string Url {
			get { return base.Url; }
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) && (this.useDefaultCredentialsSetExplicitly == false)) && (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials {
			get { return base.UseDefaultCredentials; }
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		///<remarks/>
		public event CreateAuditRecordCompletedEventHandler CreateAuditRecordCompleted;

		///<remarks/>
		public event AuditImageImportCompletedEventHandler AuditImageImportCompleted;

		///<remarks/>
		public event AuditObjectImportCompletedEventHandler AuditObjectImportCompleted;

		///<remarks/>
		public event AuditExportCompletedEventHandler AuditExportCompleted;

		///<remarks/>
		public event DeleteAuditTokenCompletedEventHandler DeleteAuditTokenCompleted;

		///<remarks/>
		public event GetUserIdByGuidCompletedEventHandler GetUserIdByGuidCompleted;

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/CreateAuditRecord", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool CreateAuditRecord(int caseContextArtifactID, int artifactID, int action, string details, string origination)
		{
			object[] results = this.Invoke("CreateAuditRecord", new object[] {
				caseContextArtifactID,
				artifactID,
				action,
				details,
				origination
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginCreateAuditRecord(int caseContextArtifactID, int artifactID, int action, string details, string origination, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("CreateAuditRecord", new object[] {
				caseContextArtifactID,
				artifactID,
				action,
				details,
				origination
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndCreateAuditRecord(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void CreateAuditRecordAsync(int caseContextArtifactID, int artifactID, int action, string details, string origination)
		{
			this.CreateAuditRecordAsync(caseContextArtifactID, artifactID, action, details, origination, null);
		}

		///<remarks/>
		public void CreateAuditRecordAsync(int caseContextArtifactID, int artifactID, int action, string details, string origination, object userState)
		{
			if ((this.CreateAuditRecordOperationCompleted == null)) {
				this.CreateAuditRecordOperationCompleted = this.OnCreateAuditRecordOperationCompleted;
			}
			this.InvokeAsync("CreateAuditRecord", new object[] {
				caseContextArtifactID,
				artifactID,
				action,
				details,
				origination
			}, this.CreateAuditRecordOperationCompleted, userState);
		}

		private void OnCreateAuditRecordOperationCompleted(object arg)
		{
			if ((((this.CreateAuditRecordCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (CreateAuditRecordCompleted != null) {
					CreateAuditRecordCompleted(this, new CreateAuditRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/AuditImageImport", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool AuditImageImport(int appID, string runId, bool isFatalError, ImageImportStatistics importStats)
		{
			object[] results = this.Invoke("AuditImageImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginAuditImageImport(int appID, string runId, bool isFatalError, ImageImportStatistics importStats, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("AuditImageImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndAuditImageImport(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void AuditImageImportAsync(int appID, string runId, bool isFatalError, ImageImportStatistics importStats)
		{
			this.AuditImageImportAsync(appID, runId, isFatalError, importStats, null);
		}

		///<remarks/>
		public void AuditImageImportAsync(int appID, string runId, bool isFatalError, ImageImportStatistics importStats, object userState)
		{
			if ((this.AuditImageImportOperationCompleted == null)) {
				this.AuditImageImportOperationCompleted = this.OnAuditImageImportOperationCompleted;
			}
			this.InvokeAsync("AuditImageImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			}, this.AuditImageImportOperationCompleted, userState);
		}

		private void OnAuditImageImportOperationCompleted(object arg)
		{
			if ((((this.AuditImageImportCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (AuditImageImportCompleted != null) {
					AuditImageImportCompleted(this, new AuditImageImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/AuditObjectImport", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool AuditObjectImport(int appID, string runId, bool isFatalError, ObjectImportStatistics importStats)
		{
			object[] results = this.Invoke("AuditObjectImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginAuditObjectImport(int appID, string runId, bool isFatalError, ObjectImportStatistics importStats, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("AuditObjectImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndAuditObjectImport(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void AuditObjectImportAsync(int appID, string runId, bool isFatalError, ObjectImportStatistics importStats)
		{
			this.AuditObjectImportAsync(appID, runId, isFatalError, importStats, null);
		}

		///<remarks/>
		public void AuditObjectImportAsync(int appID, string runId, bool isFatalError, ObjectImportStatistics importStats, object userState)
		{
			if ((this.AuditObjectImportOperationCompleted == null)) {
				this.AuditObjectImportOperationCompleted = this.OnAuditObjectImportOperationCompleted;
			}
			this.InvokeAsync("AuditObjectImport", new object[] {
				appID,
				runId,
				isFatalError,
				importStats
			}, this.AuditObjectImportOperationCompleted, userState);
		}

		private void OnAuditObjectImportOperationCompleted(object arg)
		{
			if ((((this.AuditObjectImportCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (AuditObjectImportCompleted != null) {
					AuditObjectImportCompleted(this, new AuditObjectImportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/AuditExport", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool AuditExport(int appID, bool isFatalError, ExportStatistics exportStats)
		{
			object[] results = this.Invoke("AuditExport", new object[] {
				appID,
				isFatalError,
				exportStats
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginAuditExport(int appID, bool isFatalError, ExportStatistics exportStats, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("AuditExport", new object[] {
				appID,
				isFatalError,
				exportStats
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndAuditExport(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void AuditExportAsync(int appID, bool isFatalError, ExportStatistics exportStats)
		{
			this.AuditExportAsync(appID, isFatalError, exportStats, null);
		}

		///<remarks/>
		public void AuditExportAsync(int appID, bool isFatalError, ExportStatistics exportStats, object userState)
		{
			if ((this.AuditExportOperationCompleted == null)) {
				this.AuditExportOperationCompleted = this.OnAuditExportOperationCompleted;
			}
			this.InvokeAsync("AuditExport", new object[] {
				appID,
				isFatalError,
				exportStats
			}, this.AuditExportOperationCompleted, userState);
		}

		private void OnAuditExportOperationCompleted(object arg)
		{
			if ((((this.AuditExportCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (AuditExportCompleted != null) {
					AuditExportCompleted(this, new AuditExportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/DeleteAuditToken", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void DeleteAuditToken(string token)
		{
			this.Invoke("DeleteAuditToken", new object[] { token });
		}

		///<remarks/>
		public System.IAsyncResult BeginDeleteAuditToken(string token, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("DeleteAuditToken", new object[] { token }, callback, asyncState);
		}

		///<remarks/>
		public void EndDeleteAuditToken(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void DeleteAuditTokenAsync(string token)
		{
			this.DeleteAuditTokenAsync(token, null);
		}

		///<remarks/>
		public void DeleteAuditTokenAsync(string token, object userState)
		{
			if ((this.DeleteAuditTokenOperationCompleted == null)) {
				this.DeleteAuditTokenOperationCompleted = this.OnDeleteAuditTokenOperationCompleted;
			}
			this.InvokeAsync("DeleteAuditToken", new object[] { token }, this.DeleteAuditTokenOperationCompleted, userState);
		}

		private void OnDeleteAuditTokenOperationCompleted(object arg)
		{
			if ((((this.DeleteAuditTokenCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (DeleteAuditTokenCompleted != null) {
					DeleteAuditTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/AuditManager/GetUserIdByGuid", RequestNamespace = "http://www.kCura.com/EDDS/AuditManager", ResponseNamespace = "http://www.kCura.com/EDDS/AuditManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public int GetUserIdByGuid(string token)
		{
			object[] results = this.Invoke("GetUserIdByGuid", new object[] { token });
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginGetUserIdByGuid(string token, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetUserIdByGuid", new object[] { token }, callback, asyncState);
		}

		///<remarks/>
		public int EndGetUserIdByGuid(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public void GetUserIdByGuidAsync(string token)
		{
			this.GetUserIdByGuidAsync(token, null);
		}

		///<remarks/>
		public void GetUserIdByGuidAsync(string token, object userState)
		{
			if ((this.GetUserIdByGuidOperationCompleted == null)) {
				this.GetUserIdByGuidOperationCompleted = this.OnGetUserIdByGuidOperationCompleted;
			}
			this.InvokeAsync("GetUserIdByGuid", new object[] { token }, this.GetUserIdByGuidOperationCompleted, userState);
		}

		private void OnGetUserIdByGuidOperationCompleted(object arg)
		{
			if ((((this.GetUserIdByGuidCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GetUserIdByGuidCompleted != null) {
					GetUserIdByGuidCompleted(this, new GetUserIdByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null) || (object.ReferenceEquals(url, string.Empty)))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public partial class ImageImportStatistics : ImportStatistics
	{

		private bool extractedTextReplacedField;

		private bool supportImageAutoNumberingField;

		private int destinationProductionArtifactIDField;

		private int extractedTextDefaultEncodingCodePageIDField;

		///<remarks/>
		public bool ExtractedTextReplaced {
			get { return this.extractedTextReplacedField; }
			set { this.extractedTextReplacedField = value; }
		}

		///<remarks/>
		public bool SupportImageAutoNumbering {
			get { return this.supportImageAutoNumberingField; }
			set { this.supportImageAutoNumberingField = value; }
		}

		///<remarks/>
		public int DestinationProductionArtifactID {
			get { return this.destinationProductionArtifactIDField; }
			set { this.destinationProductionArtifactIDField = value; }
		}

		///<remarks/>
		public int ExtractedTextDefaultEncodingCodePageID {
			get { return this.extractedTextDefaultEncodingCodePageIDField; }
			set { this.extractedTextDefaultEncodingCodePageIDField = value; }
		}
	}

	///<remarks/>
	[System.Xml.Serialization.XmlIncludeAttribute(typeof(ObjectImportStatistics)), System.Xml.Serialization.XmlIncludeAttribute(typeof(ImageImportStatistics)), System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public abstract partial class ImportStatistics
	{

		private int[] batchSizesField;

		private RepositoryConnectionType repositoryConnectionField;

		private OverwriteType overwriteField;

		private int overlayIdentifierFieldArtifactIDField;

		private int destinationFolderArtifactIDField;

		private string loadFileNameField;

		private int startLineField;

		private string filesCopiedToRepositoryField;

		private long totalFileSizeField;

		private long totalMetadataBytesField;

		private int numberOfDocumentsCreatedField;

		private int numberOfDocumentsUpdatedField;

		private int numberOfFilesLoadedField;

		private long numberOfErrorsField;

		private long numberOfWarningsField;

		private int runTimeInMillisecondsField;

		private bool sendNotificationField;

		private System.Nullable<OverlayBehavior> overlayBehaviorField;

		///<remarks/>
		public int[] BatchSizes {
			get { return this.batchSizesField; }
			set { this.batchSizesField = value; }
		}

		///<remarks/>
		public RepositoryConnectionType RepositoryConnection {
			get { return this.repositoryConnectionField; }
			set { this.repositoryConnectionField = value; }
		}

		///<remarks/>
		public OverwriteType Overwrite {
			get { return this.overwriteField; }
			set { this.overwriteField = value; }
		}

		///<remarks/>
		public int OverlayIdentifierFieldArtifactID {
			get { return this.overlayIdentifierFieldArtifactIDField; }
			set { this.overlayIdentifierFieldArtifactIDField = value; }
		}

		///<remarks/>
		public int DestinationFolderArtifactID {
			get { return this.destinationFolderArtifactIDField; }
			set { this.destinationFolderArtifactIDField = value; }
		}

		///<remarks/>
		public string LoadFileName {
			get { return this.loadFileNameField; }
			set { this.loadFileNameField = value; }
		}

		///<remarks/>
		public int StartLine {
			get { return this.startLineField; }
			set { this.startLineField = value; }
		}

		///<remarks/>
		public string FilesCopiedToRepository {
			get { return this.filesCopiedToRepositoryField; }
			set { this.filesCopiedToRepositoryField = value; }
		}

		///<remarks/>
		public long TotalFileSize {
			get { return this.totalFileSizeField; }
			set { this.totalFileSizeField = value; }
		}

		///<remarks/>
		public long TotalMetadataBytes {
			get { return this.totalMetadataBytesField; }
			set { this.totalMetadataBytesField = value; }
		}

		///<remarks/>
		public int NumberOfDocumentsCreated {
			get { return this.numberOfDocumentsCreatedField; }
			set { this.numberOfDocumentsCreatedField = value; }
		}

		///<remarks/>
		public int NumberOfDocumentsUpdated {
			get { return this.numberOfDocumentsUpdatedField; }
			set { this.numberOfDocumentsUpdatedField = value; }
		}

		///<remarks/>
		public int NumberOfFilesLoaded {
			get { return this.numberOfFilesLoadedField; }
			set { this.numberOfFilesLoadedField = value; }
		}

		///<remarks/>
		public long NumberOfErrors {
			get { return this.numberOfErrorsField; }
			set { this.numberOfErrorsField = value; }
		}

		///<remarks/>
		public long NumberOfWarnings {
			get { return this.numberOfWarningsField; }
			set { this.numberOfWarningsField = value; }
		}

		///<remarks/>
		public int RunTimeInMilliseconds {
			get { return this.runTimeInMillisecondsField; }
			set { this.runTimeInMillisecondsField = value; }
		}

		///<remarks/>
		public bool SendNotification {
			get { return this.sendNotificationField; }
			set { this.sendNotificationField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<OverlayBehavior> OverlayBehavior {
			get { return this.overlayBehaviorField; }
			set { this.overlayBehaviorField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum RepositoryConnectionType
	{

		///<remarks/>
		Web,

		///<remarks/>
		Direct
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum OverwriteType
	{

		///<remarks/>
		Append,

		///<remarks/>
		Overlay,

		///<remarks/>
		Both
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum OverlayBehavior
	{

		///<remarks/>
		UseRelativityDefaults,

		///<remarks/>
		MergeAll,

		///<remarks/>
		ReplaceAll
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public partial class ExportStatistics
	{

		private string typeField;

		private int[] fieldsField;

		private string destinationFilesystemFolderField;

		private bool overwriteFilesField;

		private string volumePrefixField;

		private long volumeMaxSizeField;

		private string subdirectoryImagePrefixField;

		private string subdirectoryNativePrefixField;

		private string subdirectoryTextPrefixField;

		private long subdirectoryStartNumberField;

		private long subdirectoryMaxFileCountField;

		private string filePathSettingsField;

		private char delimiterField;

		private char boundField;

		private char newlineProxyField;

		private char multiValueDelimiterField;

		private char nestedValueDelimiterField;

		private int textAndNativeFilesNamedAfterFieldIDField;

		private bool appendOriginalFilenamesField;

		private bool exportImagesField;

		private ImageLoadFileFormatType imageLoadFileFormatField;

		private ImageFileExportType imageFileTypeField;

		private bool exportNativeFilesField;

		private LoadFileFormat metadataLoadFileFormatField;

		private int metadataLoadFileEncodingCodePageField;

		private bool exportTextFieldAsFilesField;

		private int exportedTextFileEncodingCodePageField;

		private int exportedTextFieldIDField;

		private bool exportMultipleChoiceFieldsAsNestedField;

		private long totalFileBytesExportedField;

		private long totalMetadataBytesExportedField;

		private int errorCountField;

		private int warningCountField;

		private int documentExportCountField;

		private int fileExportCountField;

		private ImagesToExportType imagesToExportField;

		private int[] productionPrecedenceField;

		private int dataSourceArtifactIDField;

		private int sourceRootFolderIDField;

		private int runTimeInMillisecondsField;

		private bool copyFilesFromRepositoryField;

		private int startExportAtDocumentNumberField;

		private int volumeStartNumberField;

		private int artifactTypeIDField;

		///<remarks/>
		public string Type {
			get { return this.typeField; }
			set { this.typeField = value; }
		}

		///<remarks/>
		public int[] Fields {
			get { return this.fieldsField; }
			set { this.fieldsField = value; }
		}

		///<remarks/>
		public string DestinationFilesystemFolder {
			get { return this.destinationFilesystemFolderField; }
			set { this.destinationFilesystemFolderField = value; }
		}

		///<remarks/>
		public bool OverwriteFiles {
			get { return this.overwriteFilesField; }
			set { this.overwriteFilesField = value; }
		}

		///<remarks/>
		public string VolumePrefix {
			get { return this.volumePrefixField; }
			set { this.volumePrefixField = value; }
		}

		///<remarks/>
		public long VolumeMaxSize {
			get { return this.volumeMaxSizeField; }
			set { this.volumeMaxSizeField = value; }
		}

		///<remarks/>
		public string SubdirectoryImagePrefix {
			get { return this.subdirectoryImagePrefixField; }
			set { this.subdirectoryImagePrefixField = value; }
		}

		///<remarks/>
		public string SubdirectoryNativePrefix {
			get { return this.subdirectoryNativePrefixField; }
			set { this.subdirectoryNativePrefixField = value; }
		}

		///<remarks/>
		public string SubdirectoryTextPrefix {
			get { return this.subdirectoryTextPrefixField; }
			set { this.subdirectoryTextPrefixField = value; }
		}

		///<remarks/>
		public long SubdirectoryStartNumber {
			get { return this.subdirectoryStartNumberField; }
			set { this.subdirectoryStartNumberField = value; }
		}

		///<remarks/>
		public long SubdirectoryMaxFileCount {
			get { return this.subdirectoryMaxFileCountField; }
			set { this.subdirectoryMaxFileCountField = value; }
		}

		///<remarks/>
		public string FilePathSettings {
			get { return this.filePathSettingsField; }
			set { this.filePathSettingsField = value; }
		}

		///<remarks/>
		public char Delimiter {
			get { return this.delimiterField; }
			set { this.delimiterField = value; }
		}

		///<remarks/>
		public char Bound {
			get { return this.boundField; }
			set { this.boundField = value; }
		}

		///<remarks/>
		public char NewlineProxy {
			get { return this.newlineProxyField; }
			set { this.newlineProxyField = value; }
		}

		///<remarks/>
		public char MultiValueDelimiter {
			get { return this.multiValueDelimiterField; }
			set { this.multiValueDelimiterField = value; }
		}

		///<remarks/>
		public char NestedValueDelimiter {
			get { return this.nestedValueDelimiterField; }
			set { this.nestedValueDelimiterField = value; }
		}

		///<remarks/>
		public int TextAndNativeFilesNamedAfterFieldID {
			get { return this.textAndNativeFilesNamedAfterFieldIDField; }
			set { this.textAndNativeFilesNamedAfterFieldIDField = value; }
		}

		///<remarks/>
		public bool AppendOriginalFilenames {
			get { return this.appendOriginalFilenamesField; }
			set { this.appendOriginalFilenamesField = value; }
		}

		///<remarks/>
		public bool ExportImages {
			get { return this.exportImagesField; }
			set { this.exportImagesField = value; }
		}

		///<remarks/>
		public ImageLoadFileFormatType ImageLoadFileFormat {
			get { return this.imageLoadFileFormatField; }
			set { this.imageLoadFileFormatField = value; }
		}

		///<remarks/>
		public ImageFileExportType ImageFileType {
			get { return this.imageFileTypeField; }
			set { this.imageFileTypeField = value; }
		}

		///<remarks/>
		public bool ExportNativeFiles {
			get { return this.exportNativeFilesField; }
			set { this.exportNativeFilesField = value; }
		}

		///<remarks/>
		public LoadFileFormat MetadataLoadFileFormat {
			get { return this.metadataLoadFileFormatField; }
			set { this.metadataLoadFileFormatField = value; }
		}

		///<remarks/>
		public int MetadataLoadFileEncodingCodePage {
			get { return this.metadataLoadFileEncodingCodePageField; }
			set { this.metadataLoadFileEncodingCodePageField = value; }
		}

		///<remarks/>
		public bool ExportTextFieldAsFiles {
			get { return this.exportTextFieldAsFilesField; }
			set { this.exportTextFieldAsFilesField = value; }
		}

		///<remarks/>
		public int ExportedTextFileEncodingCodePage {
			get { return this.exportedTextFileEncodingCodePageField; }
			set { this.exportedTextFileEncodingCodePageField = value; }
		}

		///<remarks/>
		public int ExportedTextFieldID {
			get { return this.exportedTextFieldIDField; }
			set { this.exportedTextFieldIDField = value; }
		}

		///<remarks/>
		public bool ExportMultipleChoiceFieldsAsNested {
			get { return this.exportMultipleChoiceFieldsAsNestedField; }
			set { this.exportMultipleChoiceFieldsAsNestedField = value; }
		}

		///<remarks/>
		public long TotalFileBytesExported {
			get { return this.totalFileBytesExportedField; }
			set { this.totalFileBytesExportedField = value; }
		}

		///<remarks/>
		public long TotalMetadataBytesExported {
			get { return this.totalMetadataBytesExportedField; }
			set { this.totalMetadataBytesExportedField = value; }
		}

		///<remarks/>
		public int ErrorCount {
			get { return this.errorCountField; }
			set { this.errorCountField = value; }
		}

		///<remarks/>
		public int WarningCount {
			get { return this.warningCountField; }
			set { this.warningCountField = value; }
		}

		///<remarks/>
		public int DocumentExportCount {
			get { return this.documentExportCountField; }
			set { this.documentExportCountField = value; }
		}

		///<remarks/>
		public int FileExportCount {
			get { return this.fileExportCountField; }
			set { this.fileExportCountField = value; }
		}

		///<remarks/>
		public ImagesToExportType ImagesToExport {
			get { return this.imagesToExportField; }
			set { this.imagesToExportField = value; }
		}

		///<remarks/>
		public int[] ProductionPrecedence {
			get { return this.productionPrecedenceField; }
			set { this.productionPrecedenceField = value; }
		}

		///<remarks/>
		public int DataSourceArtifactID {
			get { return this.dataSourceArtifactIDField; }
			set { this.dataSourceArtifactIDField = value; }
		}

		///<remarks/>
		public int SourceRootFolderID {
			get { return this.sourceRootFolderIDField; }
			set { this.sourceRootFolderIDField = value; }
		}

		///<remarks/>
		public int RunTimeInMilliseconds {
			get { return this.runTimeInMillisecondsField; }
			set { this.runTimeInMillisecondsField = value; }
		}

		///<remarks/>
		public bool CopyFilesFromRepository {
			get { return this.copyFilesFromRepositoryField; }
			set { this.copyFilesFromRepositoryField = value; }
		}

		///<remarks/>
		public int StartExportAtDocumentNumber {
			get { return this.startExportAtDocumentNumberField; }
			set { this.startExportAtDocumentNumberField = value; }
		}

		///<remarks/>
		public int VolumeStartNumber {
			get { return this.volumeStartNumberField; }
			set { this.volumeStartNumberField = value; }
		}

		///<remarks/>
		public int ArtifactTypeID {
			get { return this.artifactTypeIDField; }
			set { this.artifactTypeIDField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum ImageLoadFileFormatType
	{

		///<remarks/>
		Opticon,

		///<remarks/>
		Ipro,

		///<remarks/>
		IproFullText
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum ImageFileExportType
	{

		///<remarks/>
		SinglePage,

		///<remarks/>
		MultiPageTiff,

		///<remarks/>
		PDF
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum LoadFileFormat
	{

		///<remarks/>
		Csv,

		///<remarks/>
		Dat,

		///<remarks/>
		Custom,

		///<remarks/>
		Html
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public enum ImagesToExportType
	{

		///<remarks/>
		Original,

		///<remarks/>
		Produced,

		///<remarks/>
		Both
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/AuditManager")]
	public partial class ObjectImportStatistics : ImportStatistics
	{

		private int artifactTypeIDField;

		private char delimiterField;

		private char boundField;

		private char newlineProxyField;

		private char multiValueDelimiterField;

		private int loadFileEncodingCodePageIDField;

		private int extractedTextFileEncodingCodePageIDField;

		private string folderColumnNameField;

		private string fileFieldColumnNameField;

		private bool extractedTextPointsToFileField;

		private int numberOfChoicesCreatedField;

		private int numberOfFoldersCreatedField;

		private int[][] fieldsMappedField;

		private char nestedValueDelimiterField;

		///<remarks/>
		public int ArtifactTypeID {
			get { return this.artifactTypeIDField; }
			set { this.artifactTypeIDField = value; }
		}

		///<remarks/>
		public char Delimiter {
			get { return this.delimiterField; }
			set { this.delimiterField = value; }
		}

		///<remarks/>
		public char Bound {
			get { return this.boundField; }
			set { this.boundField = value; }
		}

		///<remarks/>
		public char NewlineProxy {
			get { return this.newlineProxyField; }
			set { this.newlineProxyField = value; }
		}

		///<remarks/>
		public char MultiValueDelimiter {
			get { return this.multiValueDelimiterField; }
			set { this.multiValueDelimiterField = value; }
		}

		///<remarks/>
		public int LoadFileEncodingCodePageID {
			get { return this.loadFileEncodingCodePageIDField; }
			set { this.loadFileEncodingCodePageIDField = value; }
		}

		///<remarks/>
		public int ExtractedTextFileEncodingCodePageID {
			get { return this.extractedTextFileEncodingCodePageIDField; }
			set { this.extractedTextFileEncodingCodePageIDField = value; }
		}

		///<remarks/>
		public string FolderColumnName {
			get { return this.folderColumnNameField; }
			set { this.folderColumnNameField = value; }
		}

		///<remarks/>
		public string FileFieldColumnName {
			get { return this.fileFieldColumnNameField; }
			set { this.fileFieldColumnNameField = value; }
		}

		///<remarks/>
		public bool ExtractedTextPointsToFile {
			get { return this.extractedTextPointsToFileField; }
			set { this.extractedTextPointsToFileField = value; }
		}

		///<remarks/>
		public int NumberOfChoicesCreated {
			get { return this.numberOfChoicesCreatedField; }
			set { this.numberOfChoicesCreatedField = value; }
		}

		///<remarks/>
		public int NumberOfFoldersCreated {
			get { return this.numberOfFoldersCreatedField; }
			set { this.numberOfFoldersCreatedField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfInt"), System.Xml.Serialization.XmlArrayItemAttribute(IsNullable = false, NestingLevel = 1)]
		public int[][] FieldsMapped {
			get { return this.fieldsMappedField; }
			set { this.fieldsMappedField = value; }
		}

		///<remarks/>
		public char NestedValueDelimiter {
			get { return this.nestedValueDelimiterField; }
			set { this.nestedValueDelimiterField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void CreateAuditRecordCompletedEventHandler(object sender, CreateAuditRecordCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateAuditRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateAuditRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void AuditImageImportCompletedEventHandler(object sender, AuditImageImportCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AuditImageImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal AuditImageImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void AuditObjectImportCompletedEventHandler(object sender, AuditObjectImportCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AuditObjectImportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal AuditObjectImportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void AuditExportCompletedEventHandler(object sender, AuditExportCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AuditExportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal AuditExportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void DeleteAuditTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void GetUserIdByGuidCompletedEventHandler(object sender, GetUserIdByGuidCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetUserIdByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetUserIdByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public int Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToInt32(this.results[0]);
			}
		}
	}
}
