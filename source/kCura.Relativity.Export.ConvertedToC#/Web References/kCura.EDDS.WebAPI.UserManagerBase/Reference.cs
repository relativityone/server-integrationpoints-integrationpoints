using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Data;
using System.Linq;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


 // ERROR: Not supported in C#: OptionDeclaration
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

//
//This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
//
namespace kCura.EDDS.WebAPI.UserManagerBase
{

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name = "UserManagerSoap", Namespace = "http://www.kCura.com/EDDS/UserManager")]
	public partial class UserManager : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback UpdateImageViewerDefaultViewModeOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateOIXDocumentModeOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateSelectedMarkupSetArtifactIDOperationCompleted;

		private System.Threading.SendOrPostCallback UpdateDefaultRedactionTextOperationCompleted;

		private System.Threading.SendOrPostCallback LogoutOperationCompleted;

		private System.Threading.SendOrPostCallback ClearCookiesBeforeLoginOperationCompleted;

		private System.Threading.SendOrPostCallback LoggedInOperationCompleted;

		private System.Threading.SendOrPostCallback LoginOperationCompleted;

		private System.Threading.SendOrPostCallback LoginWithAuthenticationTokenOperationCompleted;

		private System.Threading.SendOrPostCallback GenerateAuthenticationTokenOperationCompleted;

		private System.Threading.SendOrPostCallback GenerateDistributedAuthenticationTokenOperationCompleted;

		private System.Threading.SendOrPostCallback GetLatestAuthenticationTokenOperationCompleted;

		private System.Threading.SendOrPostCallback RetrieveAllAssignableInCaseOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		///<remarks/>
		public UserManager() : base()
		{
			this.Url = "http://localhost/RelativityWebApi/UserManager.asmx";
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			} else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		public new string Url {
			get { return base.Url; }
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) && (this.useDefaultCredentialsSetExplicitly == false)) && (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials {
			get { return base.UseDefaultCredentials; }
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		///<remarks/>
		public event UpdateImageViewerDefaultViewModeCompletedEventHandler UpdateImageViewerDefaultViewModeCompleted;

		///<remarks/>
		public event UpdateOIXDocumentModeCompletedEventHandler UpdateOIXDocumentModeCompleted;

		///<remarks/>
		public event UpdateSelectedMarkupSetArtifactIDCompletedEventHandler UpdateSelectedMarkupSetArtifactIDCompleted;

		///<remarks/>
		public event UpdateDefaultRedactionTextCompletedEventHandler UpdateDefaultRedactionTextCompleted;

		///<remarks/>
		public event LogoutCompletedEventHandler LogoutCompleted;

		///<remarks/>
		public event ClearCookiesBeforeLoginCompletedEventHandler ClearCookiesBeforeLoginCompleted;

		///<remarks/>
		public event LoggedInCompletedEventHandler LoggedInCompleted;

		///<remarks/>
		public event LoginCompletedEventHandler LoginCompleted;

		///<remarks/>
		public event LoginWithAuthenticationTokenCompletedEventHandler LoginWithAuthenticationTokenCompleted;

		///<remarks/>
		public event GenerateAuthenticationTokenCompletedEventHandler GenerateAuthenticationTokenCompleted;

		///<remarks/>
		public event GenerateDistributedAuthenticationTokenCompletedEventHandler GenerateDistributedAuthenticationTokenCompleted;

		///<remarks/>
		public event GetLatestAuthenticationTokenCompletedEventHandler GetLatestAuthenticationTokenCompleted;

		///<remarks/>
		public event RetrieveAllAssignableInCaseCompletedEventHandler RetrieveAllAssignableInCaseCompleted;

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateImageViewerDefaultViewMode", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UpdateImageViewerDefaultViewMode(string defaultViewMode)
		{
			this.Invoke("UpdateImageViewerDefaultViewMode", new object[] { defaultViewMode });
		}

		///<remarks/>
		public System.IAsyncResult BeginUpdateImageViewerDefaultViewMode(string defaultViewMode, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateImageViewerDefaultViewMode", new object[] { defaultViewMode }, callback, asyncState);
		}

		///<remarks/>
		public void EndUpdateImageViewerDefaultViewMode(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void UpdateImageViewerDefaultViewModeAsync(string defaultViewMode)
		{
			this.UpdateImageViewerDefaultViewModeAsync(defaultViewMode, null);
		}

		///<remarks/>
		public void UpdateImageViewerDefaultViewModeAsync(string defaultViewMode, object userState)
		{
			if ((this.UpdateImageViewerDefaultViewModeOperationCompleted == null)) {
				this.UpdateImageViewerDefaultViewModeOperationCompleted = this.OnUpdateImageViewerDefaultViewModeOperationCompleted;
			}
			this.InvokeAsync("UpdateImageViewerDefaultViewMode", new object[] { defaultViewMode }, this.UpdateImageViewerDefaultViewModeOperationCompleted, userState);
		}

		private void OnUpdateImageViewerDefaultViewModeOperationCompleted(object arg)
		{
			if ((((this.UpdateImageViewerDefaultViewModeCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (UpdateImageViewerDefaultViewModeCompleted != null) {
					UpdateImageViewerDefaultViewModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateOIXDocumentMode", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UpdateOIXDocumentMode(int mode)
		{
			this.Invoke("UpdateOIXDocumentMode", new object[] { mode });
		}

		///<remarks/>
		public System.IAsyncResult BeginUpdateOIXDocumentMode(int mode, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateOIXDocumentMode", new object[] { mode }, callback, asyncState);
		}

		///<remarks/>
		public void EndUpdateOIXDocumentMode(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void UpdateOIXDocumentModeAsync(int mode)
		{
			this.UpdateOIXDocumentModeAsync(mode, null);
		}

		///<remarks/>
		public void UpdateOIXDocumentModeAsync(int mode, object userState)
		{
			if ((this.UpdateOIXDocumentModeOperationCompleted == null)) {
				this.UpdateOIXDocumentModeOperationCompleted = this.OnUpdateOIXDocumentModeOperationCompleted;
			}
			this.InvokeAsync("UpdateOIXDocumentMode", new object[] { mode }, this.UpdateOIXDocumentModeOperationCompleted, userState);
		}

		private void OnUpdateOIXDocumentModeOperationCompleted(object arg)
		{
			if ((((this.UpdateOIXDocumentModeCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (UpdateOIXDocumentModeCompleted != null) {
					UpdateOIXDocumentModeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateSelectedMarkupSetArtifactID", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UpdateSelectedMarkupSetArtifactID(int selectedMarkupSetArtifactID)
		{
			this.Invoke("UpdateSelectedMarkupSetArtifactID", new object[] { selectedMarkupSetArtifactID });
		}

		///<remarks/>
		public System.IAsyncResult BeginUpdateSelectedMarkupSetArtifactID(int selectedMarkupSetArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateSelectedMarkupSetArtifactID", new object[] { selectedMarkupSetArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public void EndUpdateSelectedMarkupSetArtifactID(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void UpdateSelectedMarkupSetArtifactIDAsync(int selectedMarkupSetArtifactID)
		{
			this.UpdateSelectedMarkupSetArtifactIDAsync(selectedMarkupSetArtifactID, null);
		}

		///<remarks/>
		public void UpdateSelectedMarkupSetArtifactIDAsync(int selectedMarkupSetArtifactID, object userState)
		{
			if ((this.UpdateSelectedMarkupSetArtifactIDOperationCompleted == null)) {
				this.UpdateSelectedMarkupSetArtifactIDOperationCompleted = this.OnUpdateSelectedMarkupSetArtifactIDOperationCompleted;
			}
			this.InvokeAsync("UpdateSelectedMarkupSetArtifactID", new object[] { selectedMarkupSetArtifactID }, this.UpdateSelectedMarkupSetArtifactIDOperationCompleted, userState);
		}

		private void OnUpdateSelectedMarkupSetArtifactIDOperationCompleted(object arg)
		{
			if ((((this.UpdateSelectedMarkupSetArtifactIDCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (UpdateSelectedMarkupSetArtifactIDCompleted != null) {
					UpdateSelectedMarkupSetArtifactIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/UpdateDefaultRedactionText", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void UpdateDefaultRedactionText(string text)
		{
			this.Invoke("UpdateDefaultRedactionText", new object[] { text });
		}

		///<remarks/>
		public System.IAsyncResult BeginUpdateDefaultRedactionText(string text, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("UpdateDefaultRedactionText", new object[] { text }, callback, asyncState);
		}

		///<remarks/>
		public void EndUpdateDefaultRedactionText(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void UpdateDefaultRedactionTextAsync(string text)
		{
			this.UpdateDefaultRedactionTextAsync(text, null);
		}

		///<remarks/>
		public void UpdateDefaultRedactionTextAsync(string text, object userState)
		{
			if ((this.UpdateDefaultRedactionTextOperationCompleted == null)) {
				this.UpdateDefaultRedactionTextOperationCompleted = this.OnUpdateDefaultRedactionTextOperationCompleted;
			}
			this.InvokeAsync("UpdateDefaultRedactionText", new object[] { text }, this.UpdateDefaultRedactionTextOperationCompleted, userState);
		}

		private void OnUpdateDefaultRedactionTextOperationCompleted(object arg)
		{
			if ((((this.UpdateDefaultRedactionTextCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (UpdateDefaultRedactionTextCompleted != null) {
					UpdateDefaultRedactionTextCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/Logout", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void Logout()
		{
			this.Invoke("Logout", new object[-1 + 1]);
		}

		///<remarks/>
		public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Logout", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public void EndLogout(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void LogoutAsync()
		{
			this.LogoutAsync(null);
		}

		///<remarks/>
		public void LogoutAsync(object userState)
		{
			if ((this.LogoutOperationCompleted == null)) {
				this.LogoutOperationCompleted = this.OnLogoutOperationCompleted;
			}
			this.InvokeAsync("Logout", new object[-1 + 1], this.LogoutOperationCompleted, userState);
		}

		private void OnLogoutOperationCompleted(object arg)
		{
			if ((((this.LogoutCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (LogoutCompleted != null) {
					LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/ClearCookiesBeforeLogin", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void ClearCookiesBeforeLogin()
		{
			this.Invoke("ClearCookiesBeforeLogin", new object[-1 + 1]);
		}

		///<remarks/>
		public System.IAsyncResult BeginClearCookiesBeforeLogin(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ClearCookiesBeforeLogin", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public void EndClearCookiesBeforeLogin(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void ClearCookiesBeforeLoginAsync()
		{
			this.ClearCookiesBeforeLoginAsync(null);
		}

		///<remarks/>
		public void ClearCookiesBeforeLoginAsync(object userState)
		{
			if ((this.ClearCookiesBeforeLoginOperationCompleted == null)) {
				this.ClearCookiesBeforeLoginOperationCompleted = this.OnClearCookiesBeforeLoginOperationCompleted;
			}
			this.InvokeAsync("ClearCookiesBeforeLogin", new object[-1 + 1], this.ClearCookiesBeforeLoginOperationCompleted, userState);
		}

		private void OnClearCookiesBeforeLoginOperationCompleted(object arg)
		{
			if ((((this.ClearCookiesBeforeLoginCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (ClearCookiesBeforeLoginCompleted != null) {
					ClearCookiesBeforeLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/LoggedIn", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool LoggedIn()
		{
			object[] results = this.Invoke("LoggedIn", new object[-1 + 1]);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginLoggedIn(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("LoggedIn", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public bool EndLoggedIn(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void LoggedInAsync()
		{
			this.LoggedInAsync(null);
		}

		///<remarks/>
		public void LoggedInAsync(object userState)
		{
			if ((this.LoggedInOperationCompleted == null)) {
				this.LoggedInOperationCompleted = this.OnLoggedInOperationCompleted;
			}
			this.InvokeAsync("LoggedIn", new object[-1 + 1], this.LoggedInOperationCompleted, userState);
		}

		private void OnLoggedInOperationCompleted(object arg)
		{
			if ((((this.LoggedInCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (LoggedInCompleted != null) {
					LoggedInCompleted(this, new LoggedInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/Login", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool Login(string emailAddress, string password)
		{
			object[] results = this.Invoke("Login", new object[] {
				emailAddress,
				password
			});
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginLogin(string emailAddress, string password, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Login", new object[] {
				emailAddress,
				password
			}, callback, asyncState);
		}

		///<remarks/>
		public bool EndLogin(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void LoginAsync(string emailAddress, string password)
		{
			this.LoginAsync(emailAddress, password, null);
		}

		///<remarks/>
		public void LoginAsync(string emailAddress, string password, object userState)
		{
			if ((this.LoginOperationCompleted == null)) {
				this.LoginOperationCompleted = this.OnLoginOperationCompleted;
			}
			this.InvokeAsync("Login", new object[] {
				emailAddress,
				password
			}, this.LoginOperationCompleted, userState);
		}

		private void OnLoginOperationCompleted(object arg)
		{
			if ((((this.LoginCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (LoginCompleted != null) {
					LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/LoginWithAuthenticationToken", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string LoginWithAuthenticationToken(string authenticationToken)
		{
			object[] results = this.Invoke("LoginWithAuthenticationToken", new object[] { authenticationToken });
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginLoginWithAuthenticationToken(string authenticationToken, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("LoginWithAuthenticationToken", new object[] { authenticationToken }, callback, asyncState);
		}

		///<remarks/>
		public string EndLoginWithAuthenticationToken(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void LoginWithAuthenticationTokenAsync(string authenticationToken)
		{
			this.LoginWithAuthenticationTokenAsync(authenticationToken, null);
		}

		///<remarks/>
		public void LoginWithAuthenticationTokenAsync(string authenticationToken, object userState)
		{
			if ((this.LoginWithAuthenticationTokenOperationCompleted == null)) {
				this.LoginWithAuthenticationTokenOperationCompleted = this.OnLoginWithAuthenticationTokenOperationCompleted;
			}
			this.InvokeAsync("LoginWithAuthenticationToken", new object[] { authenticationToken }, this.LoginWithAuthenticationTokenOperationCompleted, userState);
		}

		private void OnLoginWithAuthenticationTokenOperationCompleted(object arg)
		{
			if ((((this.LoginWithAuthenticationTokenCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (LoginWithAuthenticationTokenCompleted != null) {
					LoginWithAuthenticationTokenCompleted(this, new LoginWithAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GenerateAuthenticationToken", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string GenerateAuthenticationToken()
		{
			object[] results = this.Invoke("GenerateAuthenticationToken", new object[-1 + 1]);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginGenerateAuthenticationToken(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GenerateAuthenticationToken", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public string EndGenerateAuthenticationToken(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void GenerateAuthenticationTokenAsync()
		{
			this.GenerateAuthenticationTokenAsync(null);
		}

		///<remarks/>
		public void GenerateAuthenticationTokenAsync(object userState)
		{
			if ((this.GenerateAuthenticationTokenOperationCompleted == null)) {
				this.GenerateAuthenticationTokenOperationCompleted = this.OnGenerateAuthenticationTokenOperationCompleted;
			}
			this.InvokeAsync("GenerateAuthenticationToken", new object[-1 + 1], this.GenerateAuthenticationTokenOperationCompleted, userState);
		}

		private void OnGenerateAuthenticationTokenOperationCompleted(object arg)
		{
			if ((((this.GenerateAuthenticationTokenCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GenerateAuthenticationTokenCompleted != null) {
					GenerateAuthenticationTokenCompleted(this, new GenerateAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GenerateDistributedAuthenticationToken", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string GenerateDistributedAuthenticationToken()
		{
			object[] results = this.Invoke("GenerateDistributedAuthenticationToken", new object[-1 + 1]);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginGenerateDistributedAuthenticationToken(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GenerateDistributedAuthenticationToken", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public string EndGenerateDistributedAuthenticationToken(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void GenerateDistributedAuthenticationTokenAsync()
		{
			this.GenerateDistributedAuthenticationTokenAsync(null);
		}

		///<remarks/>
		public void GenerateDistributedAuthenticationTokenAsync(object userState)
		{
			if ((this.GenerateDistributedAuthenticationTokenOperationCompleted == null)) {
				this.GenerateDistributedAuthenticationTokenOperationCompleted = this.OnGenerateDistributedAuthenticationTokenOperationCompleted;
			}
			this.InvokeAsync("GenerateDistributedAuthenticationToken", new object[-1 + 1], this.GenerateDistributedAuthenticationTokenOperationCompleted, userState);
		}

		private void OnGenerateDistributedAuthenticationTokenOperationCompleted(object arg)
		{
			if ((((this.GenerateDistributedAuthenticationTokenCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GenerateDistributedAuthenticationTokenCompleted != null) {
					GenerateDistributedAuthenticationTokenCompleted(this, new GenerateDistributedAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/GetLatestAuthenticationToken", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string GetLatestAuthenticationToken()
		{
			object[] results = this.Invoke("GetLatestAuthenticationToken", new object[-1 + 1]);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginGetLatestAuthenticationToken(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetLatestAuthenticationToken", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public string EndGetLatestAuthenticationToken(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void GetLatestAuthenticationTokenAsync()
		{
			this.GetLatestAuthenticationTokenAsync(null);
		}

		///<remarks/>
		public void GetLatestAuthenticationTokenAsync(object userState)
		{
			if ((this.GetLatestAuthenticationTokenOperationCompleted == null)) {
				this.GetLatestAuthenticationTokenOperationCompleted = this.OnGetLatestAuthenticationTokenOperationCompleted;
			}
			this.InvokeAsync("GetLatestAuthenticationToken", new object[-1 + 1], this.GetLatestAuthenticationTokenOperationCompleted, userState);
		}

		private void OnGetLatestAuthenticationTokenOperationCompleted(object arg)
		{
			if ((((this.GetLatestAuthenticationTokenCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GetLatestAuthenticationTokenCompleted != null) {
					GetLatestAuthenticationTokenCompleted(this, new GetLatestAuthenticationTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/UserManager/RetrieveAllAssignableInCase", RequestNamespace = "http://www.kCura.com/EDDS/UserManager", ResponseNamespace = "http://www.kCura.com/EDDS/UserManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public System.Data.DataSet RetrieveAllAssignableInCase(int caseContextArtifactID)
		{
			object[] results = this.Invoke("RetrieveAllAssignableInCase", new object[] { caseContextArtifactID });
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginRetrieveAllAssignableInCase(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RetrieveAllAssignableInCase", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public System.Data.DataSet EndRetrieveAllAssignableInCase(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (System.Data.DataSet)results[0];
		}

		///<remarks/>
		public void RetrieveAllAssignableInCaseAsync(int caseContextArtifactID)
		{
			this.RetrieveAllAssignableInCaseAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void RetrieveAllAssignableInCaseAsync(int caseContextArtifactID, object userState)
		{
			if ((this.RetrieveAllAssignableInCaseOperationCompleted == null)) {
				this.RetrieveAllAssignableInCaseOperationCompleted = this.OnRetrieveAllAssignableInCaseOperationCompleted;
			}
			this.InvokeAsync("RetrieveAllAssignableInCase", new object[] { caseContextArtifactID }, this.RetrieveAllAssignableInCaseOperationCompleted, userState);
		}

		private void OnRetrieveAllAssignableInCaseOperationCompleted(object arg)
		{
			if ((((this.RetrieveAllAssignableInCaseCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RetrieveAllAssignableInCaseCompleted != null) {
					RetrieveAllAssignableInCaseCompleted(this, new RetrieveAllAssignableInCaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null) || (object.ReferenceEquals(url, string.Empty)))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void UpdateImageViewerDefaultViewModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void UpdateOIXDocumentModeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void UpdateSelectedMarkupSetArtifactIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void UpdateDefaultRedactionTextCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void ClearCookiesBeforeLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void LoggedInCompletedEventHandler(object sender, LoggedInCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoggedInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal LoggedInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void LoginWithAuthenticationTokenCompletedEventHandler(object sender, LoginWithAuthenticationTokenCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoginWithAuthenticationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal LoginWithAuthenticationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void GenerateAuthenticationTokenCompletedEventHandler(object sender, GenerateAuthenticationTokenCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GenerateAuthenticationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GenerateAuthenticationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void GenerateDistributedAuthenticationTokenCompletedEventHandler(object sender, GenerateDistributedAuthenticationTokenCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GenerateDistributedAuthenticationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GenerateDistributedAuthenticationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void GetLatestAuthenticationTokenCompletedEventHandler(object sender, GetLatestAuthenticationTokenCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetLatestAuthenticationTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetLatestAuthenticationTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
	public delegate void RetrieveAllAssignableInCaseCompletedEventHandler(object sender, RetrieveAllAssignableInCaseCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RetrieveAllAssignableInCaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RetrieveAllAssignableInCaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public System.Data.DataSet Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (System.Data.DataSet)this.results[0];
			}
		}
	}
}
