using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Data;
using System.Linq;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



//
//This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
//
 // ERROR: Not supported in C#: OptionDeclaration
namespace kCura.EDDS.WebAPI.FileIOBase
{

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name = "FileIOSoap", Namespace = "http://www.kCura.com/EDDS/FileManager")]
	public partial class FileIO : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback BeginFillOperationCompleted;

		private System.Threading.SendOrPostCallback FileFillOperationCompleted;

		private System.Threading.SendOrPostCallback RemoveFillOperationCompleted;

		private System.Threading.SendOrPostCallback RemoveTempFileOperationCompleted;

		private System.Threading.SendOrPostCallback ReadFileAsStringOperationCompleted;

		private System.Threading.SendOrPostCallback GetBcpSharePathOperationCompleted;

		private System.Threading.SendOrPostCallback ValidateBcpShareOperationCompleted;

		private System.Threading.SendOrPostCallback GetBcpShareSpaceReportOperationCompleted;

		private System.Threading.SendOrPostCallback GetDefaultRepositorySpaceReportOperationCompleted;

		private System.Threading.SendOrPostCallback RepositoryVolumeMaxOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		///<remarks/>
		public FileIO() : base()
		{
			this.Url = "http://localhost/RelativityWebApi/FileIO.asmx";
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			} else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		public new string Url {
			get { return base.Url; }
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) && (this.useDefaultCredentialsSetExplicitly == false)) && (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials {
			get { return base.UseDefaultCredentials; }
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		///<remarks/>
		public event BeginFillCompletedEventHandler BeginFillCompleted;

		///<remarks/>
		public event FileFillCompletedEventHandler FileFillCompleted;

		///<remarks/>
		public event RemoveFillCompletedEventHandler RemoveFillCompleted;

		///<remarks/>
		public event RemoveTempFileCompletedEventHandler RemoveTempFileCompleted;

		///<remarks/>
		public event ReadFileAsStringCompletedEventHandler ReadFileAsStringCompleted;

		///<remarks/>
		public event GetBcpSharePathCompletedEventHandler GetBcpSharePathCompleted;

		///<remarks/>
		public event ValidateBcpShareCompletedEventHandler ValidateBcpShareCompleted;

		///<remarks/>
		public event GetBcpShareSpaceReportCompletedEventHandler GetBcpShareSpaceReportCompleted;

		///<remarks/>
		public event GetDefaultRepositorySpaceReportCompletedEventHandler GetDefaultRepositorySpaceReportCompleted;

		///<remarks/>
		public event RepositoryVolumeMaxCompletedEventHandler RepositoryVolumeMaxCompleted;

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/BeginFill", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public IoResponse BeginFill(int caseContextArtifactID, 		[System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
byte[] b, string documentDirectory, string fileGuid)
		{
			object[] results = this.Invoke("BeginFill", new object[] {
				caseContextArtifactID,
				b,
				documentDirectory,
				fileGuid
			});
			return (IoResponse)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginBeginFill(int caseContextArtifactID, byte[] b, string documentDirectory, string fileGuid, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("BeginFill", new object[] {
				caseContextArtifactID,
				b,
				documentDirectory,
				fileGuid
			}, callback, asyncState);
		}

		///<remarks/>
		public IoResponse EndBeginFill(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (IoResponse)results[0];
		}

		///<remarks/>
		public void BeginFillAsync(int caseContextArtifactID, byte[] b, string documentDirectory, string fileGuid)
		{
			this.BeginFillAsync(caseContextArtifactID, b, documentDirectory, fileGuid, null);
		}

		///<remarks/>
		public void BeginFillAsync(int caseContextArtifactID, byte[] b, string documentDirectory, string fileGuid, object userState)
		{
			if ((this.BeginFillOperationCompleted == null)) {
				this.BeginFillOperationCompleted = this.OnBeginFillOperationCompleted;
			}
			this.InvokeAsync("BeginFill", new object[] {
				caseContextArtifactID,
				b,
				documentDirectory,
				fileGuid
			}, this.BeginFillOperationCompleted, userState);
		}

		private void OnBeginFillOperationCompleted(object arg)
		{
			if ((((this.BeginFillCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (BeginFillCompleted != null) {
					BeginFillCompleted(this, new BeginFillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/FileFill", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public IoResponse FileFill(int caseContextArtifactID, string documentDirectory, string fileName, 		[System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
byte[] b)
		{
			object[] results = this.Invoke("FileFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName,
				b
			});
			return (IoResponse)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginFileFill(int caseContextArtifactID, string documentDirectory, string fileName, byte[] b, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("FileFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName,
				b
			}, callback, asyncState);
		}

		///<remarks/>
		public IoResponse EndFileFill(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (IoResponse)results[0];
		}

		///<remarks/>
		public void FileFillAsync(int caseContextArtifactID, string documentDirectory, string fileName, byte[] b)
		{
			this.FileFillAsync(caseContextArtifactID, documentDirectory, fileName, b, null);
		}

		///<remarks/>
		public void FileFillAsync(int caseContextArtifactID, string documentDirectory, string fileName, byte[] b, object userState)
		{
			if ((this.FileFillOperationCompleted == null)) {
				this.FileFillOperationCompleted = this.OnFileFillOperationCompleted;
			}
			this.InvokeAsync("FileFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName,
				b
			}, this.FileFillOperationCompleted, userState);
		}

		private void OnFileFillOperationCompleted(object arg)
		{
			if ((((this.FileFillCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (FileFillCompleted != null) {
					FileFillCompleted(this, new FileFillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RemoveFill", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RemoveFill(int caseContextArtifactID, string documentDirectory, string fileName)
		{
			this.Invoke("RemoveFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName
			});
		}

		///<remarks/>
		public System.IAsyncResult BeginRemoveFill(int caseContextArtifactID, string documentDirectory, string fileName, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RemoveFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName
			}, callback, asyncState);
		}

		///<remarks/>
		public void EndRemoveFill(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void RemoveFillAsync(int caseContextArtifactID, string documentDirectory, string fileName)
		{
			this.RemoveFillAsync(caseContextArtifactID, documentDirectory, fileName, null);
		}

		///<remarks/>
		public void RemoveFillAsync(int caseContextArtifactID, string documentDirectory, string fileName, object userState)
		{
			if ((this.RemoveFillOperationCompleted == null)) {
				this.RemoveFillOperationCompleted = this.OnRemoveFillOperationCompleted;
			}
			this.InvokeAsync("RemoveFill", new object[] {
				caseContextArtifactID,
				documentDirectory,
				fileName
			}, this.RemoveFillOperationCompleted, userState);
		}

		private void OnRemoveFillOperationCompleted(object arg)
		{
			if ((((this.RemoveFillCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RemoveFillCompleted != null) {
					RemoveFillCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RemoveTempFile", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public void RemoveTempFile(int caseContextArtifactID, string fileName)
		{
			this.Invoke("RemoveTempFile", new object[] {
				caseContextArtifactID,
				fileName
			});
		}

		///<remarks/>
		public System.IAsyncResult BeginRemoveTempFile(int caseContextArtifactID, string fileName, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RemoveTempFile", new object[] {
				caseContextArtifactID,
				fileName
			}, callback, asyncState);
		}

		///<remarks/>
		public void EndRemoveTempFile(System.IAsyncResult asyncResult)
		{
			this.EndInvoke(asyncResult);
		}

		///<remarks/>
		public void RemoveTempFileAsync(int caseContextArtifactID, string fileName)
		{
			this.RemoveTempFileAsync(caseContextArtifactID, fileName, null);
		}

		///<remarks/>
		public void RemoveTempFileAsync(int caseContextArtifactID, string fileName, object userState)
		{
			if ((this.RemoveTempFileOperationCompleted == null)) {
				this.RemoveTempFileOperationCompleted = this.OnRemoveTempFileOperationCompleted;
			}
			this.InvokeAsync("RemoveTempFile", new object[] {
				caseContextArtifactID,
				fileName
			}, this.RemoveTempFileOperationCompleted, userState);
		}

		private void OnRemoveTempFileOperationCompleted(object arg)
		{
			if ((((this.RemoveTempFileCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RemoveTempFileCompleted != null) {
					RemoveTempFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/ReadFileAsString", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
		public byte[] ReadFileAsString(string path)
		{
			object[] results = this.Invoke("ReadFileAsString", new object[] { path });
			return new []{ Convert.ToByte(results[0]) };
		}

		///<remarks/>
		public System.IAsyncResult BeginReadFileAsString(string path, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ReadFileAsString", new object[] { path }, callback, asyncState);
		}

		///<remarks/>
		public byte[] EndReadFileAsString(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return new[] { Convert.ToByte(results[0])};
		}

		///<remarks/>
		public void ReadFileAsStringAsync(string path)
		{
			this.ReadFileAsStringAsync(path, null);
		}

		///<remarks/>
		public void ReadFileAsStringAsync(string path, object userState)
		{
			if ((this.ReadFileAsStringOperationCompleted == null)) {
				this.ReadFileAsStringOperationCompleted = this.OnReadFileAsStringOperationCompleted;
			}
			this.InvokeAsync("ReadFileAsString", new object[] { path }, this.ReadFileAsStringOperationCompleted, userState);
		}

		private void OnReadFileAsStringOperationCompleted(object arg)
		{
			if ((((this.ReadFileAsStringCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (ReadFileAsStringCompleted != null) {
					ReadFileAsStringCompleted(this, new ReadFileAsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetBcpSharePath", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public string GetBcpSharePath(int caseContextArtifactID)
		{
			object[] results = this.Invoke("GetBcpSharePath", new object[] { caseContextArtifactID });
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginGetBcpSharePath(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetBcpSharePath", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public string EndGetBcpSharePath(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToString(results[0]);
		}

		///<remarks/>
		public void GetBcpSharePathAsync(int caseContextArtifactID)
		{
			this.GetBcpSharePathAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void GetBcpSharePathAsync(int caseContextArtifactID, object userState)
		{
			if ((this.GetBcpSharePathOperationCompleted == null)) {
				this.GetBcpSharePathOperationCompleted = this.OnGetBcpSharePathOperationCompleted;
			}
			this.InvokeAsync("GetBcpSharePath", new object[] { caseContextArtifactID }, this.GetBcpSharePathOperationCompleted, userState);
		}

		private void OnGetBcpSharePathOperationCompleted(object arg)
		{
			if ((((this.GetBcpSharePathCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GetBcpSharePathCompleted != null) {
					GetBcpSharePathCompleted(this, new GetBcpSharePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/ValidateBcpShare", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public bool ValidateBcpShare(int caseContextArtifactID)
		{
			object[] results = this.Invoke("ValidateBcpShare", new object[] { caseContextArtifactID });
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginValidateBcpShare(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("ValidateBcpShare", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public bool EndValidateBcpShare(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToBoolean(results[0]);
		}

		///<remarks/>
		public void ValidateBcpShareAsync(int caseContextArtifactID)
		{
			this.ValidateBcpShareAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void ValidateBcpShareAsync(int caseContextArtifactID, object userState)
		{
			if ((this.ValidateBcpShareOperationCompleted == null)) {
				this.ValidateBcpShareOperationCompleted = this.OnValidateBcpShareOperationCompleted;
			}
			this.InvokeAsync("ValidateBcpShare", new object[] { caseContextArtifactID }, this.ValidateBcpShareOperationCompleted, userState);
		}

		private void OnValidateBcpShareOperationCompleted(object arg)
		{
			if ((((this.ValidateBcpShareCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (ValidateBcpShareCompleted != null) {
					ValidateBcpShareCompleted(this, new ValidateBcpShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetBcpShareSpaceReport", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel = 1)]
		public string[][] GetBcpShareSpaceReport(int caseContextArtifactID)
		{
			object[] results = this.Invoke("GetBcpShareSpaceReport", new object[] { caseContextArtifactID });
		    string[][] resultArray = new string[1][];
		    resultArray[0][0] = Convert.ToString(results[0]);

		    return resultArray;

		}

		///<remarks/>
		public System.IAsyncResult BeginGetBcpShareSpaceReport(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetBcpShareSpaceReport", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public string[][] EndGetBcpShareSpaceReport(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
            string[][] resultArray = new string[1][];
            resultArray[0][0] = Convert.ToString(results[0]);

            return resultArray;
        }

		///<remarks/>
		public void GetBcpShareSpaceReportAsync(int caseContextArtifactID)
		{
			this.GetBcpShareSpaceReportAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void GetBcpShareSpaceReportAsync(int caseContextArtifactID, object userState)
		{
			if ((this.GetBcpShareSpaceReportOperationCompleted == null)) {
				this.GetBcpShareSpaceReportOperationCompleted = this.OnGetBcpShareSpaceReportOperationCompleted;
			}
			this.InvokeAsync("GetBcpShareSpaceReport", new object[] { caseContextArtifactID }, this.GetBcpShareSpaceReportOperationCompleted, userState);
		}

		private void OnGetBcpShareSpaceReportOperationCompleted(object arg)
		{
			if ((((this.GetBcpShareSpaceReportCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GetBcpShareSpaceReportCompleted != null) {
					GetBcpShareSpaceReportCompleted(this, new GetBcpShareSpaceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/GetDefaultRepositorySpaceReport", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		[return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel = 1)]
		public string[][] GetDefaultRepositorySpaceReport(int caseContextArtifactID)
		{
			object[] results = this.Invoke("GetDefaultRepositorySpaceReport", new object[] { caseContextArtifactID });
            string[][] resultArray = new string[1][];
            resultArray[0][0] = Convert.ToString(results[0]);

            return resultArray;
        }

		///<remarks/>
		public System.IAsyncResult BeginGetDefaultRepositorySpaceReport(int caseContextArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("GetDefaultRepositorySpaceReport", new object[] { caseContextArtifactID }, callback, asyncState);
		}

		///<remarks/>
		public string[][] EndGetDefaultRepositorySpaceReport(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
            string[][] resultArray = new string[1][];
            resultArray[0][0] = Convert.ToString(results[0]);

            return resultArray;
        }

		///<remarks/>
		public void GetDefaultRepositorySpaceReportAsync(int caseContextArtifactID)
		{
			this.GetDefaultRepositorySpaceReportAsync(caseContextArtifactID, null);
		}

		///<remarks/>
		public void GetDefaultRepositorySpaceReportAsync(int caseContextArtifactID, object userState)
		{
			if ((this.GetDefaultRepositorySpaceReportOperationCompleted == null)) {
				this.GetDefaultRepositorySpaceReportOperationCompleted = this.OnGetDefaultRepositorySpaceReportOperationCompleted;
			}
			this.InvokeAsync("GetDefaultRepositorySpaceReport", new object[] { caseContextArtifactID }, this.GetDefaultRepositorySpaceReportOperationCompleted, userState);
		}

		private void OnGetDefaultRepositorySpaceReportOperationCompleted(object arg)
		{
			if ((((this.GetDefaultRepositorySpaceReportCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (GetDefaultRepositorySpaceReportCompleted != null) {
					GetDefaultRepositorySpaceReportCompleted(this, new GetDefaultRepositorySpaceReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FileManager/RepositoryVolumeMax", RequestNamespace = "http://www.kCura.com/EDDS/FileManager", ResponseNamespace = "http://www.kCura.com/EDDS/FileManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public int RepositoryVolumeMax()
		{
			object[] results = this.Invoke("RepositoryVolumeMax", new object[-1 + 1]);
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginRepositoryVolumeMax(System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("RepositoryVolumeMax", new object[-1 + 1], callback, asyncState);
		}

		///<remarks/>
		public int EndRepositoryVolumeMax(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public void RepositoryVolumeMaxAsync()
		{
			this.RepositoryVolumeMaxAsync(null);
		}

		///<remarks/>
		public void RepositoryVolumeMaxAsync(object userState)
		{
			if ((this.RepositoryVolumeMaxOperationCompleted == null)) {
				this.RepositoryVolumeMaxOperationCompleted = this.OnRepositoryVolumeMaxOperationCompleted;
			}
			this.InvokeAsync("RepositoryVolumeMax", new object[-1 + 1], this.RepositoryVolumeMaxOperationCompleted, userState);
		}

		private void OnRepositoryVolumeMaxOperationCompleted(object arg)
		{
			if ((((this.RepositoryVolumeMaxCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (RepositoryVolumeMaxCompleted != null) {
					RepositoryVolumeMaxCompleted(this, new RepositoryVolumeMaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null) || (object.ReferenceEquals(url, string.Empty)))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FileManager")]
	public partial class IoResponse
	{

		private bool successField;

		private string filenameField;

		private string errorMessageField;

		private string errorTextField;

		///<remarks/>
		public bool Success {
			get { return this.successField; }
			set { this.successField = value; }
		}

		///<remarks/>
		public string Filename {
			get { return this.filenameField; }
			set { this.filenameField = value; }
		}

		///<remarks/>
		public string ErrorMessage {
			get { return this.errorMessageField; }
			set { this.errorMessageField = value; }
		}

		///<remarks/>
		public string ErrorText {
			get { return this.errorTextField; }
			set { this.errorTextField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void BeginFillCompletedEventHandler(object sender, BeginFillCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class BeginFillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal BeginFillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public IoResponse Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (IoResponse)this.results[0];
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void FileFillCompletedEventHandler(object sender, FileFillCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class FileFillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal FileFillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public IoResponse Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (IoResponse)this.results[0];
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RemoveFillCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RemoveTempFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void ReadFileAsStringCompletedEventHandler(object sender, ReadFileAsStringCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ReadFileAsStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal ReadFileAsStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public byte[] Result {
			get {
				this.RaiseExceptionIfNecessary();
				return new[] { Convert.ToByte(this.results[0])};
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void GetBcpSharePathCompletedEventHandler(object sender, GetBcpSharePathCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetBcpSharePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetBcpSharePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToString(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void ValidateBcpShareCompletedEventHandler(object sender, ValidateBcpShareCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ValidateBcpShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal ValidateBcpShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public bool Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToBoolean(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void GetBcpShareSpaceReportCompletedEventHandler(object sender, GetBcpShareSpaceReportCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetBcpShareSpaceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetBcpShareSpaceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string[][] Result {
			get {
				this.RaiseExceptionIfNecessary();
                string[][] resultArray = new string[1][];
                resultArray[0][0] = Convert.ToString(results[0]);

                return resultArray;
            }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void GetDefaultRepositorySpaceReportCompletedEventHandler(object sender, GetDefaultRepositorySpaceReportCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class GetDefaultRepositorySpaceReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal GetDefaultRepositorySpaceReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public string[][] Result {
			get {
				this.RaiseExceptionIfNecessary();
                string[][] resultArray = new string[1][];
                resultArray[0][0] = Convert.ToString(results[0]);

                return resultArray;
            }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void RepositoryVolumeMaxCompletedEventHandler(object sender, RepositoryVolumeMaxCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RepositoryVolumeMaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal RepositoryVolumeMaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public int Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToInt32(this.results[0]);
			}
		}
	}
}
