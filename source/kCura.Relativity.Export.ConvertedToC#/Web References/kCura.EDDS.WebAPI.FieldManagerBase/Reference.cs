using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Data;
using System.Linq;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



//
//This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
//
 // ERROR: Not supported in C#: OptionDeclaration
namespace kCura.EDDS.WebAPI.FieldManagerBase
{

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Web.Services.WebServiceBindingAttribute(Name = "FieldManagerSoap", Namespace = "http://www.kCura.com/EDDS/FieldManager"), System.Xml.Serialization.XmlIncludeAttribute(typeof(Artifact))]
	public partial class FieldManager : System.Web.Services.Protocols.SoapHttpClientProtocol
	{

		private System.Threading.SendOrPostCallback CreateOperationCompleted;

		private System.Threading.SendOrPostCallback ReadOperationCompleted;

		private bool useDefaultCredentialsSetExplicitly;

		///<remarks/>
		public FieldManager() : base()
		{
			this.Url = "http://localhost/RelativityWebApi/FieldManager.asmx";
			if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
				this.UseDefaultCredentials = true;
				this.useDefaultCredentialsSetExplicitly = false;
			} else {
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		public new string Url {
			get { return base.Url; }
			set {
				if ((((this.IsLocalFileSystemWebService(base.Url) == true) && (this.useDefaultCredentialsSetExplicitly == false)) && (this.IsLocalFileSystemWebService(value) == false))) {
					base.UseDefaultCredentials = false;
				}
				base.Url = value;
			}
		}

		public new bool UseDefaultCredentials {
			get { return base.UseDefaultCredentials; }
			set {
				base.UseDefaultCredentials = value;
				this.useDefaultCredentialsSetExplicitly = true;
			}
		}

		///<remarks/>
		public event CreateCompletedEventHandler CreateCompleted;

		///<remarks/>
		public event ReadCompletedEventHandler ReadCompleted;

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldManager/Create", RequestNamespace = "http://www.kCura.com/EDDS/FieldManager", ResponseNamespace = "http://www.kCura.com/EDDS/FieldManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public int Create(int caseContextArtifactID, Field fieldDTO)
		{
			object[] results = this.Invoke("Create", new object[] {
				caseContextArtifactID,
				fieldDTO
			});
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public System.IAsyncResult BeginCreate(int caseContextArtifactID, Field fieldDTO, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Create", new object[] {
				caseContextArtifactID,
				fieldDTO
			}, callback, asyncState);
		}

		///<remarks/>
		public int EndCreate(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return Convert.ToInt32(results[0]);
		}

		///<remarks/>
		public void CreateAsync(int caseContextArtifactID, Field fieldDTO)
		{
			this.CreateAsync(caseContextArtifactID, fieldDTO, null);
		}

		///<remarks/>
		public void CreateAsync(int caseContextArtifactID, Field fieldDTO, object userState)
		{
			if ((this.CreateOperationCompleted == null)) {
				this.CreateOperationCompleted = this.OnCreateOperationCompleted;
			}
			this.InvokeAsync("Create", new object[] {
				caseContextArtifactID,
				fieldDTO
			}, this.CreateOperationCompleted, userState);
		}

		private void OnCreateOperationCompleted(object arg)
		{
			if ((((this.CreateCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (CreateCompleted != null) {
					CreateCompleted(this, new CreateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		[System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.kCura.com/EDDS/FieldManager/Read", RequestNamespace = "http://www.kCura.com/EDDS/FieldManager", ResponseNamespace = "http://www.kCura.com/EDDS/FieldManager", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
		public Field Read(int caseContextArtifactID, int fieldArtifactID)
		{
			object[] results = this.Invoke("Read", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			});
			return (Field)results[0];
		}

		///<remarks/>
		public System.IAsyncResult BeginRead(int caseContextArtifactID, int fieldArtifactID, System.AsyncCallback callback, object asyncState)
		{
			return this.BeginInvoke("Read", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			}, callback, asyncState);
		}

		///<remarks/>
		public Field EndRead(System.IAsyncResult asyncResult)
		{
			object[] results = this.EndInvoke(asyncResult);
			return (Field)results[0];
		}

		///<remarks/>
		public void ReadAsync(int caseContextArtifactID, int fieldArtifactID)
		{
			this.ReadAsync(caseContextArtifactID, fieldArtifactID, null);
		}

		///<remarks/>
		public void ReadAsync(int caseContextArtifactID, int fieldArtifactID, object userState)
		{
			if ((this.ReadOperationCompleted == null)) {
				this.ReadOperationCompleted = this.OnReadOperationCompleted;
			}
			this.InvokeAsync("Read", new object[] {
				caseContextArtifactID,
				fieldArtifactID
			}, this.ReadOperationCompleted, userState);
		}

		private void OnReadOperationCompleted(object arg)
		{
			if ((((this.ReadCompleted) != null))) {
				System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = (System.Web.Services.Protocols.InvokeCompletedEventArgs)arg;
				if (ReadCompleted != null) {
					ReadCompleted(this, new ReadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
				}
			}
		}

		///<remarks/>
		public new void CancelAsync(object userState)
		{
			base.CancelAsync(userState);
		}

		private bool IsLocalFileSystemWebService(string url)
		{
			if (((url == null) || (object.ReferenceEquals(url, string.Empty)))) {
				return false;
			}
			System.Uri wsUri = new System.Uri(url);
			if (((wsUri.Port >= 1024) && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
				return true;
			}
			return false;
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public partial class Field : Artifact
	{

		private int fieldArtifactTypeIDField;

		private string displayNameField;

		private int fieldTypeIDField;

		private FieldType fieldTypeField;

		private int fieldCategoryIDField;

		private FieldCategory fieldCategoryField;

		private int artifactViewFieldIDField;

		private System.Nullable<int> codeTypeIDField;

		private System.Nullable<int> maxLengthField;

		private bool isRequiredField;

		private bool isRemovableField;

		private bool isEditableField;

		private bool isVisibleField;

		private bool isArtifactBaseFieldField;

		private object valueField;

		private string tableNameField;

		private string columnNameField;

		private bool isReadOnlyInLayoutField;

		private string filterTypeField;

		private int fieldDisplayTypeIDField;

		private int rowsField;

		private bool isLinkedField;

		private string formatStringField;

		private System.Nullable<int> repeatColumnField;

		private System.Nullable<int> associativeArtifactTypeIDField;

		private bool isAvailableToAssociativeObjectsField;

		private bool isAvailableInChoiceTreeField;

		private bool isGroupByEnabledField;

		private bool isIndexEnabledField;

		private string displayValueTrueField;

		private string displayValueFalseField;

		private string widthField;

		private bool wrappingField;

		private int linkLayoutArtifactIDField;

		private string nameValueField;

		private bool linkTypeField;

		private bool useUnicodeEncodingField;

		private bool allowHtmlField;

		private bool isSortableField;

		private string friendlyNameField;

		private System.Nullable<ImportBehaviorChoice> importBehaviorField;

		private bool enableDataGridField;

		private System.Nullable<bool> overlayBehaviorField;

		private System.Nullable<int> relationalIndexViewArtifactIDField;

		private ObjectsFieldParameters objectsFieldArgsField;

		private bool allowGroupByField;

		private bool allowPivotField;

		private System.Nullable<int> popupPickerViewField;

		private System.Nullable<int> fieldTreeViewField;

		private KeyboardShortcut keyboardShortcutField;

		private bool availableInViewerField;

		private int[] relativityApplicationsField;

		private RelationalFieldPane relationalPaneField;

		private bool autoAddChoicesField;

		///<remarks/>
		public int FieldArtifactTypeID {
			get { return this.fieldArtifactTypeIDField; }
			set { this.fieldArtifactTypeIDField = value; }
		}

		///<remarks/>
		public string DisplayName {
			get { return this.displayNameField; }
			set { this.displayNameField = value; }
		}

		///<remarks/>
		public int FieldTypeID {
			get { return this.fieldTypeIDField; }
			set { this.fieldTypeIDField = value; }
		}

		///<remarks/>
		public FieldType FieldType {
			get { return this.fieldTypeField; }
			set { this.fieldTypeField = value; }
		}

		///<remarks/>
		public int FieldCategoryID {
			get { return this.fieldCategoryIDField; }
			set { this.fieldCategoryIDField = value; }
		}

		///<remarks/>
		public FieldCategory FieldCategory {
			get { return this.fieldCategoryField; }
			set { this.fieldCategoryField = value; }
		}

		///<remarks/>
		public int ArtifactViewFieldID {
			get { return this.artifactViewFieldIDField; }
			set { this.artifactViewFieldIDField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> CodeTypeID {
			get { return this.codeTypeIDField; }
			set { this.codeTypeIDField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> MaxLength {
			get { return this.maxLengthField; }
			set { this.maxLengthField = value; }
		}

		///<remarks/>
		public bool IsRequired {
			get { return this.isRequiredField; }
			set { this.isRequiredField = value; }
		}

		///<remarks/>
		public bool IsRemovable {
			get { return this.isRemovableField; }
			set { this.isRemovableField = value; }
		}

		///<remarks/>
		public bool IsEditable {
			get { return this.isEditableField; }
			set { this.isEditableField = value; }
		}

		///<remarks/>
		public bool IsVisible {
			get { return this.isVisibleField; }
			set { this.isVisibleField = value; }
		}

		///<remarks/>
		public bool IsArtifactBaseField {
			get { return this.isArtifactBaseFieldField; }
			set { this.isArtifactBaseFieldField = value; }
		}

		///<remarks/>
		public object Value {
			get { return this.valueField; }
			set { this.valueField = value; }
		}

		///<remarks/>
		public string TableName {
			get { return this.tableNameField; }
			set { this.tableNameField = value; }
		}

		///<remarks/>
		public string ColumnName {
			get { return this.columnNameField; }
			set { this.columnNameField = value; }
		}

		///<remarks/>
		public bool IsReadOnlyInLayout {
			get { return this.isReadOnlyInLayoutField; }
			set { this.isReadOnlyInLayoutField = value; }
		}

		///<remarks/>
		public string FilterType {
			get { return this.filterTypeField; }
			set { this.filterTypeField = value; }
		}

		///<remarks/>
		public int FieldDisplayTypeID {
			get { return this.fieldDisplayTypeIDField; }
			set { this.fieldDisplayTypeIDField = value; }
		}

		///<remarks/>
		public int Rows {
			get { return this.rowsField; }
			set { this.rowsField = value; }
		}

		///<remarks/>
		public bool IsLinked {
			get { return this.isLinkedField; }
			set { this.isLinkedField = value; }
		}

		///<remarks/>
		public string FormatString {
			get { return this.formatStringField; }
			set { this.formatStringField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> RepeatColumn {
			get { return this.repeatColumnField; }
			set { this.repeatColumnField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> AssociativeArtifactTypeID {
			get { return this.associativeArtifactTypeIDField; }
			set { this.associativeArtifactTypeIDField = value; }
		}

		///<remarks/>
		public bool IsAvailableToAssociativeObjects {
			get { return this.isAvailableToAssociativeObjectsField; }
			set { this.isAvailableToAssociativeObjectsField = value; }
		}

		///<remarks/>
		public bool IsAvailableInChoiceTree {
			get { return this.isAvailableInChoiceTreeField; }
			set { this.isAvailableInChoiceTreeField = value; }
		}

		///<remarks/>
		public bool IsGroupByEnabled {
			get { return this.isGroupByEnabledField; }
			set { this.isGroupByEnabledField = value; }
		}

		///<remarks/>
		public bool IsIndexEnabled {
			get { return this.isIndexEnabledField; }
			set { this.isIndexEnabledField = value; }
		}

		///<remarks/>
		public string DisplayValueTrue {
			get { return this.displayValueTrueField; }
			set { this.displayValueTrueField = value; }
		}

		///<remarks/>
		public string DisplayValueFalse {
			get { return this.displayValueFalseField; }
			set { this.displayValueFalseField = value; }
		}

		///<remarks/>
		public string Width {
			get { return this.widthField; }
			set { this.widthField = value; }
		}

		///<remarks/>
		public bool Wrapping {
			get { return this.wrappingField; }
			set { this.wrappingField = value; }
		}

		///<remarks/>
		public int LinkLayoutArtifactID {
			get { return this.linkLayoutArtifactIDField; }
			set { this.linkLayoutArtifactIDField = value; }
		}

		///<remarks/>
		public string NameValue {
			get { return this.nameValueField; }
			set { this.nameValueField = value; }
		}

		///<remarks/>
		public bool LinkType {
			get { return this.linkTypeField; }
			set { this.linkTypeField = value; }
		}

		///<remarks/>
		public bool UseUnicodeEncoding {
			get { return this.useUnicodeEncodingField; }
			set { this.useUnicodeEncodingField = value; }
		}

		///<remarks/>
		public bool AllowHtml {
			get { return this.allowHtmlField; }
			set { this.allowHtmlField = value; }
		}

		///<remarks/>
		public bool IsSortable {
			get { return this.isSortableField; }
			set { this.isSortableField = value; }
		}

		///<remarks/>
		public string FriendlyName {
			get { return this.friendlyNameField; }
			set { this.friendlyNameField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<ImportBehaviorChoice> ImportBehavior {
			get { return this.importBehaviorField; }
			set { this.importBehaviorField = value; }
		}

		///<remarks/>
		public bool EnableDataGrid {
			get { return this.enableDataGridField; }
			set { this.enableDataGridField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<bool> OverlayBehavior {
			get { return this.overlayBehaviorField; }
			set { this.overlayBehaviorField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> RelationalIndexViewArtifactID {
			get { return this.relationalIndexViewArtifactIDField; }
			set { this.relationalIndexViewArtifactIDField = value; }
		}

		///<remarks/>
		public ObjectsFieldParameters ObjectsFieldArgs {
			get { return this.objectsFieldArgsField; }
			set { this.objectsFieldArgsField = value; }
		}

		///<remarks/>
		public bool AllowGroupBy {
			get { return this.allowGroupByField; }
			set { this.allowGroupByField = value; }
		}

		///<remarks/>
		public bool AllowPivot {
			get { return this.allowPivotField; }
			set { this.allowPivotField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> PopupPickerView {
			get { return this.popupPickerViewField; }
			set { this.popupPickerViewField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> FieldTreeView {
			get { return this.fieldTreeViewField; }
			set { this.fieldTreeViewField = value; }
		}

		///<remarks/>
		public KeyboardShortcut KeyboardShortcut {
			get { return this.keyboardShortcutField; }
			set { this.keyboardShortcutField = value; }
		}

		///<remarks/>
		public bool AvailableInViewer {
			get { return this.availableInViewerField; }
			set { this.availableInViewerField = value; }
		}

		///<remarks/>
		public int[] RelativityApplications {
			get { return this.relativityApplicationsField; }
			set { this.relativityApplicationsField = value; }
		}

		///<remarks/>
		public RelationalFieldPane RelationalPane {
			get { return this.relationalPaneField; }
			set { this.relationalPaneField = value; }
		}

		///<remarks/>
		public bool AutoAddChoices {
			get { return this.autoAddChoicesField; }
			set { this.autoAddChoicesField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public enum FieldType
	{

		///<remarks/>
		Empty,

		///<remarks/>
		Varchar,

		///<remarks/>
		Integer,

		///<remarks/>
		Date,

		///<remarks/>
		Boolean,

		///<remarks/>
		Text,

		///<remarks/>
		Code,

		///<remarks/>
		Decimal,

		///<remarks/>
		Currency,

		///<remarks/>
		MultiCode,

		///<remarks/>
		File,

		///<remarks/>
		Object,

		///<remarks/>
		User,

		///<remarks/>
		LayoutText,

		///<remarks/>
		Objects,

		///<remarks/>
		OffTableText
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public enum FieldCategory
	{

		///<remarks/>
		Generic,

		///<remarks/>
		FullText,

		///<remarks/>
		Identifier,

		///<remarks/>
		Reflected,

		///<remarks/>
		Comments,

		///<remarks/>
		Relational,

		///<remarks/>
		ProductionMarker,

		///<remarks/>
		AutoCreate,

		///<remarks/>
		FileSize,

		///<remarks/>
		FolderName,

		///<remarks/>
		FileInfo,

		///<remarks/>
		ParentArtifact,

		///<remarks/>
		MarkupSetMarker,

		///<remarks/>
		GenericSystem,

		///<remarks/>
		MultiReflected,

		///<remarks/>
		Batch
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public partial class RelationalFieldPane
	{

		private int paneOrderField;

		private string iconFilenameField;

		private string columnNameField;

		private int fieldArtifactIDField;

		private int relationalViewArtifactIDField;

		private string headerTextField;

		private byte[] iconFileDataField;

		private int paneIDField;

		///<remarks/>
		public int PaneOrder {
			get { return this.paneOrderField; }
			set { this.paneOrderField = value; }
		}

		///<remarks/>
		public string IconFilename {
			get { return this.iconFilenameField; }
			set { this.iconFilenameField = value; }
		}

		///<remarks/>
		public string ColumnName {
			get { return this.columnNameField; }
			set { this.columnNameField = value; }
		}

		///<remarks/>
		public int FieldArtifactID {
			get { return this.fieldArtifactIDField; }
			set { this.fieldArtifactIDField = value; }
		}

		///<remarks/>
		public int RelationalViewArtifactID {
			get { return this.relationalViewArtifactIDField; }
			set { this.relationalViewArtifactIDField = value; }
		}

		///<remarks/>
		public string HeaderText {
			get { return this.headerTextField; }
			set { this.headerTextField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
		public byte[] IconFileData {
			get { return this.iconFileDataField; }
			set { this.iconFileDataField = value; }
		}

		///<remarks/>
		public int PaneID {
			get { return this.paneIDField; }
			set { this.paneIDField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public partial class KeyboardShortcut
	{

		private int idField;

		private bool shiftField;

		private bool ctrlField;

		private bool altField;

		private int keyField;

		///<remarks/>
		public int Id {
			get { return this.idField; }
			set { this.idField = value; }
		}

		///<remarks/>
		public bool Shift {
			get { return this.shiftField; }
			set { this.shiftField = value; }
		}

		///<remarks/>
		public bool Ctrl {
			get { return this.ctrlField; }
			set { this.ctrlField = value; }
		}

		///<remarks/>
		public bool Alt {
			get { return this.altField; }
			set { this.altField = value; }
		}

		///<remarks/>
		public int Key {
			get { return this.keyField; }
			set { this.keyField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public partial class ObjectsFieldParameters
	{

		private string siblingFieldNameField;

		private string fieldSchemaColumnNameField;

		private string siblingFieldSchemaColumnNameField;

		private string relationalTableSchemaNameField;

		private bool createForeignKeysField;

		///<remarks/>
		public string SiblingFieldName {
			get { return this.siblingFieldNameField; }
			set { this.siblingFieldNameField = value; }
		}

		///<remarks/>
		public string FieldSchemaColumnName {
			get { return this.fieldSchemaColumnNameField; }
			set { this.fieldSchemaColumnNameField = value; }
		}

		///<remarks/>
		public string SiblingFieldSchemaColumnName {
			get { return this.siblingFieldSchemaColumnNameField; }
			set { this.siblingFieldSchemaColumnNameField = value; }
		}

		///<remarks/>
		public string RelationalTableSchemaName {
			get { return this.relationalTableSchemaNameField; }
			set { this.relationalTableSchemaNameField = value; }
		}

		///<remarks/>
		public bool CreateForeignKeys {
			get { return this.createForeignKeysField; }
			set { this.createForeignKeysField = value; }
		}
	}

	///<remarks/>
	[System.Xml.Serialization.XmlIncludeAttribute(typeof(Field)), System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code"), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public partial class Artifact
	{

		private int artifactIDField;

		private int artifactTypeIDField;

		private System.Nullable<int> parentArtifactIDField;

		private System.Nullable<int> containerIDField;

		private int accessControlListIDField;

		private bool accessControlListIsInheritedField;

		private string keywordsField;

		private string notesField;

		private string textIdentifierField;

		private System.DateTime lastModifiedOnField;

		private int lastModifiedByField;

		private int createdByField;

		private System.DateTime createdOnField;

		private bool deleteFlagField;

		private System.Guid[] guidsField;

		///<remarks/>
		public int ArtifactID {
			get { return this.artifactIDField; }
			set { this.artifactIDField = value; }
		}

		///<remarks/>
		public int ArtifactTypeID {
			get { return this.artifactTypeIDField; }
			set { this.artifactTypeIDField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> ParentArtifactID {
			get { return this.parentArtifactIDField; }
			set { this.parentArtifactIDField = value; }
		}

		///<remarks/>
		[System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
		public System.Nullable<int> ContainerID {
			get { return this.containerIDField; }
			set { this.containerIDField = value; }
		}

		///<remarks/>
		public int AccessControlListID {
			get { return this.accessControlListIDField; }
			set { this.accessControlListIDField = value; }
		}

		///<remarks/>
		public bool AccessControlListIsInherited {
			get { return this.accessControlListIsInheritedField; }
			set { this.accessControlListIsInheritedField = value; }
		}

		///<remarks/>
		public string Keywords {
			get { return this.keywordsField; }
			set { this.keywordsField = value; }
		}

		///<remarks/>
		public string Notes {
			get { return this.notesField; }
			set { this.notesField = value; }
		}

		///<remarks/>
		public string TextIdentifier {
			get { return this.textIdentifierField; }
			set { this.textIdentifierField = value; }
		}

		///<remarks/>
		public System.DateTime LastModifiedOn {
			get { return this.lastModifiedOnField; }
			set { this.lastModifiedOnField = value; }
		}

		///<remarks/>
		public int LastModifiedBy {
			get { return this.lastModifiedByField; }
			set { this.lastModifiedByField = value; }
		}

		///<remarks/>
		public int CreatedBy {
			get { return this.createdByField; }
			set { this.createdByField = value; }
		}

		///<remarks/>
		public System.DateTime CreatedOn {
			get { return this.createdOnField; }
			set { this.createdOnField = value; }
		}

		///<remarks/>
		public bool DeleteFlag {
			get { return this.deleteFlagField; }
			set { this.deleteFlagField = value; }
		}

		///<remarks/>
		public System.Guid[] Guids {
			get { return this.guidsField; }
			set { this.guidsField = value; }
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0"), System.SerializableAttribute(), System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://www.kCura.com/EDDS/FieldManager")]
	public enum ImportBehaviorChoice
	{

		///<remarks/>
		LeaveBlankValuesUnchanged,

		///<remarks/>
		ReplaceBlankValuesWithIdentifier,

		///<remarks/>
		ObjectFieldContainsArtifactId
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void CreateCompletedEventHandler(object sender, CreateCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class CreateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal CreateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public int Result {
			get {
				this.RaiseExceptionIfNecessary();
				return Convert.ToInt32(this.results[0]);
			}
		}
	}

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
	public delegate void ReadCompletedEventHandler(object sender, ReadCompletedEventArgs e);

	///<remarks/>
	[System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0"), System.Diagnostics.DebuggerStepThroughAttribute(), System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ReadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
	{

		private object[] results;

		internal ReadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : base(exception, cancelled, userState)
		{
			this.results = results;
		}

		///<remarks/>
		public Field Result {
			get {
				this.RaiseExceptionIfNecessary();
				return (Field)this.results[0];
			}
		}
	}
}
