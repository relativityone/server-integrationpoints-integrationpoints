<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Relativity.API</name>
    </assembly>
    <members>
        <member name="T:Relativity.API.DBContext">
            <summary>
            Provides many common helper methods to interact with a database within a Relativity instance. 
            Typically, you should be using the Services API to interact with Relativity, however the DBContext provides direct access to the databases when needed. 
            To obtain a database connection to a EDDSResource database, create a connection to the related Workspace and then write SQL to connect to the EDDSResource database on that SQL Server.
            </summary>
        </member>
        <member name="T:Relativity.API.IDBContext">
            <summary>
            Provides a mockable interface with many common helper methods to interact with a database in a Relativity instance. 
            Typically, you should be using the Services API to interact with Relativity, however the DBContext provides direct access to the databases when needed. 
            To obtain a database connection to a EDDSResource database, create a connection to the related Workspace and then write SQL to connect to the EDDSResource database on that SQL Server.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.GetConnection">
            <summary>
            Gets a database connection.
            </summary>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.CreateDbParameter">
            <summary>
            Returns a database Parameter
            </summary>
            <returns>Parameter to a DbCommand and optionally, its mapping to a DataSet column.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.GetConnection(System.Boolean)">
            <summary>
            Gets a database connection, with option to open if closed.
            </summary>
            <param name="openConnectionIfClosed">Boolean value indicating if the connection should be opened upon its creation.</param>
            <returns>Returns an open connection to a SQL Server database. This class cannot be inherited.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.GetTransaction">
            <summary>
            Gets a database transaction.
            </summary>
            <returns>Returns a database transaction.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.BeginTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.CommitTransaction">
            <summary>
            Commits a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.RollbackTransaction">
            <summary>
            Rolls back a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.RollbackTransaction(System.Exception)">
            <summary>
            Rolls back a database transaction.  Pass in inner exception if rollback times out.
            </summary>
            <param name="originatingException">Exception object containing previously thrown exception.</param>
        </member>
        <member name="M:Relativity.API.IDBContext.ReleaseConnection">
            <summary>
            Releases a database connection.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.Cancel">
            <summary>
            Tries to cancel a SQL command execution.
            </summary>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalar(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsScalarWithInnerTransaction(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            ExecuteSqlStatementAsScalarWithInnerTransaction method can be called if context.transaction is not set
            This method opens transaction internally. This functionality is implemented to enable query rerun in case on the problems
            with Sql optimizer hints
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSQLStatementGetSecondDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSQLStatementAsReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteProcedureAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and builds a DbDataReader.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteProcedureNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and returns the number of rows affected.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteParameterizedSQLStatementAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32,System.Boolean)">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a sqlDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
             <param name="sequentialAccess">Determins if command is used with System.Data.CommandBehavior.SequentialAccess</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Int32)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.IDBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="P:Relativity.API.IDBContext.Database">
            <summary>
            Gets a database name.
            </summary>
        </member>
        <member name="P:Relativity.API.IDBContext.ServerName">
            <summary>
            Gets a database server name.
            </summary>
        </member>
        <member name="P:Relativity.API.IDBContext.IsMasterDatabase">
            <summary>
            Checks if database is Master context
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.#ctor(kCura.Data.RowDataGateway.BaseContext)">
            <summary>
            Initializes a new instance of the DBContext class.
            </summary>
            <param name="context">Predefined context object based on which DBContext instance is created.</param>
        </member>
        <member name="M:Relativity.API.DBContext.GetConnection">
            <summary>
            Gets a database connection.
            </summary>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.CreateDbParameter">
            <summary>
            Returns a database Parameter
            </summary>
            <returns>returns a newly created DbParameter object</returns>
        </member>
        <member name="M:Relativity.API.DBContext.GetConnection(System.Boolean)">
            <summary>
            Gets a database connection, with option to open if closed.
            </summary>
            <param name="openConnectionIfClosed">Indicates whether to open the connection if closed</param>
            <returns>Returns a database connection.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.GetTransaction">
            <summary>
            Gets a database transaction.
            </summary>
            <returns>Returns a database transaction.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.BeginTransaction">
            <summary>
            Starts a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.CommitTransaction">
            <summary>
            Commits a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.RollbackTransaction">
            <summary>
            Rolls back a database transaction.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.RollbackTransaction(System.Exception)">
            <summary>
            Rolls back a database transaction.  Pass in inner exception if rollback times out.
            </summary>
            <param name="originatingException">The exception details that caused this rollback to be called</param>
        </member>
        <member name="M:Relativity.API.DBContext.ReleaseConnection">
            <summary>
            Releases a database connection.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.Cancel">
            <summary>
            Tries to cancel a SQL command execution.
            </summary>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataTable(System.String,System.Int32,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar``1(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <typeparam name="T">Type used to define returned object.</typeparam>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalar(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsScalarWithInnerTransaction(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes the query, and returns the first column of the first row in the result set returned by the query. Additional columns or rows are ignored.
            ExecuteSqlStatementAsScalarWithInnerTransaction method can be called if context.transaction is not set
            This method opens transaction internally. This functionality is implemented to enable query rerun in case on the problems
            with Sql optimizer hints
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the first column of the first row in the result set returned by the query.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteNonQuerySQLStatement(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and returns the number of rows affected.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter})">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDbDataReader(System.String,System.Collections.Generic.IEnumerable{System.Data.Common.DbParameter},System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSQLStatementGetSecondDataTable(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement agains the connection and returns a table of in-memory data.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a table of in-memory data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSQLStatementAsReader(System.String,System.Int32)">
            <summary>
            Executes a Transact-SQL statement against the connection and builds a DbDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="timeout">A timeout value in seconds for the query</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteProcedureAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and builds a DbDataReader.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns a DbDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteProcedureNonQuery(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
            <summary>
            Executes a stored procedure against the connection and returns the number of rows affected.
            </summary>
            <param name="procedureName">String value indicating a name of stored procedure to be executed.</param>
            <param name="parameters">List of SQL parameters passed in to the stored procedure.</param>
            <returns>Returns the number of rows affected.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteParameterizedSQLStatementAsReader(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32,System.Boolean)">
            <summary>
            Executes a parameterized Transact-SQL statement against the connection and returns a sqlDataReader.
            </summary>
            <param name="sqlStatement">String containing parameterized SQL statement.</param>
            <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <param name="timeoutValue">A timeout value in seconds for the query</param>
             <param name="sequentialAccess">Determins if command is used with System.Data.CommandBehavior.SequentialAccess</param>
            <returns>Returns a SqlDataReader object.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter})">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Int32)">
             <summary>
             Executes a Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns> 
        </member>
        <member name="M:Relativity.API.DBContext.ExecuteSqlStatementAsDataSet(System.String,System.Collections.Generic.IEnumerable{System.Data.SqlClient.SqlParameter},System.Int32)">
             <summary>
             Executes a parameterized Transact-SQL statement against the connection and returns an in-memory cache of data.
             </summary>
             <param name="sqlStatement">String containing parameterized SQL statement.</param>
             <param name="parameters">List of SQL parameters passed in to SQL statement.</param>
             <param name="timeoutValue">A timeout value in seconds for the query</param>
            <returns>Returns an in-memory cache of data.</returns>
        </member>
        <member name="P:Relativity.API.DBContext.Database">
            <summary>
            Gets a database name.
            </summary>
        </member>
        <member name="P:Relativity.API.DBContext.ServerName">
            <summary>
            Gets a database server name.
            </summary>
        </member>
        <member name="P:Relativity.API.DBContext.IsMasterDatabase">
            <summary>
            Checks if database is Master context
            </summary>
        </member>
        <member name="T:Relativity.API.ExecutionIdentity">
            <summary>
            ExecutionIdentity specifies the conceptual role under which an IServicesMgr 
            should create a proxy. The ExecutionIdentity is intended to be used by  
            IServicesMgr-derived classes to select an appropriate AuthenticationType for 
            proxy creation.
            </summary>
        </member>
        <member name="T:Relativity.API.IUserInfo">
            <summary>
            Provides a mockable interface with methods to obtain information about the currently logged in user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.WorkspaceUserArtifactID">
            <summary>
            Gets the current user workspace artifact id
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.ArtifactID">
            <summary>
            Gets the user id.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.FirstName">
            <summary>
            Gets the first name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.LastName">
            <summary>
            Gets the last name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.FullName">
            <summary>
            Gets the full name of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.EmailAddress">
            <summary>
            Gets the email address of the current user.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.AuditWorkspaceUserArtifactID">
            <summary>
            Gets the user workspace artifact id to use for auditing purposes.
            </summary>
        </member>
        <member name="P:Relativity.API.IUserInfo.AuditArtifactID">
            <summary>
            Gets the user id to use for auditing purposes.
            </summary>
        </member>
        <member name="M:Relativity.API.HiddenUserInfo.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the UserInfo class.
            </summary>
            <param name="artifactID">Integer value indicating the artifact ID for a user.</param>
            <param name="firstName">String value indicating the first name of a user.</param>
            <param name="lastName">String value indicating the last name of a user.</param>
            <param name="emailAddress">String value indicating the email address of a user.</param>
            <remarks></remarks>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#WorkspaceUserArtifactID">
            <summary>
            Gets the case specific artifact ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#ArtifactID">
            <summary>
            Gets the global artifact ID of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#FirstName">
            <summary>
            Gets the first name of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#LastName">
            <summary>
            Gets the last name of the user.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#FullName">
            <summary>
            Gets the full name of the user, as that is "LastName, FirstName".
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#EmailAddress">
            <summary>
            Gets the email Address of the User.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#AuditWorkspaceUserArtifactID">
            <summary>
            Gets the user workspace artifact id to use for auditing purposes.
            </summary>
        </member>
        <member name="P:Relativity.API.HiddenUserInfo.Relativity#API#IUserInfo#AuditArtifactID">
            <summary>
            Gets the user id to use for auditing purposes.
            </summary>
        </member>
        <member name="T:Relativity.API.IMOHelper">
            <summary>
            Provides a mockable interface with helper methods to Mass Operation Event Handlers to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="T:Relativity.API.IHelper">
            <summary>
            Provides a mockable interface with helper methods to programmatically interact with Relativity from: Event Handlers, Custom Pages and Agents. 
            You can use these methods to create proxys to interact with the Services API, obtain database contexts to query\run SQL against a database and obtain a URL helper to create links to pages within a Relativity Instance.
            To create reusable code within Relativity, it is suggested that you pass down the generic Helper interaces such as this one into your data access layer project.
            </summary>
        </member>
        <member name="M:Relativity.API.IHelper.GetDBContext(System.Int32)">
            <summary>
            Gets a database context for Workspace ArtifactID provided.
            </summary>
            <param name="caseID">Integer value indicating the ArtifactID for the workspace the database context should be returned.</param>
            <returns>Returns a database context.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetServicesManager">
            <summary>
            Gets a Service Manager object that helps connect to RSAPI.
            </summary>
            <returns>Returns a Service Manager.</returns>
        </member>
        <member name="M:Relativity.API.IHelper.GetUrlHelper">
            <summary>
            Gets a URL helper object that helps build urls to custom pages.
            </summary>
            <returns>Returns a UrlHelper.</returns>
        </member>
        <member name="M:Relativity.API.IMOHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.IMOHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Mass Operation Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.Services.Security.IPermissionHelper">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="T:Relativity.API.IUrlHelper">
            <summary>
            Provides helper methods for manipulating custom page URLs.
            </summary>
        </member>
        <member name="M:Relativity.API.IUrlHelper.GetApplicationURL(System.Guid)">
            <summary>
            Gets the uniform resource identifier (URI) for the custom pages in an application on the web server. 
            </summary>
            <remarks>On the web server, the URI for custom pages is the application GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The URI for the custom page root is the application GUID.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the application GUID is empty.</exception>
        </member>
        <member name="M:Relativity.API.IUrlHelper.GetRelativePathToCustomPages(System.Guid)">
            <summary>
            Gets the string path of the custom pages for an application on the web server. 
            </summary>
            <remarks>On the web server, string path for custom pages for the application this GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The string path to the custom page root is the application GUID.</returns>
        </member>
        <member name="T:Relativity.API.ISEHHelper">
            <summary>
            Interface for SEHHelper class - helper class for Statistics Event Handlers.
            </summary>
        </member>
        <member name="M:Relativity.API.ISEHHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.ISEHHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Statistics Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.API.License`1">
            <summary>
            Class implementing License object of type T.
            </summary>
            <typeparam name="T">Type that inherits from LicenseInfoBase.</typeparam>
        </member>
        <member name="M:Relativity.API.License`1.#ctor">
            <summary>
            Instantiates a license object.
            </summary>
        </member>
        <member name="P:Relativity.API.License`1.LicenseInfo">
            <summary>
            Gets and/or sets license info property of type T.
            </summary>
        </member>
        <member name="P:Relativity.API.License`1.Signature">
            <summary>
            Gets and/or sets a string property containing signature of a license object.
            </summary>
        </member>
        <member name="T:Relativity.API.LicenseInfoBase">
            <summary>
            Base class defining license information object.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.InitializeLifetimeService">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.Company">
            <summary>
            Stores a company name.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.InstanceName">
            <summary>
            Stores an instance name.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.ExpirationDate">
            <summary>
            Stores datetime value indicating expiration date of a license.
            </summary>
        </member>
        <member name="F:Relativity.API.LicenseInfoBase.PasswordHash">
            <summary>
            Stores a hash value of a password.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.#ctor">
            <summary>
            Initializes a new instance of the LicenseInfoBase class.
            </summary>
        </member>
        <member name="M:Relativity.API.LicenseInfoBase.SetIsValid(System.Boolean)">
            <summary>
            Sets  a read-only property IsValid of license object.
            </summary>
            <param name="isValid">Boolean value indicating if a license is valid.</param>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsValid">
            <summary>
            Returns a boolean value indicating if a license is valid.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsOk">
            <summary>
            Returns a boolean value indicating if a license is valid and not expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsGracePeriodExpired">
            <summary>
            Returns a boolean value indicating if a license grace period has expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.HoursUntilLockout">
            <summary>
            Returns number of hours left until lockout of license occurs (lockout only occurs after grace period expires).
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.IsExpired">
            <summary>
            Returns a boolean value indicating if a license has expired.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.DaysBeforeExpiration">
            <summary>
            Returns a number of days left before a license expires.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.DaysBeforeLockout">
            <summary>
            Returns a number of days before a license locks out.
            </summary>
        </member>
        <member name="P:Relativity.API.LicenseInfoBase.ApplicationGuid">
            <summary>
            Gets and/or sets an application guid.
            </summary>
        </member>
        <member name="T:Relativity.API.IAgentHelper">
            <summary>
            Provides a mockable interface with helper methods to Agents to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IAgentHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="T:Relativity.API.IAuthenticationMgr">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
        </member>
        <member name="M:Relativity.API.IAuthenticationMgr.GetAuthenticationToken">
            <summary>
            Returns a token which is later used to authenticate a currently logged in user in Relativity.
            </summary>
            <returns>Returns a token as a string.</returns>
        </member>
        <member name="P:Relativity.API.IAuthenticationMgr.UserInfo">
            <summary>
            Returns a a UserInfo interface which contains information regarding the currently logged in user.
            </summary>
            <returns>Returns a UserInfo.</returns>
        </member>
        <member name="T:Relativity.API.ICPHelper">
            <summary>
            Provides a mockable interface with helper methods allowing Custom Pages to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.ICPHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="T:Relativity.API.IEHHelper">
            <summary>
            Provides a mockable interface with helper methods to Object Type Event Handlers to programmatically interact with Relativity. Inherits from IHelper.
            </summary>
        </member>
        <member name="M:Relativity.API.IEHHelper.GetAuthenticationManager">
            <summary>
            Provides a mockable interface with methods to obtain the user specific information and authentication helper methods.
            </summary>
            <returns>Returns a Authentication Manager.</returns>
        </member>
        <member name="M:Relativity.API.IEHHelper.GetActiveCaseID">
            <summary>
            Gets the current Workspace ArtifactID where the Event Handler was called.
            </summary>
            <returns>Active CaseID.</returns>
        </member>
        <member name="T:Relativity.API.ILicenseMgr">
            <summary>
            Interface for LicenseManagerProxy class.
            </summary>
        </member>
        <member name="M:Relativity.API.ILicenseMgr.GetLicense``1(System.Guid,System.String)">
            <summary>
            Internal use only.
            Returns a License object with the license base you supplied.
            </summary>
            <typeparam name="T">Class of LicenseInfoBase the license type derives from.</typeparam>
            <param name="applicationGuid">The Guid of the Application the license is tied to.</param>
            <param name="password">The password to access the license information.</param>
            <returns>A License Object containing the LicenseInfo object supplied.</returns>
        </member>
        <member name="T:Relativity.API.IServicesMgr">
            <summary>
            Provides a mockable interface with methods to interact with the Services API.
            </summary>
        </member>
        <member name="M:Relativity.API.IServicesMgr.GetServicesURL">
            <summary>
            Gets the URL to the nearest Services API endpoint.
            </summary>
            <returns>Returns String of URI</returns>
        </member>
        <member name="M:Relativity.API.IServicesMgr.CreateProxy``1(Relativity.API.ExecutionIdentity)">
            <summary>
            Creates a proxy of IDisposable type T, operating under the given ExecutionIdentity.
            </summary>
            <typeparam name="T">IDisposable proxy type to be created.</typeparam>
            <param name="ident">ExecutionIdentity under which the proxy should operate. This can be set to the current user, the service account and can also be set manually if you have a specific username and password to authenticate with.</param>
            <returns>A proxy of type T.</returns>
        </member>
        <member name="M:Relativity.API.IServicesMgr.GetRESTServiceUrl">
            <summary>
            Gets the URL to the Relativity REST Service endpoint.
            </summary>
            <returns>Returns String of URI</returns>
        </member>
        <member name="T:Relativity.Services.Security.PermissionQuery">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionQuery.RetrieveAllAclIDsForUser(Relativity.API.IDBContext,System.Int32,System.Int32)">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="M:Relativity.Services.Security.PermissionQuery.RetrieveAllAclIDsForUser(Relativity.API.IDBContext,System.Int32)">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionsInfo.Type">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="T:Relativity.Services.Security.PermissionsInfo.Permission">
            <summary>
            Describe your member here.
            </summary>
        </member>
        <member name="T:Relativity.API.UrlHelper">
             <summary>
             Contains methods used to build URLs in custom code. 
             </summary>
            <remarks> The UrlHelper class simplifies programming with custom pages by helping you build URLs required to manipulate them. </remarks>
        </member>
        <member name="M:Relativity.API.UrlHelper.#ctor(System.Func{System.String})">
            <summary>
            Initializes a new instance of the UrlHelper class by using the specified base URL for a Relativity instance.
            </summary>
            <param name="baseWebsiteUrl"> The URL identifying the protocol and host name used for a Relativity instance as specified in the RelativityInstanceURL configuration value.</param>
        </member>
        <member name="M:Relativity.API.UrlHelper.GetApplicationURL(System.Guid)">
            <summary>
            Gets the uniform resource identifier (URI) for the custom pages in an application on the web server. 
            </summary>
            <remarks>On the web server, the URI for custom pages is the application GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The URI for the custom page root is the application GUID.</returns>
            <exception cref="T:System.ArgumentException">Thrown when the application GUID is empty.</exception>
        </member>
        <member name="M:Relativity.API.UrlHelper.GetRelativePathToCustomPages(System.Guid)">
            <summary>
            Gets the string path of the custom pages for an application on the web server. 
            </summary>
            <remarks>On the web server, string path for custom pages for the application this GUID.</remarks>
            <param name="appGuid">The GUID assigned by Relativity to an application.</param>
            <returns>The string path to the custom page root is the application GUID.</returns>
        </member>
    </members>
</doc>
