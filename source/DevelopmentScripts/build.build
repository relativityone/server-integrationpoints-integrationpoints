<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://nant.sf.net/release/0.86-beta1/nant.xsd" name="LDAPSync" default="build">

	<!-- Build properties -->
	<property name="root" value="C:\SourceCode\LDAPSync\source" unless="${property::exists('root')}" />
	<property name="source.code.directory" value="${root}" />
	<property name="action" value="build" unless="${property::exists('action')}" />
	<property name="buildconfig" value="release" unless="${property::exists('buildconfig')}" />
	<property name="buildconfig" value="release" unless="${property::exists('buildconfig')}" />
	<property name="copyconfig" value="false" unless="${property::exists('copyconfig')}" />
	<property name="buildsuccessfile" value="${source.code.directory}\.lastbuildsucceeded" readonly="true" />
	<property name="targetsfile" value="msbuild.targets" readonly="true" />
	<property name="buildLoggerLogFile" value="${source.code.directory}\buildLogger.xml" />
	<property name="logfile" value="${source.code.directory}\build.log" readonly="true" />
	<property name="verbosity" value="quiet" unless="${property::exists('verbosity')}" />
	<property name="ignorewarnings" value="" unless="${property::exists('ignorewarnings')}" />
	<property name="ldap.scripts.directory" value="${path::combine(source.code.directory, 'DevelopmentScripts')}" />
	<property name="ldapRelativityBuildServer" value="" unless="${property::exists('ldapRelativityBuildServer')}" />
	<property name="ldapRelativityBuildCaseID" value="" unless="${property::exists('ldapRelativityBuildCaseID')}" />
	<property name="logger" value="${ldap.scripts.directory}\Loggers\Wintellect.Build.Logging.dll" unless="${property::exists('MSBuildLogger')}" />
	<property name="buildLogger" value="${ldap.scripts.directory}\Loggers\Rodemeyer.MsBuildToCCnet.dll" />
	<property name="source.reference.application" value="${source.code.directory}\application" />
	<property name="source.reference.directory" value="${source.code.directory}\Dependencies" />
	<property name="source.packages.directory" value="${source.code.directory}\packages" />
	<property name="source.reference.kCura.directory" value="${source.reference.directory}\kCura" />
	<property name="source.reference.Injection.directory" value="${source.reference.directory}\Injection"/>
	<property name="source.reference.MVCContrib.directory" value="${source.reference.directory}\MVCContrib" />
	<property name="source.reference.NewtonsoftJson.directory" value="${source.packages.directory}\Newtonsoft.Json.6.0.8\lib\net45" />
	<property name="source.reference.CastleCore.directory" value="${source.packages.directory}\Castle.Core.3.3.0\lib\net45" />
	<property name="source.reference.CastleWindsor.directory" value="${source.packages.directory}\Castle.Windsor.3.3.0\lib\net45" />
	<property name="source.reference.kCuraAppsCommonConfig.directory" value="${source.packages.directory}\kCura.Apps.Common.Config.1.0.227.4\lib\net45" />
	<property name="source.reference.kCuraAppsCommonData.directory" value="${source.packages.directory}\kCura.Apps.Common.Data.1.0.227.4\lib\net45" />
	<property name="source.reference.kCuraAppsCommonUtils.directory" value="${source.packages.directory}\kCura.Apps.Common.Utils.1.0.227.4\lib\net45" />
	<property name="target.bin.directory" value="${root}\bin" />
	<property name="target.code.directory" value="${root}\bin\${buildconfig}" />
	<property name="bin.directory" value="${root}\bin\" />
	<property name="ldap.build.server.share" value="\\tt-img-app-9-0.testing.corp\BuildShare\LDAPSync\release-1.0" unless="${property::exists('ldap.build.server.share')}"/>
	<property name="buildType" value="DEV" unless="${property::exists('buildType')}" />
	<property name="Injections" value="INJECTION" unless="${property::exists('Injections')}" />
	<property name="TimeMachine" value="TIME_MACHINE" unless="${property::exists('TimeMachine')}" />
	<property name="DevEnv" value="DEVENV" unless="${property::exists('DevEnv')}" />
	<property name="ncover.install.directory" value="${environment::get-variable('ProgramW6432')}\NCover" />
	<property name="ncover.output.directory" value="D:\NCover" unless="${property::exists('ncover.output.directory')}" />
	<property name="caseId" value="" unless="${property::exists('caseId')}" />
	<property name="relativityDependencyVersion" value="9.3.408.1" />
	
	<!-- Microsoft .NET folders -->
	<property name="microsoft.net.directory" value="${environment::get-variable('windir')}\Microsoft.NET\Framework\v4.0.30319" unless="${property::exists('microsoft.net.directory')}" />
	<property name="microsoft.net64.directory" value="${environment::get-variable('windir')}\Microsoft.NET\Framework64\v4.0.30319" unless="${property::exists('microsoft.net64.directory')}" />
	<property name="microsoft.interop.directory" value="${environment::get-variable('ProgramFiles(x86)')}\Microsoft.NET" unless="${property::exists('microsoft.interop.directory')}" />
	<property name="microsoft.vs.directory" value="${string::replace(environment::get-variable('VS100COMNTOOLS'), '\Common7\Tools\', '')}" unless="${property::exists('microsoft.vs.directory')}" />
		
	<property name="msbuild" value="${environment::get-variable('ProgramFiles(x86)')}\MSBuild\14.0\Bin\msbuild.exe" unless="${property::exists('msbuild')}" />
	
	<!-- Version properties -->
	<property name="CCNetLabel" value="2.0.0.0" unless="${property::exists('CCNetLabel')}" />
	<property name="Product.Version" value="${CCNetLabel}" unless="${property::exists('Product.Version')}" />	
	<property name="Product.Version.Triplex" value="${Product.Version}" />	
	<property name="ILMerge.DLL.Version" value="9.3.0.0" />	
	<property name="ProductLink" value="http://www.kcura.com" readonly="true"/>
	<tstamp property="current.year" pattern="yyyy" />

	<!-- shared package creation properties -->
	<property name="packageFolder" value="E:\Packages" unless="${property::exists('packageFolder')}" />
	<property name="branchDir" value="LDAP" unless="${property::exists('branchDir')}" />
	
	<loadtasks assembly="${source.code.directory}\Dependencies\nantcontrib-0.91\bin\NAnt.Contrib.Tasks.dll" />

	<include buildfile="Build Package.include" />
	<include buildfile="Build Assembly.include" />
	<include buildfile="Build Tests.include" />
	<include buildfile="Build RAP Package.include" />
	<include buildfile="Update Storyboard.include"/>
	<include buildfile="Build Projects.Coverage.include"/>
	<include buildfile="Build Projects.NuGet.include"/>
	<include buildfile="Build SDK.include"/>
	<include buildfile="Build Application.include"/>


	<target name="build_all" description="Build the entire LDAPSync codebase and RAP" depends="build, build_RAP_Package">
		<if test="${file::exists(logfile)}">
			<delete file="${logfile}" failonerror="true"/>
		</if>
		<if test="${string::contains(action, 'build')}">
			<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." file="${buildsuccessfile}" append="false" failonerror="false" />		
		</if>
		<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." />
	</target>
	
	<target name="build_and_deploy" description="Build the entire codebase, RAP, and deploys binaries" depends="build, build_RAP_Package, deploy">				
		<if test="${file::exists(logfile)}">
			<delete file="${logfile}" failonerror="true"/>
		</if>
		<if test="${string::contains(action, 'build')}">
			<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." file="${buildsuccessfile}" append="false" failonerror="false" />		
		</if>
		<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." />
	</target>

	<target name="build" description="Build the entire LDAPSync codebase." depends="build_initialize, build_integrationPoint_core, merge_binaries, copy_kCura.IntegrationPoints.Contracts, build_integrationpoint_services, merge_ldap, merge_documentsTransfer, merge_source_provider_installer, build_ip_sdk">				
		<if test="${file::exists(logfile)}">
			<delete file="${logfile}" failonerror="true"/>
		</if>
		<if test="${string::contains(action, 'build')}">
			<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." file="${buildsuccessfile}" append="false" failonerror="false" />		
		</if>
		<echo message="${DSTAMP} ${TSTAMP} ${buildconfig} ${action} complete." />
	</target>

	<target name="build_initialize">
		<echo message="Initializing a ${buildconfig} ${action}..." />
		<tstamp>
			<formatter property="DSTAMP" pattern="yyyy-MM-dd"/>
			<formatter property="TSTAMP" pattern="HH:mm:ss"/>
		</tstamp>
		
		<!-- Based on the buildType parameter passed in Enable/Disable Injections and TimeMachine. -->
		<echo message="${DSTAMP} ${TSTAMP} ${buildType} ${action} buildType value was passed." />
		<choose>
			<when test="${string::contains(buildType,'GOLD')}">
				<property name="Injections" value="NO_INJECTION" />
				<property name="TimeMachine" value="NO_TIME_MACHINE" />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${Injections} was set." />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${TimeMachine} was set." />
			</when>
			<when test="${string::contains(buildType,'ALPHA')}">
				<property name="Injections" value="NO_INJECTION" />
				<property name="TimeMachine" value="NO_TIME_MACHINE" />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${Injections} was set." />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${TimeMachine} was set." />
			</when>
			<when test="${string::contains(buildType,'BETA')}">
				<property name="Injections" value="NO_INJECTION" />
				<property name="TimeMachine" value="NO_TIME_MACHINE" />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${Injections} was set." />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${TimeMachine} was set." />
			</when>
			<when test="${string::contains(buildType,'RC')}">
				<property name="Injections" value="NO_INJECTION" />
				<property name="TimeMachine" value="NO_TIME_MACHINE" />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${Injections} was set." />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${TimeMachine} was set." />
			</when>
			<otherwise>
				<property name="Injections" value="INJECTION" />
				<property name="TimeMachine" value="TIME_MACHINE" />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${Injections} was set." />
				<echo message="${DSTAMP} ${TSTAMP} Based on ${buildType} buildType ${TimeMachine} was set." />
			</otherwise>
		</choose>
		
		<if test="${file::exists(buildsuccessfile)}">
			<delete file="${buildsuccessfile}" failonerror="true" />
		</if>
	
		<if test="${file::exists(buildLoggerLogFile)}">
			<delete file="${buildLoggerLogFile}" failonerror="true"/>
		</if>
		
		<exec program="..\Dependencies\NuGet.exe">
		  <arg value="restore" />
		  <arg value="..\kCura.IntegrationPoints.sln" />
		</exec>
		<exec program="..\Dependencies\NuGet.exe">
		  <arg value="restore" />
		  <arg value="..\kCura.SourceProviderInstaller.sln" />
		</exec>
		<exec program="..\Dependencies\NuGet.exe">
		  <arg value="restore" />
		  <arg value="..\kCura.IntegrationPoints.Documentation.sln" />
		</exec>
		<exec program="..\Dependencies\NuGet.exe">
		  <arg value="restore" />
		  <arg value="..\kCura.IntegrationPoints.Services.sln" />
		</exec>
	</target>
	
	<target name="build_integrationPoint_core">
		<exec program="${msbuild}">
			<arg line='"${targetsfile}"' />
			<arg line='/property:SourceRoot="${root}"' />
			<arg line="/property:Configuration=${buildconfig}" />
			<arg line="/property:Platform=x64" />
			<arg line="/property:NoWarn=${ignorewarnings}" />
			<arg line='/logger:"${logger}"'/>
			<arg line='/logger:"${buildLogger}";"${buildLoggerLogFile}"'/>
			<arg line="/noconsolelogger" />
			<arg line="/filelogger" />
			<arg line='/flp:LogFile="${logfile}";Verbosity=${verbosity}' />      
			<arg line="/target:BuildMethod" />
			<arg line="/verbosity:${verbosity}" />
			<arg line='/p:DefineConstants="${DevEnv},${TimeMachine},${Injections}"' />
			<arg line="/nologo" />
		</exec>
	</target>

	<target name="merge_binaries" description="Merge all related binaries into a single library">
		<exec program="${source.reference.directory}\ILMerge\ILMerge.exe" >
			<arg line='/targetplatform:v4' />
			<arg line='/out:"${target.bin.directory}\kCura.IntegrationPoints.dll"' />
			<arg line='/internalize:ilmergeExcludeMain.txt' />
			<arg line='/log' />
			<arg line='/AllowDup' />
			<arg line='/lib:"${target.code.directory}"' />
			
			<!-- kCura Dependencies -->
			<arg line='/lib:"${source.packages.directory}\kCura.Agent.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\kCura.HTMLSanitizer.0.0.21.7\lib"' />
			<arg line='/lib:"${source.packages.directory}\kCuraCore.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\RelativityCore.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Data.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.ImportExport.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Kepler.1.0.1.149\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.SecretCatalog.1.0.16\lib"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.ServiceBus.1.1.17\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Telemetry.DataContracts.Shared.9.4.60\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Telemetry.MetricsCollection.9.4.60\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Toggles.1.0.0.68\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Vfs.IO.1.0.12\lib\net451"' />
			<arg line='/lib:"${source.packages.directory}\FluentValidation.6.1.0.0\lib\Net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.IdentityModel.Protocol.Extensions.1.0.0\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.Owin.3.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.Owin.Security.3.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.Owin.Security.Cookies.3.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.Owin.Security.OAuth.3.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Microsoft.Owin.Security.OpenIdConnect.3.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Owin.1.0\lib\net40"' />
			<arg line='/lib:"${source.packages.directory}\StackExchange.Redis.1.0.328\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\System.IdentityModel.Tokens.Jwt.4.0.1\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\SystemWrapper.Wrappers.0.7.0.0\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Thinktecture.IdentityModel.Client.4.0.1\lib\net45"' />
			
			<arg line='/lib:"${source.reference.MVCContrib.directory}"' />
			<arg line='/lib:"${source.reference.CastleCore.directory}"' />
			<arg line='/lib:"${source.reference.CastleWindsor.directory}"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0"' />
			<arg line='/lib:"C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies"' />
			<arg line='/lib:"${source.reference.NewtonsoftJson.directory}"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Data.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonConfig.directory}\kCura.Apps.Common.Config.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonData.directory}\kCura.Apps.Common.Data.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonUtils.directory}\kCura.Apps.Common.Utils.dll"' />
			<arg line='"${source.reference.Injection.directory}\kCura.Method.Injection.dll"' />
			<arg line='"${source.reference.Injection.directory}\kCura.Injection.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Core.Contracts.dll"' />
			<arg line='"${target.code.directory}\kCura.ScheduleQueue.AgentBase.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Config.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Core.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.SourceProviderInstaller.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Synchronizers.RDO.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.EventHandlers.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Agent.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Email.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.DocumentTransferProvider.Shared.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.FilesDestinationProvider.Core.dll"' />
			<arg line='/ver:${ILMerge.DLL.Version}' />
			<arg line='/closed' />
		</exec>
	</target>

	<target name="build_integrationpoint_services">
		<echo message="${targetsfile}" />
		<exec program="${msbuild}">
			<arg line='"msbuild_service.targets"' />
			<arg line='/property:SourceRoot="${root}"' />
			<arg line="/property:Configuration=${buildconfig}" />
			<arg line="/property:Platform=x64" />
			<arg line="/property:NoWarn=${ignorewarnings}" />
			<arg line='/logger:"${logger}"'/>
			<arg line='/logger:"${buildLogger}";"${buildLoggerLogFile}"'/>
			<arg line="/noconsolelogger" />
			<arg line="/filelogger" />
			<arg line='/flp:LogFile="${logfile}";Verbosity=${verbosity}' />      
			<arg line="/target:BuildMethod" />
			<arg line="/verbosity:${verbosity}" />
			<arg line='/p:DefineConstants="${DevEnv},${TimeMachine},${Injections}"' />
			<arg line="/nologo" />
		</exec>
	</target>
	
	<target name="merge_ldap" description="Merge all related binaries into a single library">
		<exec program="${source.reference.directory}\ILMerge\ILMerge.exe" >
			<arg line='/targetplatform:v4' />
			<arg line='/out:"${target.bin.directory}\kCura.LDAPProvider.dll"' />
			<arg line='/internalize:ilmergeExcludeLDAP.txt' />
			<arg line='/log' />
			<arg line='/lib:"${source.reference.CastleCore.directory}"' />
			<arg line='/lib:"${source.reference.CastleWindsor.directory}"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0"' />
			<arg line='/lib:"C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies"' />
			<arg line='/lib:"${source.reference.NewtonsoftJson.directory}"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.LDAPProvider.dll"' />
			<arg line='/ver:${ILMerge.DLL.Version}' />
			<arg line='/closed' />
		</exec>
	</target>
	
	<target name="merge_documentsTransfer" description="Merge all related binaries into a single library">
		<exec program="${source.reference.directory}\ILMerge\ILMerge.exe" >
			<arg line='/targetplatform:v4' />
			<arg line='/out:"${target.bin.directory}\kCura.DocumentTransferProvider.dll"' />
			<arg line='/internalize:excludeDocsTransfer.txt' />
			<arg line='/log' />
			<arg line='/lib:"${source.packages.directory}\kCura.EventHandler.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\kCura.Relativity.Client.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\kCuraCore.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.API.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.ImportExport.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.reference.MVCContrib.directory}"' />
			<arg line='/lib:"${source.reference.CastleCore.directory}"' />
			<arg line='/lib:"${source.reference.CastleWindsor.directory}"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0"' />
			<arg line='/lib:"C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies"' />
			<arg line='/lib:"${source.reference.NewtonsoftJson.directory}"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.DocumentTransferProvider.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.DocumentTransferProvider.Shared.dll"' />
			<arg line='/ver:${ILMerge.DLL.Version}' />
			<arg line='/closed' />
		</exec>
	</target>
	
	<target name="merge_source_provider_installer" description="Merge all related binaries into a single library">
		<exec program="${source.reference.directory}\ILMerge\ILMerge.exe" >
			<arg line='/targetplatform:v4' />
			<arg line='/out:"${target.bin.directory}\kCura.SourceProviderInstaller.dll"' />
			<arg line='/internalize:ilmergeExcludeSourceProviderInstaller.txt' />
			<arg line='/log' />
			<arg line='/lib:"${source.packages.directory}\kCura.EventHandler.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\kCura.Relativity.Client.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\kCuraCore.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.API.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Core.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Data.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.ImportExport.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\Relativity.Services.Interfaces.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.packages.directory}\RelativityCore.${relativityDependencyVersion}\lib\net45"' />
			<arg line='/lib:"${source.reference.MVCContrib.directory}"' />
			<arg line='/lib:"${source.reference.CastleCore.directory}"' />
			<arg line='/lib:"${source.reference.CastleWindsor.directory}"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5"' />
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.0"' />
			<arg line='/lib:"C:\Program Files (x86)\Microsoft ASP.NET\ASP.NET MVC 4\Assemblies"' />
			<arg line='/lib:"${source.reference.NewtonsoftJson.directory}"' />
			<arg line='/lib:"${source.reference.Injection.directory}"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.SourceProviderInstaller.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonConfig.directory}\kCura.Apps.Common.Config.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonData.directory}\kCura.Apps.Common.Data.dll"' />
			<arg line='"${source.reference.kCuraAppsCommonUtils.directory}\kCura.Apps.Common.Utils.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Data.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Core.Contracts.dll"' />
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.Core.dll"' />
			<arg line='/ver:${ILMerge.DLL.Version}' />
			<arg line='/closed' />
		</exec>
	</target>
	
	<target name="merge_export_provider" description="Merge all related binaries into a single library">
		<exec program="${source.reference.directory}\ILMerge\ILMerge.exe" >
			<arg line='/targetplatform:v4' />
			<arg line='/out:"${target.bin.directory}\kCura.IntegrationPoints.FilesDestinationProvider.dll"' />
			<arg line='/internalize:ilmergeExcludeExportProvider.txt' />
			<arg line='/log' />
			
			<arg line='/lib:"C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.5"' />				
			<arg line='/lib:"${source.packages.directory}\Relativity.ImportExport.${relativityDependencyVersion}\lib\net45"' />
			
			<arg line='"${target.code.directory}\kCura.IntegrationPoints.FilesDestinationProvider.Core.dll"' />				
			<arg line='/closed' />
		</exec>
	</target>
	
	<target name="copy_kCura.IntegrationPoints.Contracts" description="Copy kCura.IntegrationPoints.Contracts.dll to \bin">
		<copy todir="${bin.directory}">
			<fileset basedir="${target.code.directory}">
				<include name="kCura.IntegrationPoints.Contracts.dll" />
			</fileset>
		</copy>
	</target>
	
	<target name="copy_files" description="Copy all dlls for rap to \bin">
		<copy todir="${bin.directory}">
			<fileset basedir="${target.code.directory}">
				<include name="kCura.IntegrationPoints.Contracts.dll" />
				<include name="kCura.IntegrationPoints.dll" />
				<include name="kCura.LDAPProvider.dll" />
				<include name="kCura.DocumentTransferProvider.dll" />
				<include name="kCura.IntegrationPoints.Services.dll" />
				<include name="kCura.IntegrationPoints.Services.Interfaces.Private.dll" />
			</fileset>
		</copy>
		<copy todir="${bin.directory}">
			<fileset basedir="${source.packages.directory}\RelativityCore.${relativityDependencyVersion}\lib\net45">
				<include name="kCura.Image.Viewer.dll" />
				<include name="kCura.Print.dll" />
			</fileset>
		</copy>
	</target>
	
	<target name="upload_binaries_into_relativity" description="Upload binary files into Relativity">		
		<exec program="${ldap.scripts.directory}\UploadLDAPSyncBinariesIntoLocalRelativity.bat" >
			<arg line='${caseId}' />
			<environment>
				<variable name="root" value="${root}" />
			</environment>
		</exec>
	</target>
	
	<target name="deploy" description="Deploy application into Relativity">
		<exec program="${ldap.scripts.directory}\deploy.bat" >
			<arg line='${caseId}' />
			<environment>
				<variable name="root" value="${root}" />
			</environment>
		</exec>
	</target>
	
</project>
