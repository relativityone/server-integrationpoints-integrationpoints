@{
	Layout = "~/Views/Shared/_StepLayout.cshtml";
}
<meta name="import-base-url" content="/Relativity/CustomPages/DCF6E9D1-22B6-4DA3-98F6-41381E93C30C/" />
<link href="~/Content/import.css" rel="stylesheet" />
<link href="~/Content/themes/default/style.min.css" rel="stylesheet" />
<link href="~/Content/jstree-fluid.css" rel="stylesheet"/>
<link href="~/Content/buttermilk.9_2.min.css" rel="stylesheet" />
<link href="~/Content/buttermilk-overrides.css" rel="stylesheet" />

<div id="_main">
	<div id="import-provider-configuration" style="min-width: 900px;">
		<div class="card">
			<span class="label">Load File Settings</span>
			<table style="width: 100%;">
				<tr>
					<td style="width: 48%;">
						<div class="field-row">
							<div class="field-label required">
								Import Type:
							</div>
							<div class="field-value select2-double-width">
								<select class="fluid-mock-select" id="import-importType" data-bind="options:importTypes, optionsText:'Name', optionsValue:'Value', value:selectedImportType, optionsCaption: 'Select...' ,select2: { width: '100%' }"></select>
								<div class="import-validation-errors-container">
									<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: selectedImportType"></span>
								</div>
							</div>
						</div>
						<div class="field-row">
							<div class="field-label required">
								Workspace Destination Folder:
							</div>
							<div class="field-value select2-double-width">
								<div id="destination-location-select" class="select2-container fluid-mock-select filter-container">
									<input id="destination-location-input" type="text" readonly='readonly' placeholder="Select..." data-bind="value: TargetFolder" />
									<span id="destination-location-span" class="icon legal-hold icon-chevron-down" role="presentation"></span>
								</div>
								<div id="destination-jstree-holder-div" class="jstree-holder browse" hidden="hidden">
									<div id="destination-browser-tree" tabindex="0"></div>
								</div>
								<div class="import-validation-errors-container">
									<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: TargetFolder"></span>
								</div>
							</div>
						</div>
						<div class="field-row">
							<div class="field-label required">
								Import Source:
							</div>
							<div class="field-value select2-double-width">
								<div id="location-select" class="select2-container fluid-mock-select filter-container">
									<input id="location-input" type="text" readonly='readonly' placeholder="Select..." data-bind="value: LoadFile" />
									<span id="location-span" class="icon legal-hold icon-chevron-down" role="presentation"></span>
								</div>
								<div>
									<div id="jstree-holder-div" class="jstree-holder browse" hidden="hidden">
										<div id="browser-tree" tabindex="0"></div>
									</div>
									<div class="import-validation-errors-container" id="loadFileValidationMessage" style="display: none">
										<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: LoadFile"></span>
									</div>
								</div>
							</div>
						</div>
						<div class="field-row">
							<div class="field-label required">
								Start Line:
							</div>
							<div class="field-value">
								<input id="import-columnname-numbers" type="number" min="0" value="0" data-bind="value: startLine" />
								<div class="import-validation-errors-container">
									<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: startLine"></span>
								</div>
							</div>
						</div>
					</td>
				</tr>
			</table>
		</div>
		<div class="card" id="card-style" data-bind="visible: selectedImportType() !== 0">
			<div class="identifier">
				<span class="label">Import Settings</span>
				<table style="width: 100%;">
					<tbody>
						<tr>
							<td style="width: 48%;">
								<div class="field-row">
									<div class="field-label required">
										Numbering:
									</div>
									<div class="field-value">
										<input type="radio" name="imageProductionNumbering" value="false" data-bind="checked: autoNumberPages" /> Use load file page IDs<br />
										<input type="radio" name="imageProductionNumbering" value="true" data-bind="checked: autoNumberPages" /> Auto-number pages
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">Import Mode:</div>
									<div class="field-value">
										<select id="overwrite" data-bind="options: OverwriteOptions, value: SelectedOverwrite, optionsCaption: 'Select...', select2: {}"></select>
										<div class="import-validation-errors-container">
											<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: SelectedOverwrite"></span>
										</div>
									</div>
								</div>
								<div id="overlayOptions" data-bind="visible: SelectedOverwrite() == 'Overlay Only'">
									<div class="field-row">
										<div class="field-label required">Overlay Identifer:</div>
										<div class="field-value">
											<select id="overlay-identifier" data-bind="options: overlayIdentifiers, optionsText: 'Name',optionsValue:'ArtifactId', value:selectedOverlayIdentifier, select2: {}"></select>
											<div class="import-validation-errors-container">
												<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: selectedOverlayIdentifier"></span>
											</div>
										</div>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">Copy Files to Document Repository:</div>
									<div class="field-value">
										<input type="radio" name="copyFilesToDocumentRepo" value="true" data-bind="checked: copyFilesToDocumentRepository" /> Yes<br />
										<input type="radio" name="copyFilesToDocumentRepo" value="false" data-bind="checked: copyFilesToDocumentRepository, disable:isCloudInstance() =='true'" /> No
									</div>
								</div>
								<div class="field-row" data-bind="visible: copyFilesToDocumentRepository() == 'true'">
									<table>
										<tr>
											<th>
												<div class="field-label required">File Repository:</div>
												<div class="field-value">
													<select id="overlay-identifier" data-bind="options:fileRepositories, value:selectedRepo, select2: {}"></select>
												</div>
											</th>
											<th>
												<div class="default-fileRepo-container">
													<div class="button generic" id="btnDefaultFileRepo">
														<span>Default</span>
													</div>
												</div>
											</th>
										</tr>
									</table>
								</div>
								<div data-bind="visible: selectedImportType() == 1">
									<div class="field-row">
										<div class="field-label required ">Load Extracted Text:</div>
										<div class="field-value">
											<ul>
												<li>
													<label><input id="extracted-text-radio-0" type="radio" name="import_extractedTextLocation" value="true" data-bind="checked: ExtractedTextFieldContainsFilePath">Yes</label>
												</li>
												<li>
													<label><input id="extracted-text-radio-1" type="radio" name="import_extractedTextLocation" value="false" data-bind="checked: ExtractedTextFieldContainsFilePath">No</label>
												</li>
											</ul>
										</div>
									</div>
									<div data-bind="visible: ExtractedTextFieldContainsFilePath() == 'true'">
										<div class="field-row">
											<div class="field-label required ">Encoding for undetectable files:</div>
											<div class="field-value ">
												<select id="encodings" data-bind="foreach: FileEncodingTypeList, value: ExtractedTextFileEncoding, select2searchable: {}">
													<optgroup data-bind="attr: {label: label}, foreach: children">
														<option data-bind="text: displayName, value: name"></option>
													</optgroup>
												</select>
												<div class="import-validation-errors-container">
													<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: ExtractedTextFileEncoding"></span>
												</div>
											</div>
										</div>
									</div>
								</div>
								<div class="field-row" data-bind="visible: selectedImportType() == 2">
									<div class="field-label required">Production:</div>
									<div class="field-value">
										<select id="production-sets" data-bind="options: productionSets, optionsText: 'displayName', value: selectedProductionSets , optionsValue: 'artifactID', optionsCaption: 'Select...' , select2: {}"></select>
										<div class="import-validation-errors-container">
											<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: selectedProductionSets"></span>
										</div>
									</div>
								</div>
							</td>
						</tr>
				</table>
			</div>
		</div>
		<div class="card" id="card-style" data-bind="visible: selectedImportType() == 0">
			<div class="identifier">
				<span class="label">File Encoding</span>
				<table style="width: 100%;">
					<tbody>
						<tr>
							<td style="vertical-align: text-top; width: 48%;">
								<div class="field-row">
									<div class="field-label required">
										File Encoding:
									</div>
									<div class="field-value">
										<select id="dataFileEncodingSelector" data-bind="foreach: FileEncodingTypeList, value: DataFileEncodingType, select2searchable: {}">
											<optgroup data-bind="attr: {label: label}, foreach: children">
												<option data-bind="text: displayName, value: name"></option>
											</optgroup>
										</select>
										<div class="import-validation-errors-container">
											<span class="icon-error legal-hold field-validation-error" data-bind="validationMessage: DataFileEncodingType"></span>
										</div>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">
										Column:
									</div>
									<div class="field-value">
										<select class="fluid-mock-select select2-double-width" id="import-column" data-bind="options: asciiDelimiters, optionsText: 'asciiText', optionsValue: 'asciiID', value: selectedColumnAsciiDelimiter, select2: {}"></select>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">
										Quote:
									</div>
									<div class="field-value">
										<select class="fluid-mock-select select2-double-width" id="import-quote" data-bind="options: asciiDelimiters, optionsText: 'asciiText', optionsValue: 'asciiID', value: selectedQuoteAsciiDelimiter, select2: {}"></select>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">
										Newline:
									</div>
									<div class="field-value">
										<select class="fluid-mock-select select2-double-width" id="import-newline" data-bind="options: asciiDelimiters, optionsText: 'asciiText', optionsValue: 'asciiID', value: selectedNewLineAsciiDelimiter,  select2: {}"></select>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">
										Multi-Value:
									</div>
									<div class="field-value">
										<select class="fluid-mock-select select2-double-width" id="import-multiValue" data-bind="options: asciiDelimiters, optionsText: 'asciiText', optionsValue: 'asciiID', value: selectedMultiLineAsciiDelimiter, select2: {}"></select>
									</div>
								</div>
								<div class="field-row">
									<div class="field-label required">
										Nested Value:
									</div>
									<div class="field-value">
										<select class="fluid-mock-select select2-double-width" id="import-nestedValue" data-bind="options: asciiDelimiters, optionsText: 'asciiText', optionsValue: 'asciiID', value: selectedNestedValueAsciiDelimiter, select2: {}"></select>
									</div>
								</div>
							</td>
							<td style="vertical-align: text-top;">
								<div class="field-row">
									<div class="field-label">
										File Column Headers:
									</div>
								</div>
								<div class="field-row">
									<div class="field-value middle-vertical-align">
										<div id="file-column-container">
											<div id="file-column">
												<div id="file-column-textarea">
													<textarea readonly id="file-column-headers" data-bind="textInput: populateFileColumnHeaders"></textarea>
												</div>
											</div>
										</div>
									</div>
								</div>
							</td>
						</tr>
					</tbody>
				</table>
			</div>
		</div>
	</div>
	<br />
</div>
@section scripts
{
	<script src="~/Scripts/core/data.js"></script>
	<script src="~/Scripts/core/utils.js"></script>
	<script src="~/Scripts/knockout-3.4.0.js"></script>
	<script src="~/Scripts/knockout.validation.js"></script>
	<script src="~/Scripts/export/export-enums.js"></script>
	<script src="~/Scripts/jstree.min.js"></script>
	<script src="~/Scripts/export/location-jstree-selector.js"></script>
	<script src="~/Scripts/integration-point/binding.js"></script>

	@Scripts.Render("~/bundles/importProvider")
}
