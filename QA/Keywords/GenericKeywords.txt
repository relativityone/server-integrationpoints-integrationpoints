
*** Settings ***
| Documentation	| This suite of keywords deals with the Integration Point object and its associated pages and actions.


*** Keywords ***

| Proceed to the Next Step of the Integration Point wizard
| | [Documentation]	| This keyword proceeds to the Next Step of the Integration Point wizard.
| | Click	| id=stepProgress	| # Click out of any given field
| | ${PreviousStep}=	| Determine the current Step of the Create Integration Point Process
| | ${NextStep}=	| Set Variable If	| 
| | ... | "${PreviousStep}" == "Set Integration Details"	| Connect to Source	| 
| | ... | "${PreviousStep}" == "Connect to Source"			| Map Fields		| 
| | ... | "${PreviousStep}" == "Map Fields"					| User Error: Wrong keyword.	| 
| | ... | Outdated Keyword call. Please update step names as "${NextStep}" was not found.	| # Else
| | Click	| id=next
| | Wait Until Keyword Succeeds	| 20s	| 2s	| Verify that you are on the following Step of the Create Integration Point Process	| ${NextStep}
| | Wait for the Loading Indicator to disappear | 20s

| Proceed to the Previous Step of the Integration Point wizard
| | [Documentation]	| This keyword goes to the previous Step of the Integration Point wizard.
| | Click	| id=stepProgress	| # Click out of any given field
| | ${CurrentStep}=	| Determine the current Step of the Create Integration Point Process
| | ${PreviousStep}=	| Set Variable If	| 
| | ... | "${CurrentStep}" == "Set Integration Details"	| User Error: Wrong keyword.	| 
| | ... | "${CurrentStep}" == "Connect to Source"		| Set Integration Details	| 
| | ... | "${CurrentStep}" == "Map Fields"				| Connect to Source		| 
| | ... | Outdated Keyword call. Please update step names as "${PreviousStep}" was not found.	| # Else
| | Click	| id=back
| | Wait Until Keyword Succeeds	| 20s	| 2s	| Verify that you are on the following Step of the Create Integration Point Process	| ${PreviousStep}
| | Wait for the Loading Indicator to disappear

| Run Import Now on the Following Integration Point
| | [Documentation] | A keyword that runs an RIP import; can be called from anywhere.
| | [ARGUMENTS]		| ${IntegrationPoint} 
| | View Integration Point	| ${IntegrationPoint} 
| | Page Should Contain Element	| xpath=//a[@class='consoleButtonEnabled' and text()='Run Now']	| The Import Now button was disabled for the Integration Point "${IntegrationPoint}".
| | Click	| Run Now
| | Click	| xpath=//span[@class='ui-button-text' and text()='OK'] 
| | Wait Until Integration Point Job Runs	| ${IntegrationPoint}	| 120S

| View Job History
| | [Documentation] | A keyword that Views a Job History entry. Can be called from any where.
| | [ARGUMENTS]		| ${IntegrationPointName}	| ${Date}=
| | Go to the Tab	| Job History
| | Set Filter	| Name	| ${IntegrationPointName}
| | Run Keyword Unless	| "${Date}" == "${EMPTY}"	| Set Filter	| Start Time (UTC)	| ${Date}
| | Page Should Contain Element	| xpath=//a[@class='itemListPrimaryLink' and text()='${IntegrationPointName}']	| The Job History entry for the Integration Point "${IntegrationPointName}" was not found.
| | Click	| xpath=//a[@class='itemListPrimaryLink' and text()='${IntegrationPointName}']

| View Integration Point
| | [Documentation] | A keyword that Views an Integration Point. Can be called from any where.
| | [ARGUMENTS]		| ${IntegrationName}
| | Go to the Tab	| Integration Points
| | Set Filter	| Name	| ${IntegrationName}
| | Page Should Contain Element	| xpath=//a[@class='itemListPrimaryLink' and text()='${IntegrationName}']	| The Integration Point "${IntegrationName}" was not found.
| | Click	| xpath=//a[@class='itemListPrimaryLink' and text()='${IntegrationName}']

| Delete the Following Integration Point
| | [Documentation] | A keyword that deletes the specified Integration Point; can be called from anywhere.
| | [ARGUMENTS]		| ${IntegrationPoint}
| | View Integration Point	| ${IntegrationPoint} 
| | Delete this object

| Create LDAP Integration Point
| | [Documentation] | A keyword that creates an LDAP Integration Point. 
| | ...				| The value of Step1Fields should be the arguments from "Fill out the Following Fields of the Integration Point Step 1 form" in a list variable.
| | ...				| The value of Step2Fields should be the arguments from "Fill out the Following Fields of the LDAP Integration Point Step 2 form" in a list variable.
| | ...				| The value of Step3Mapping should be the arguments from "Map the Following Fields on the Integration Point Step 3 form" in a list variable.
| | ... 			| The value of Overwrite should be "Append Only", "Overlay Only", or "ppend/Overlay".
| | ...				| The value of ParentAttribute is the Parent RDO for the Destination RDO, which should be NULL or not entered when there is no Parent.
| | [ARGUMENTS]		| ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | ${Step3Overwrite} | ${Step3UniqueID} | ${ParentAttribute}=NULL
| | Open Create Integration Point
| | Fill out the Following Fields of the Integration Point Step 1 form | @{Step1Fields}
| | Proceed to the Next Step of the Integration Point wizard

| | Fill out the Following Fields of the LDAP Integration Point Step 2 form | @{Step2Fields}
| | Proceed to the Next Step of the Integration Point wizard
| | Wait Until Element Is Visible	| xpath=//select[@id='source-fields']/child::option	| 15s	| No Attribute fields were found.

| | Map the Following Fields on the Integration Point Step 3 form | @{Step3Mapping}
| | Select from select2 Dropdown	| s2id_overwrite | ${Step3Overwrite}
| | Select from select2 Dropdown	| s2id_overlay-identifier | ${Step3UniqueID}
| | Run Keyword Unless	| '${ParentAttribute}'=='NULL' | Select from select2 Dropdown | s2id_parent-identifier | ${ParentAttribute}
| | Click | id=save
| | Wait Until Keyword Succeeds	| 30s	| 2s	| Verify that the Following Integration Point Exists in the current Workspace	| ${Step1Fields[0]}

| Create FTP Integration Point
| | [Documentation] | A keyword that creates an FTP Integration Point.
| | ...				| The value of Step1Fields should be the arguments from "Fill out the Following Fields of the Integration Point Step 1 form" in a list variable.
| | ...				| The value of Step2Fields should be the arguments from "Fill out the Following Fields of the FTP Integration Point Step 2 form" in a list variable.
| | ...				| The value of Step3Mapping should be the arguments from "Map the Following Fields on the Integration Point Step 3 form" in a list variable.
| | ... 			| The value of Overwrite should be "Append Only", "Overlay Only", or "Append/Overlay".
| | ...				| The value of ParentAttribute is the Parent RDO for the Destination RDO, which should be NULL or not entered when there is no Parent.
| | [ARGUMENTS]		| ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | ${Step3Overwrite} | ${Step3UniqueID} | ${ParentAttribute}=NULL
| | Open Create Integration Point
| | Fill out the Following Fields of the Integration Point Step 1 form | @{Step1Fields}
| | Proceed to the Next Step of the Integration Point wizard

| | Fill out the Following Fields of the FTP Integration Point Step 2 form | @{Step2Fields}
| | Proceed to the Next Step of the Integration Point wizard
| | Wait Until Element Is Visible	| xpath=//select[@id='source-fields']/child::option	| 15s	| No Attribute fields were found.

| | Map the Following Fields on the Integration Point Step 3 form | @{Step3Mapping}
| | Select from select2 Dropdown	| s2id_overwrite			| ${Step3Overwrite}
| | Select from select2 Dropdown	| s2id_overlay-identifier	| ${Step3UniqueID}
| | Run Keyword Unless	| '${ParentAttribute}'=='NULL' | Select from select2 Dropdown | s2id_parent-identifier | ${ParentAttribute}
| | Click | id=save
| | Wait Until Keyword Succeeds	| 30s	| 2s	| Verify that the Following Integration Point Exists in the current Workspace	| ${Step1Fields[0]}

| Determine the current Step of the Create Integration Point Process
| | [Documentation]	| This keyword determines and returns which Step you are in on the Create Integration Point Process.
| | ...				| The returned value is in text form ("Set Integration Details", "Connect to Source", or "Map Fields"). 
| | ${ActualStep}=	| Get Text	| xpath=//div[@id='stepProgress']/descendant::li[contains(@class, 'in-progress')]
| | ${ActualStep}=	| Fetch From Left	| ${ActualStep}	| \n
| | [Return]		| ${ActualStep}

| Open Create Integration Point
| | [Documentation]	| Opens the create Integration Point page. 
| | Go to the Tab	| Integration Points
| | Click	| New Integration Point
| | Wait for then Select iFrame	| id=_externalPage	| 10s	| The Page never redirected after clicking "New Integration Point".

| Verify that the following field is not required
| | [Documentation]	| A keyword that verifies the specified field does not have the required field indicator (orange line).
| | [ARGUMENTS] 	| ${FieldName}
| | Page Should Contain Element		| xpath=//div[contains(text(), "${FieldName}")]	| The field "${FieldName}" was not present on the page.
| | Page Should Not Contain Element	| xpath=//div[contains(@class, "field-label") and contains(@class, "required") and contains(text(), "${FieldName}")]	| The field "${FieldName}" is required when it should not have been.
| | Page Should Contain Element		| xpath=//div[@class="field-label" and contains(text(), "${FieldName}")]	| The field "${FieldName}" has unexpected HTML. Please re-write this keyword.

| Verify that the following field is required
| | [Documentation]	| A keyword that verifies that the specified field has the required field indicator (orange line).
| | [ARGUMENTS] 	| ${FieldName}
| | Page Should Contain Element		| xpath=//div[contains(text(), "${FieldName}")]	| The field "${FieldName}" was not present on the page.
| | Page Should Not Contain Element	| xpath=//div[@class="field-label" and contains(text(), "${FieldName}")]	| The field "${FieldName}" is not required when it should have been.
| | Page Should Contain Element		| xpath=//div[contains(@class, "field-label") and contains(@class, "required") and contains(text(), "${FieldName}")]	| The field "${FieldName}" has unexpected HTML. Please re-write this keyword.

| Verify that the following radio buttons are grouped together
| | [Documentation]	| A keyword that verifies that a radio buttons set of options are correct.
| | ...				| [Tags] mainstream?
| | [ARGUMENTS] 	| ${GroupName}	| @{ExpectedOptions}
| | Page Should Contain Element	| xpath=//input[@type="radio" and @name="${GroupName}"]	| No radio button group with the name attribute "${GroupName}" was present on the page.
| | @{ActualOptions}=	| Get Element Text	| xpath=//input[@type="radio" and @name="${GroupName}"]/parent::*	| False
| | Sort List	| ${ActualOptions}
| | Sort List	| ${ExpectedOptions}
| | Lists Should Be Equal	| ${ExpectedOptions}	| ${ActualOptions}

| Verify that the following field ID has a text input
| | [Documentation]	| A keyword that verifies the specified field has an input type of Text.
| | [ARGUMENTS] 	| ${FieldID}
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::input[@id="${FieldID}"]	| The field ID of "${FieldID}" was not present on the page.
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::input[@type="text" and @id="${FieldID}"]	| The "${FieldID}" field does not have an input type of Text.

| Verify that the following field ID has a textarea input
| | [Documentation]	| A keyword that verifies the specified field has an input type of textarea.
| | [ARGUMENTS] 	| ${FieldID}
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::textarea[@id="${FieldID}"]	| The field ID of "${FieldID}" was not present on the page.
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::textarea[@id="${FieldID}"] | The "${FieldID}" field does not have an input type of Text Area.

| Verify that the following field ID has a password input
| | [Documentation]	| A keyword that verifies the specified field has an input type of Password.
| | [ARGUMENTS] 	| ${FieldID}
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::input[@id="${FieldID}"]	| The field ID of "${FieldID}" was not present on the page.
| | Page Should Contain Element	| xpath=//div[@class="field-value"]/child::input[@type="password" and @id="${FieldID}"]	| The "${FieldID}" field does not have an input type of Text.

| Verify that the following field ID has a droplist input
| | [Documentation]	| A keyword that verifies the specified field has an input type of a drop down list.
| | [ARGUMENTS]		| ${FieldID}
| | Page Should Contain Element	| xpath=//div[@id="${FieldID}"]	| The field ID of "${FieldID}" was not present on the page.
| | Page Should Contain Element	| xpath=//div[@class="select2-container filter-container" and @id="${FieldID}"]	| The field ID of "${FieldID}" does not have an input type of a drop down list.

| Verify that the following field ID has a listbox input
| | [Documentation]	| A keyword that verifies the specified field has an input type of a list box.
| | [ARGUMENTS]		| ${FieldID}
| | Page Should Contain Element	| xpath=//select[@id="${FieldID}"]	| The field ID of "${FieldID}" was not present on the page.
| | Page Should Contain Element	| xpath=//select[@class="list-box" and @id="${FieldID}"]	| The field ID of "${FieldID}" does not have an input type of a list box list.

| Verify that the following Card contains the following fields
| | [Documentation]	| A keyword that verifies that a Section contains the specified fields in the specified order
| | [ARGUMENTS]		| ${SectionHeading}	| @{ExpectedFields}
| | Element Should be Visible	| xpath=//div[@class="card" and descendant::text()="${SectionHeading}"]	| The Card "${SectionHeading}" was not found
| | @{ActualFields}=	| Get Element Text	| xpath=//div[@class="card" and descendant::text()="${SectionHeading}"]/descendant::div[contains(@class, "field-label")]	| False 
| | Remove values from list	| ${ActualFields}	| ${EMPTY}
| | Log	| Expected Fields: ${ExpectedFields}
| | Log	| Actual Fields: ${ActualFields}
| | Lists should be Equal	| ${ActualFields}	| ${ExpectedFields}

| Verify that you are on the following Step of the Create Integration Point Process
| | [Documentation]	| Verifies that you are on the given step of the Create Integration Point process.
| | ...				| Currently, the acceptable values are: "Set Integration Details", "Connect to Source", and "Map Fields"
| | [ARGUMENTS] 	| ${ExpectedStep}
| | Verify that the Header has the Following Text	| Create Integration Point
| | ${ActualStep}=	| Determine the current Step of the Create Integration Point Process
| | Run Keyword Unless	| "${ExpectedStep}" == "${ActualStep}"	| Fail	| The current step was not "${ExpectedStep}", it was "${ActualStep}".

| Verify the following Integration Point Field has the following Error
| | [Documentation]	| Verifies that the given field has the given error.
| | ... 			| Must be called from the Integration Point Create/Edit pages.
| | [ARGUMENTS] 	| ${FieldID}	| ${ErrorText}
| | ${StepText}=	| Determine the current Step of the Create Integration Point Process
| | Run Keyword If	| "${StepText}" == "Connect to Source"	| Wait for then Select iFrame	| id=configurationFrame	| 10s
| | ${FieldID}= | fetch from right | ${FieldID} | s2id_
| | Element Should Be Visible	| css=[id=${FieldID}]	| The field with the ID "${FieldID}" was not found.
| | Element Should Be Visible	| xpath=//*[@id='${FieldID}']/following-sibling::div/child::*[contains(@class, 'icon-error') and contains(@class, 'field-validation-error')]	| No error was found on the field with the ID "${FieldID}".
| | ${ActualText}=	| Get Text	| xpath=//*[@id='${FieldID}']/following-sibling::div/child::*[contains(@class, 'icon-error') and contains(@class, 'field-validation-error')]
| | Run Keyword Unless	| '${ActualText}' == '${ErrorText}'	| Fail	| The error was incorrect. It should have been "${ErrorText}" but it was actually "${ActualText}".
| | Run Keyword If	| "${StepText}" == "Connect to Source"	| Unselect Frame
| | Run Keyword If	| "${StepText}" == "Connect to Source"	| Select iFrame	| id=_externalPage

| Verify that a Card with the following Title Text is Visible
| | [Documentation]	| Verifies that a Card with the given title text is visible on the page.
| | [ARGUMENTS]		| ${ExpectedText}
| | Element Should Be Visible	| xpath=//div[@class='card']	| No cards were visible on the page.
| | Element Should Be Visible	| xpath=//div[@class='card']/descendant::span[@class="label title" and text()="${ExpectedText}"]	| No card with the title "${ExpectedText}" was visible on the page.

| Verify that the following Card contains the following Fields in Order
| | [Documentation]	| Verifies that the Card with the given Title Text has the given fields in the given order.
| | [ARGUMENTS]		| ${CardTitle}	| @{ExpectedFields}
| | Verify that a Card with the following Title Text is visible	| ${CardTitle}
| | @{ActualFields}=	| Get Element Text	| xpath=//div[@class='card' and descendant::text()="${CardTitle}"]/descendant::div[contains(@class, 'field-label')]	| False
| | Remove Values From List	| ${ActualFields}	| ${EMPTY}	| # Strip out the hidden fields
| | Log	| Expected Fields: ${ExpectedFields}
| | Log	| Actual Fields: ${ActualFields}
| | Lists Should Be Equal	| ${ExpectedFields}	| ${ActualFields}


*** Settings ***
| Library	| String
| Library	| Collections
| Library 	| ${KEYWORD_DIR}/kWebDriver.py
| Resource	| ${LEGAL_HOLD_KEYWORD_DIR}/MiscLegalHoldKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/DatabaseKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/StepOneKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/StepTwoKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/StepThreeKeywords.txt