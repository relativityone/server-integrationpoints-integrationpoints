
*** Settings ***
| Documentation 	| Verify that the Email Notification Recipients work correctly for given situations.
| Metadata			| Authors	| William Sehy
| Force Tags		| in-progress	| team.game_of_holds	| feature.integration_points
#| Suite Setup		| 
#| Test Setup		| 
#| Test Teardown 	| 
#| Suite Teardown	| 


*** Variables ***

| ${WorkspaceName}		| LDAP Sync
| ${IntegrationPoint1}	| Email Testing 0
| ${IntegrationPoint2}	| Email Testing 3
| ${IntegrationPoint3}	| Email Testing 11
| ${ConnectionPath}		| testing.corp/CN=Users,DC=testing,DC=corp
| ${ObjectFilterString}	| (department=*)
| ${Authentication}		| FastBind
| ${ConnectionUsername}	| testing\\administrator
| ${ConnectionPassword}	| P@ssw0rd@1
| ${ImportNestedItems}	| Yes


*** Test Cases ***

| The Email Notification Recipients field can display zero emails correctly
| | [Documentation]	| Verify that the 
| | ...				| 
| | [Tags]			| manual
| | Run the following manual steps:
| | ... | Preconditions:
| | ... | 1. An Integration Point ${IntegrationPoint1} has been created with the following values:
| | ... | - Email Notification Recipients: ${EMPTY}
| | ... |
| | ... | Steps:
| | ... | 1. View Integration Point	| ${IntegrationPoint1}
| | ... |
| | ... | Expected Results:
| | ... | The Email Notification Recipients field has the following value exactly: ${EMPTY}


| The Email Notification Recipients field can display three emails correctly
| | [Documentation]	| Verify that the 
| | ...				| 
| | [Tags]			| manual
| | Run the following manual steps:
| | ... | Preconditions:
| | ... | 1. An Integration Point ${IntegrationPoint2} has been created with the following values:
| | ... | - Email Notification Recipients: buser@lh.kcura.com;auser@lh.kcura.com;cuser@lh.kcura.com
| | ... |
| | ... | Steps:
| | ... | 1. View Integration Point	| ${IntegrationPoint2}
| | ... |
| | ... | Expected Results:
| | ... | The Email Notification Recipients field has the following value exactly:
| | ... | - auser@lh.kcura.com; buser@lh.kcura.com; cuser@lh.kcura.com


| The Email Notification Recipients field can display eleven emails
| | [Documentation]	| Verify that the 
| | ...				| 
| | [Tags]			| manual
| | Run the following manual steps:
| | ... | Preconditions:
| | ... | 1. An Integration Point ${IntegrationPoint3} has been created with the following values:
| | ... | - Email Notification Recipients: buser@lh.kcura.com;cuser@lh.kcura.com;Auser@lh.kcura.com;duser@lh.kcura.com;euser@lh.kcura.com;fuser@lh.kcura.com;guser@lh.kcura.com;huser@lh.kcura.com;iuser@lh.kcura.com;juser@lh.kcura.com;kuser@lh.kcura.com
| | ... |
| | ... | Steps:
| | ... | 1. View Integration Point	| ${IntegrationPoint3}
| | ... |
| | ... | Expected Results:
| | ... | The Email Notification Recipients field has the following value exactly:
| | ... | - buser@lh.kcura.com; cuser@lh.kcura.com; Auser@lh.kcura.com; duser@lh.kcura.com; euser@lh.kcura.com; fuser@lh.kcura.com; guser@lh.kcura.com; huser@lh.kcura.com; iuser@lh.kcura.com; juser@lh.kcura.com; kuser@lh.kcura.com


*** Keywords ***

| Verify that the following Field has the Following Value
| | [Documentation]	| This keyword verifies that the given field has the given value.
| | ...				| Written because "Verify the current layout has fields with the following values" does not work for some reason.
| | [ARGUMENTS]		| ${FieldName}	| ${ExpectedValue}
| | Element Should Be Visible	| xpath=//td[@class='dynamicViewFieldName' and text()="${FieldName}"]	| The field ${FieldName} was not visible.
| | ${ActualValue}=	| Get Text	| xpath=//td[@class='dynamicViewFieldName' and text()="${FieldName}"]/following-sibling::td[@class='dynamicViewFieldValue']
| | Should Be Equal As Strings	| ${ExpectedValue}	| ${ActualValue}

| Verify that the current Layout has the following Categories in Order
| | [Documentation]	| This keyword verifies that the given Categories are visible on the current Layout in the given order.
| | [ARGUMENTS]		| @{ExpectedCategories}
| | Element Should Be Visible	| id=_dynamicTemplate__kCuraScrollingDiv__dynamicViewFieldRenderer_span	| No Categories were found on the current Layout.
| | @{ActualCategories}=	| Get Element Text	| id=_dynamicTemplate__kCuraScrollingDiv__dynamicViewFieldRenderer_span	| False
| | Log	| Expected Categories: ${ExpectedCategories}
| | Log	| Actual Categories: ${ActualCategories}
| | Lists Should Be Equal	| ${ExpectedCategories}	| ${ActualCategories}

| Verify that the Layout Dropdown only has the following Layouts
| | [Documentation]	| This keyword verifies that the Layout dropdown has only the given Layouts in any order.
| | ...				| This keyword assumes that the Layout dropdown's name is "_dynamicTemplate$ctl03".
| | [ARGUMENTS]		| @{ExpectedLayouts}
| | Element Should Be Visible	| css=select[name='_dynamicTemplate$ctl03']	| The Layout dropdown was not found.
| | @{ActualLayouts}=	| Get Element Text	| css=select[name='_dynamicTemplate$ctl03'] > option	| False
| | Sort List	| ${ExpectedLayouts}
| | Sort List	| ${ActualLayouts}
| | Lists Should Be Equal	| ${ExpectedLayouts}	| ${ActualLayouts}

| Suite Setup Keyword
| | [Documentation]	| Create the Suite Preconditions
| | Setup connection to the relativity database
| | Open and Log in to Method
| | Setup connection to the Relativity Services API for Method	| ${WorkspaceName}
| | Enable Strict Mode for Layouts	| # Makes 'Verify the current layout has the following fields' ensure that only the given fields are present

# --------------------------------------------------------------------------------------------------------

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint1}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint1}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint2}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint2}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint3}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint3}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint4}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint4}

# --------------------------------------------------------------------------------------------------------

| | @{Step1Fields}=		| Create List	| 
| | ... | ${IntegrationPoint1}	| 
| | ... | Append/Overlay		| 
| | ... | LDAP					| 
| | ... | Custodian				| 
| | ... | No

| | @{Step2Fields}=		| Create List	| 
| | ... | ${ConnectionPath}		| 
| | ... | ${ObjectFilterString}	| 
| | ... | ${Authentication}		| 
| | ... | ${ConnectionUsername}	| 
| | ... | ${ConnectionPassword}	| 
| | ... | ${ImportNestedItems}

| | @{Step3Mapping}=	| Create List	| 
| | ... | Email			| mail			| 
| | ... | Department	| countrycode	| 
| | ... | First Name	| givenname		| 
| | ... | Last Name		| sn			| 
| | ... | UniqueID		| objectguid

| | Create Integration Point | ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | UniqueID

# --------------------------------------------------------------------------------------------------------

| | @{Step1Fields}=	| Create List	| 
| | ... | ${IntegrationPoint2}	| 
| | ... | Append/Overlay		| 
| | ... | LDAP					| 
| | ... | Custodian				| 
| | ... | Yes					| 
| | ... | Daily					| 
| | ... | NULL					| 
| | ... | NULL					| 
| | ... | 2/15/2025				| 
| | ... | 2/16/2025				| 
| | ... | 12:30 PM

| | @{Step2Fields}=	| Create List	| 
| | ... | ${ConnectionPath}		| 
| | ... | ${EMPTY}				| 
| | ... | ${Authentication}		| 
| | ... | ${EMPTY}				| 
| | ... | ${EMPTY}				| 
| | ... | ${ImportNestedItems}

| | Create Integration Point | ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | UniqueID
| | [Teardown]		| Drop connection to the relativity services api

| Delete the Objects created in the Suite then Close All Browsers
| | [Documentation]	| Delete the Integration Points created in this suite then closes all open browsers.
| | ...				| This is run as the Suite Teardown.
| | Setup connection to the Relativity Services API for Method	| ${WorkspaceName}

| | Delete the following Integration Point using API	| ${IntegrationPoint1}
| | Delete the following Integration Point using API	| ${IntegrationPoint2}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint3}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint3}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| ${IntegrationPoint4}
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| ${IntegrationPoint4}

| | Drop connection to the relativity services api
| | Close All Browsers


*** Settings ***
| Library	| ${KEYWORD_DIR}/kWebDriver.py
| Resource	| ${KEYWORD_DIR}/Relativity/Processing/Processing/Relativity_Keywords_General.txt
| Resource	| ${KEYWORD_DIR}/Relativity/Shared/Layouts/LayoutKeywords.txt
| Resource	| ${KEYWORD_DIR}/Relativity/Shared/RelativityKeywords.txt
| Resource	| ${LEGAL_HOLD_KEYWORD_DIR}/MiscMethodKeywords.txt
| Resource	| ${LEGAL_HOLD_KEYWORD_DIR}/NavigationKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/DatabaseKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/IntegrationPointKeywords.txt
