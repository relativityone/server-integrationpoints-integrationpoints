
*** Settings ***
| Documentation 	| Verify that the Integration Points tab's List View is correct.
| Metadata		    | Authors	| William Sehy
| Force Tags		| in-progress	| team.game_of_holds	| feature.integration_points
| Suite Setup		| Open and Log in to Legal Hold
#| Test Setup		| NONE
| Test Teardown 	| Capture Screenshot If Test Fails
| Suite Teardown	| Delete the Objects created in the Suite then Close All Browsers


*** Variables ***

| ${WorkspaceName}	| LDAP Sync
| ${ConnectionPath}			| testing.corp/CN=Users,DC=testing,DC=corp
| ${ObjectFilterString}		| (objectClass=*)
| ${Authentication}			| FastBind
| ${ConnectionUsername}		| testing\\administrator
| ${ConnectionPassword}		| P@ssw0rd@1
| ${ImportNestedItems}		| Yes
| ${New Integration Point Button}	| xpath=//a[@class='actionButtonSmall' and text()='New Integration Point']


*** Test Cases ***

| The Default View on the Integration Points List View
| | [Documentation] | Verifies that the default View on the Integration Points list view page.
| | [Tags]			| automated
| | Go to the Tab	| Integration Points
| | Verify that the view dropdown is set to the following value	| All Integration Points


| The Only View on the Integration Points List View is All Integration Points
| | [Documentation] | Verifies that the only View on the Integration Points list view page is "All Integration Points".
| | [Tags]			| automated
| | Go to the Tab	| Integration Points
| | Verify that the View Dropdown only has the following Views	| All Integration Points


| The Columns on the "All Integration Points" View are correct
| | [Documentation] | Verifies that the "All Integration Points" View on the Integration Points list view page has the correct columns.
| | [Tags]			| automated
| | Go to the Tab	| Integration Points
| | Verify that the item list contains the following fields	| 
| | ... | Name					| 
| | ... | Source Provider		| 
| | ... | Enable Scheduler		| 
| | ... | Last Runtime (UTC)	| 
| | ... | Next Scheduled Runtime (UTC)


| The New Job History Button is visible on the page
| | [Documentation] | Verifies that the "New Integration Point" Button is visible on the page.
| | [Tags]			| untested
| | Go to the Tab	| Integration Points
| | Element Should Be Visible	| ${New Integration Point Button}	| The "New Integration Point" Button was not visible on the page.


| The Item List on the "All Integration Points" View is sorted by Name
| | [Documentation] | Verifies that the Item List on the "All Integration Points" View is sorted by Name by default.
| | [Tags]			| automated
| | [Setup]			| Create Three Integration Points
| | Go to the Tab	| Integration Points
| | Verify that the Item List is sorted by the following Text Column in Ascending Order	| Name


*** Keywords ***

| Verify that the View Dropdown only has the following Views
| | [Documentation]	| This keyword verifies that the View dropdown has only the given views in any order.
| | ...				| This keyword assumes that the View dropdown's ID is "ctl00_viewsDropDown".
| | [ARGUMENTS]		| @{ExpectedViews}
| | Page Should Contain Element	| id=ctl00_viewsDropDown	| The View dropdown has not found.
| | @{ActualViews}=	| Get Element Text	| xpath=//select[@id='ctl00_viewsDropDown']/child::option	| False
| | Sort List	| ${ExpectedViews}
| | Sort List	| ${ActualViews}
| | Lists Should Be Equal	| ${ExpectedViews}	| ${ActualViews}

| Get the values for the following Column from the item list
| | [Documentation]	| Returns all of the values in the given column of the current page's Item List, assumed to have an ID of "ctl00_ctl00_itemList_tableDiv".
| | ...				| [Tags] itemlist
| | [ARGUMENTS]		| ${ColumnHeader}
| | ${_column_headers_cache}=	| Set Variable	| ${EMPTY}	| # Clear the column header cache
| | Unselect frame
| | Select iframe	| ListTemplateFrame
| | ${Table}=	| Find Element	| id=ctl00_ctl00_itemList_tableDiv
| | ${Headers}=	| Get Table Column Headers	| ${Table}
| | ${Column Index}=	| Get From Dictionary	| ${Headers}	| ${ColumnHeader}
| | ${Column Index}=	| Set Variable	| ${Column Index} - 1	| # Dictionary starts from 1, not from 0
| | @{Values}=	| Create list
| | @{Table}=	| Get table | ctl00_ctl00_itemList_listTable | 6
| | :FOR | ${Row} | IN | @{Table}
| | | Append to list | ${Values} | ${Row[${Column Index}].lower()}
| | [Return]	| ${Values}

| Verify that the Item List is sorted by the following Text Column in Ascending Order
| | [Documentation]	| Verifies that the Item List on the current page, assumed to have an ID of "ctl00_ctl00_itemList_tableDiv",
| | ...				| is sorted on the given Text Column in ascending order.
| | ...				| [Tags] itemlist
| | [ARGUMENTS]		| ${ColumnHeader}
| | @{Values}=	| Get the values for the following Column from the item list	| ${ColumnHeader}
| | ${SortedValues}=	| Copy List	| ${Values}
| | Sort List	| ${SortedValues}
| | Log	| Sorted List: ${SortedValues}
| | Log	| Actual List: ${Values}
| | Lists Should Be Equal	| ${SortedValues}	| ${Values}

| Create Three Integration Points
| | [Documentation]	| Create threee Integration Points.
| | Setup connection to the Relativity Services API for Legal Hold	| ${WorkspaceName}

| | @{Step1Fields}=		| Create List	| 
| | ... | List View Sort Testing	| 
| | ... | Junk Data
| | ... | LDAP						| 
| | ... | Custodian					| 
| | ... | No
| | @{Step2Fields}=		| Create List | 
| | ... | ${ConnectionPath}		| 
| | ... | ${ObjectFilterString}	| 
| | ... | ${Authentication}		| 
| | ... | ${ConnectionUsername}	| 
| | ... | ${ConnectionPassword}	| 
| | ... | ${ImportNestedItems}
| | @{Step3Mapping}=	| Create List	|
| | ... | Email			| mail			| 
| | ... | Department	| countrycode	| 
| | ... | First Name	| givenname		| 
| | ... | Last Name		| sn			| 
| | ... | UniqueID		| objectguid
| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| List View Sort Testing
| | Run Keyword Unless	| ${${IntegrationPointExists}}	| Create LDAP Integration Point | ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | Append/Overlay | UniqueID

| | @{Step1Fields}=	| Create List	| 
| | ... | Integration Point List View Testing	| 
| | ... | Junk Data
| | ... | LDAP									| 
| | ... | Custodian								| 
| | ... | No
| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| Integration Point List View Testing
| | Run Keyword Unless	| ${${IntegrationPointExists}}	| Create LDAP Integration Point | ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | Append/Overlay | UniqueID

| | @{Step1Fields}=	| Create List	| 
| | ... | Integration Point Sort Testing	| 
| | ... | Junk Data
| | ... | LDAP								| 
| | ... | Custodian							| 
| | ... | No
| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| Integration Point Sort Testing
| | Run Keyword Unless	| ${${IntegrationPointExists}}	| Create LDAP Integration Point | ${Step1Fields} | ${Step2Fields} | ${Step3Mapping} | Append/Overlay | UniqueID
| | [Teardown]		| Drop connection to the relativity services api

| Delete the Objects created in the Suite then Close All Browsers
| | [Documentation]	| Delete the Integration Point created in this suite then closes all open browsers.
| | ...				| This is run as the Suite Teardown.
| | Setup connection to the Relativity Services API for Legal Hold	| ${WorkspaceName}

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| Integration Point Sort Testing
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| Integration Point Sort Testing

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| Integration Point List View Testing
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| Integration Point List View Testing

| | ${IntegrationPointExists}=	| Determine if the Following Integration Point Exists in the current Workspace	| List View Sort Testing
| | Run Keyword If	| ${${IntegrationPointExists}}	| Delete the following Integration Point using API	| List View Sort Testing

| | Drop connection to the relativity services api
| | Close All Browsers


*** Settings ***
| Library	| Collections
| Library	| ${KEYWORD_DIR}/kWebDriver.py
| Resource	| ${KEYWORD_DIR}/Relativity/Shared/Views/ItemListKeywords.txt
| Resource	| ${LEGAL_HOLD_KEYWORD_DIR}/NavigationKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/DatabaseKeywords.txt
| Resource	| ${LDAP_KEYWORD_DIR}/IntegrationPointKeywords.txt
